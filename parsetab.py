
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitASS_ADD ASS_AND ASS_DIV ASS_MOD ASS_MUL ASS_OR ASS_SUB BOOLEAN BOOLLIT BREAK BYTE CHAR CLASS CONTINUE DO DOUBLE FLOAT FOR IDENTIFIER IMPORT INT LITERAL LONG NEW NUM_LITERAL OP_DEC OP_DIM OP_EQ OP_GE OP_INC OP_LAND OP_LE OP_LOR OP_NE PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VOID WHILEcodegen_prefix :codegen_postfix :codegen_shorthand :codegen_declarator :push :codegen_binop :codegen_assign :TypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' FieldDeclarations '}'\n    | ClassHeader '{' '}'\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    | NonStaticInitializer\n    | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName push '=' VariableInitializer codegen_declarator\n    VariableInitializer : Expression\n    | '{' '}'\n        | '{' ArrayInitializers '}'\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' LocalVariableDeclarationsAndStatements '}'\n    | '{' '}'\n    LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n    | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO codegen_do_init Statement  WHILE '(' Expression ')' ';' codegen_do_final\n    | FOR '(' ForInit codegen_for_init ForExpr codegen_for_expr ForIncr codegen_for_inc ')' Statement codegen_for\n    | FOR '(' ForInit codegen_for_init ForExpr codegen_for_expr ')' Statement codegen_for\n    codegen_do_init : codegen_do_final : codegen_for_init :codegen_for_expr :codegen_for_inc :codegen_for :ForInit : ExpressionStatements ';'\n    | LocalVariableDeclarationStatement\n    | ';'\n    ForExpr : Expression ';'\n    | ';'\n    ForIncr : ExpressionStatements ExpressionStatements : ExpressionStatement\n    | ExpressionStatements ',' ExpressionStatement\n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n    | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName\n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' '}'\n        | ClassAllocationExpression '{' '}'\n        | ArrayAllocationExpression '{' ArrayInitializers '}'\n        | ClassAllocationExpression '{' FieldDeclarations '}'\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n    | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC codegen_postfix\n    | PostfixExpression OP_DEC codegen_postfix\n    UnaryExpression : OP_INC UnaryExpression codegen_prefix\n    | OP_DEC UnaryExpression codegen_prefix\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression push\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n        | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression\n    | MultiplicativeExpression '*' push  CastExpression codegen_binop\n    | MultiplicativeExpression '/' push CastExpression codegen_binop\n    | MultiplicativeExpression '%' push CastExpression codegen_binop\n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression '+' push MultiplicativeExpression codegen_binop\n    | AdditiveExpression '-' push MultiplicativeExpression codegen_binop\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' push AdditiveExpression codegen_binop\n    | RelationalExpression '>' push AdditiveExpression codegen_binop\n    | RelationalExpression OP_LE push AdditiveExpression codegen_binop\n    | RelationalExpression OP_GE push AdditiveExpression codegen_binop\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ push RelationalExpression codegen_binop\n        | EqualityExpression OP_NE push RelationalExpression codegen_binop\n    AndExpression : EqualityExpression\n        | AndExpression '&' push EqualityExpression codegen_binop\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' push AndExpression codegen_binop\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' push ExclusiveOrExpression codegen_binop\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND push InclusiveOrExpression codegen_binop\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR push ConditionalAndExpression codegen_binop\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression push '=' ConditionalExpression codegen_assign\n    | UnaryExpression push  AssignmentOperator push AssignmentExpression codegen_shorthand\n    AssignmentOperator : ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,20,23,29,35,37,39,151,],[9,9,9,-36,9,-37,-21,-31,-38,-22,-39,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,172,173,201,211,213,215,216,282,296,],[15,15,15,15,-36,-32,-34,15,-46,-48,-49,-50,-51,15,15,15,-37,-33,-35,-21,15,-47,15,-31,-38,-22,15,-43,-53,-55,-58,-59,-60,-61,-62,15,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,240,243,15,-87,-76,-85,-86,15,-75,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[16,16,16,16,-36,-32,-34,16,-46,-48,-49,-50,-51,16,16,16,-37,-33,-35,-21,16,-47,16,-31,-38,-22,16,-43,-53,-55,-58,-59,-60,-61,-62,16,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,16,-87,-76,-85,-86,16,-75,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[17,17,17,17,-36,-32,-34,17,-46,-48,-49,-50,-51,17,17,17,-37,-33,-35,-21,17,-47,17,-31,-38,-22,17,-43,-53,-55,-58,-59,-60,-61,-62,17,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,17,-87,-76,-85,-86,17,-75,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[18,18,18,18,-36,-32,-34,18,-46,-48,-49,-50,-51,18,18,18,-37,-33,-35,-21,18,-47,18,-31,-38,-22,18,-43,-53,-55,-58,-59,-60,-61,-62,18,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,18,-87,-76,-85,-86,18,-75,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[19,19,19,19,-36,-32,-34,19,-46,-48,-49,-50,-51,19,19,19,-37,-33,-35,-21,55,-47,19,-31,-38,-22,55,-43,-53,-55,-58,-59,-60,-61,-62,19,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,55,-87,-76,-85,-86,55,-75,]),'$end':([1,2,3,4,5,7,8,10,20,21,22,23,24,28,29,34,35,37,39,42,135,151,],[0,-23,-28,-29,-30,-36,-32,-34,-25,-26,-27,-37,-33,-35,-21,-24,-31,-38,-22,-43,-42,-39,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,26,29,30,31,32,36,38,39,40,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,81,82,83,85,86,88,89,90,91,92,97,98,99,103,104,106,110,111,132,135,136,137,138,139,146,147,148,149,150,152,153,156,157,163,165,167,169,173,174,176,177,179,183,184,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,212,213,215,216,217,220,224,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[26,26,33,-46,-52,-48,-49,-50,-51,-40,-21,57,69,-47,70,70,-22,26,57,-43,-53,-55,-58,-59,-60,-61,-62,57,145,-92,-51,-8,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,26,-94,-95,-97,-98,145,-105,-100,-102,-103,-104,-110,26,164,166,26,-10,-11,26,26,26,-188,-189,26,-186,-187,26,-42,-54,-56,-57,145,-88,-91,-9,-174,26,-93,-96,-101,26,26,-125,-127,-129,70,26,26,-5,26,26,-5,-5,265,-5,267,-5,26,-5,-5,-5,-5,-5,-5,26,57,-5,-5,26,-5,-5,-5,-87,145,-76,-85,-86,26,-175,145,-99,26,26,26,-112,-118,-117,-124,-126,-128,26,-5,-227,-228,-229,-230,-231,-232,-233,26,26,26,26,26,26,26,26,26,26,26,26,57,26,26,26,26,26,26,26,-75,26,26,26,-116,26,26,26,26,26,26,26,-113,-120,26,-119,26,-111,-115,-107,26,-109,-115,-108,]),';':([10,25,26,27,28,29,35,37,39,40,42,44,45,46,47,48,49,50,54,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,88,89,90,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,138,141,142,143,144,145,146,147,149,151,152,153,154,155,156,157,163,164,165,166,167,168,169,170,175,178,180,181,182,185,186,187,209,210,211,213,214,215,216,219,220,225,227,232,233,234,235,236,237,238,239,240,241,242,243,256,258,259,262,263,265,267,277,280,281,285,286,288,291,296,297,299,305,306,307,308,309,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,333,334,335,336,337,339,341,343,344,345,346,347,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,375,376,377,378,382,383,385,387,389,390,391,392,393,394,],[29,29,-40,29,39,-21,39,39,-22,78,-43,29,138,-58,-59,-60,-61,-62,-92,-41,29,78,-94,-95,-97,-98,-105,-100,156,-102,-103,-104,-106,-110,165,167,169,-130,-234,-224,-5,-222,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-42,39,-57,-64,216,-65,-67,-83,-88,-91,-174,39,-93,-96,225,-67,-101,78,234,237,-125,238,-127,239,-129,-130,-190,-1,-1,-182,-5,-2,-2,-185,-63,216,-87,-76,-79,-85,-86,-84,-175,-99,-135,-112,309,-118,-117,-122,-124,-126,-128,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-69,-163,-169,-170,-171,-151,-75,-66,-78,-193,-191,-192,352,-116,-143,-7,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-70,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-77,-4,381,-123,-225,-3,-223,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-71,-202,-203,-166,-173,-198,-199,-200,-68,-226,387,78,-111,-115,-107,78,-109,-115,-108,]),'{':([11,29,30,33,39,40,41,42,43,44,46,47,48,49,50,53,54,55,69,72,73,74,75,76,78,79,81,82,83,85,123,124,135,136,137,138,140,142,146,147,149,152,153,156,157,165,167,169,200,201,210,211,213,214,215,216,220,222,225,237,238,239,276,282,285,286,288,296,299,300,301,332,336,337,339,346,372,373,385,387,389,390,391,392,393,394,],[30,-21,40,-45,-22,40,40,-43,-53,-55,-58,-59,-60,-61,-62,40,-92,40,-44,40,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,200,201,-42,-54,-56,-57,40,40,-88,-91,-174,-93,-96,-101,40,-125,-127,-129,276,40,40,-87,-76,-79,-85,-86,-175,-90,-99,-124,-126,-128,276,40,-169,-170,-171,-75,-78,276,-89,276,-168,-172,-167,-77,-166,-173,40,-111,-115,-107,40,-109,-115,-108,]),'BOOLEAN':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,60,-47,-22,60,60,-43,-53,-55,-58,-59,-60,-61,-62,60,-92,-51,60,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,60,60,60,60,60,-188,-189,60,-186,-187,60,-42,-54,-56,-57,-88,-91,60,-93,-96,-101,60,60,-125,-127,-129,60,60,-5,60,60,-5,-5,-5,-5,60,-5,-5,-5,-5,-5,-5,60,60,-5,-5,60,-5,-5,-5,-87,-76,-85,-86,60,-99,60,60,60,-112,-118,-117,-124,-126,-128,60,-5,-227,-228,-229,-230,-231,-232,-233,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-75,60,60,60,-116,60,60,60,60,60,60,60,-113,-120,60,-119,60,-111,-115,-107,60,-109,-115,-108,]),'CHAR':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,61,-47,-22,61,61,-43,-53,-55,-58,-59,-60,-61,-62,61,-92,-51,61,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,61,61,61,61,61,-188,-189,61,-186,-187,61,-42,-54,-56,-57,-88,-91,61,-93,-96,-101,61,61,-125,-127,-129,61,61,-5,61,61,-5,-5,-5,-5,61,-5,-5,-5,-5,-5,-5,61,61,-5,-5,61,-5,-5,-5,-87,-76,-85,-86,61,-99,61,61,61,-112,-118,-117,-124,-126,-128,61,-5,-227,-228,-229,-230,-231,-232,-233,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-75,61,61,61,-116,61,61,61,61,61,61,61,-113,-120,61,-119,61,-111,-115,-107,61,-109,-115,-108,]),'BYTE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,62,-47,-22,62,62,-43,-53,-55,-58,-59,-60,-61,-62,62,-92,-51,62,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,62,62,62,62,62,-188,-189,62,-186,-187,62,-42,-54,-56,-57,-88,-91,62,-93,-96,-101,62,62,-125,-127,-129,62,62,-5,62,62,-5,-5,-5,-5,62,-5,-5,-5,-5,-5,-5,62,62,-5,-5,62,-5,-5,-5,-87,-76,-85,-86,62,-99,62,62,62,-112,-118,-117,-124,-126,-128,62,-5,-227,-228,-229,-230,-231,-232,-233,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-75,62,62,62,-116,62,62,62,62,62,62,62,-113,-120,62,-119,62,-111,-115,-107,62,-109,-115,-108,]),'SHORT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,63,-47,-22,63,63,-43,-53,-55,-58,-59,-60,-61,-62,63,-92,-51,63,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,63,63,63,63,63,-188,-189,63,-186,-187,63,-42,-54,-56,-57,-88,-91,63,-93,-96,-101,63,63,-125,-127,-129,63,63,-5,63,63,-5,-5,-5,-5,63,-5,-5,-5,-5,-5,-5,63,63,-5,-5,63,-5,-5,-5,-87,-76,-85,-86,63,-99,63,63,63,-112,-118,-117,-124,-126,-128,63,-5,-227,-228,-229,-230,-231,-232,-233,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-75,63,63,63,-116,63,63,63,63,63,63,63,-113,-120,63,-119,63,-111,-115,-107,63,-109,-115,-108,]),'INT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,64,-47,-22,64,64,-43,-53,-55,-58,-59,-60,-61,-62,64,-92,-51,64,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,64,64,64,64,64,-188,-189,64,-186,-187,64,-42,-54,-56,-57,-88,-91,64,-93,-96,-101,64,64,-125,-127,-129,64,64,-5,64,64,-5,-5,-5,-5,64,-5,-5,-5,-5,-5,-5,64,64,-5,-5,64,-5,-5,-5,-87,-76,-85,-86,64,-99,64,64,64,-112,-118,-117,-124,-126,-128,64,-5,-227,-228,-229,-230,-231,-232,-233,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-75,64,64,64,-116,64,64,64,64,64,64,64,-113,-120,64,-119,64,-111,-115,-107,64,-109,-115,-108,]),'LONG':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,65,-47,-22,65,65,-43,-53,-55,-58,-59,-60,-61,-62,65,-92,-51,65,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,65,65,65,65,65,-188,-189,65,-186,-187,65,-42,-54,-56,-57,-88,-91,65,-93,-96,-101,65,65,-125,-127,-129,65,65,-5,65,65,-5,-5,-5,-5,65,-5,-5,-5,-5,-5,-5,65,65,-5,-5,65,-5,-5,-5,-87,-76,-85,-86,65,-99,65,65,65,-112,-118,-117,-124,-126,-128,65,-5,-227,-228,-229,-230,-231,-232,-233,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-75,65,65,65,-116,65,65,65,65,65,65,65,-113,-120,65,-119,65,-111,-115,-107,65,-109,-115,-108,]),'FLOAT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,66,-47,-22,66,66,-43,-53,-55,-58,-59,-60,-61,-62,66,-92,-51,66,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,66,66,66,66,66,-188,-189,66,-186,-187,66,-42,-54,-56,-57,-88,-91,66,-93,-96,-101,66,66,-125,-127,-129,66,66,-5,66,66,-5,-5,-5,-5,66,-5,-5,-5,-5,-5,-5,66,66,-5,-5,66,-5,-5,-5,-87,-76,-85,-86,66,-99,66,66,66,-112,-118,-117,-124,-126,-128,66,-5,-227,-228,-229,-230,-231,-232,-233,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-75,66,66,66,-116,66,66,66,66,66,66,66,-113,-120,66,-119,66,-111,-115,-107,66,-109,-115,-108,]),'DOUBLE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,67,-47,-22,67,67,-43,-53,-55,-58,-59,-60,-61,-62,67,-92,-51,67,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,67,67,67,67,67,-188,-189,67,-186,-187,67,-42,-54,-56,-57,-88,-91,67,-93,-96,-101,67,67,-125,-127,-129,67,67,-5,67,67,-5,-5,-5,-5,67,-5,-5,-5,-5,-5,-5,67,67,-5,-5,67,-5,-5,-5,-87,-76,-85,-86,67,-99,67,67,67,-112,-118,-117,-124,-126,-128,67,-5,-227,-228,-229,-230,-231,-232,-233,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-75,67,67,67,-116,67,67,67,67,67,67,67,-113,-120,67,-119,67,-111,-115,-107,67,-109,-115,-108,]),'VOID':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-46,-48,-49,-50,-51,-21,68,-47,-22,68,68,-43,-53,-55,-58,-59,-60,-61,-62,68,-92,-51,68,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,68,68,68,68,68,-188,-189,68,-186,-187,68,-42,-54,-56,-57,-88,-91,68,-93,-96,-101,68,68,-125,-127,-129,68,68,-5,68,68,-5,-5,-5,-5,68,-5,-5,-5,-5,-5,-5,68,68,-5,-5,68,-5,-5,-5,-87,-76,-85,-86,68,-99,68,68,68,-112,-118,-117,-124,-126,-128,68,-5,-227,-228,-229,-230,-231,-232,-233,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-75,68,68,68,-116,68,68,68,68,68,68,68,-113,-120,68,-119,68,-111,-115,-107,68,-109,-115,-108,]),'.':([25,26,27,57,59,60,61,62,63,64,65,66,67,68,70,91,92,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,161,162,170,171,185,186,220,227,240,241,242,243,262,263,265,267,277,281,285,286,288,291,311,316,317,322,331,333,336,337,339,341,372,373,],[36,-40,38,-40,36,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,172,173,189,191,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,172,173,173,172,-2,-2,-175,-135,-149,-159,-147,-148,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'[':([26,58,59,60,61,62,63,64,65,66,67,68,70,92,117,121,125,126,127,128,129,130,162,170,204,227,240,242,243,265,267,285,288,291,311,316,317,322,337,341,373,],[-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,174,193,-136,-137,-138,-139,-140,-141,-142,174,174,289,-135,-149,-147,-148,-146,-145,289,-171,-151,-143,-135,-135,-144,-172,-150,-173,]),'OP_DIM':([26,56,57,58,59,60,61,62,63,64,65,66,67,68,70,91,92,142,144,145,148,149,155,161,162,204,210,214,219,220,230,231,285,286,288,299,303,336,337,346,373,],[-40,149,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,-10,-11,214,219,-83,220,-174,219,149,149,149,214,-79,-84,-175,220,220,149,220,-171,-78,219,220,-172,-77,-173,]),'OP_INC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,157,162,163,165,167,169,170,174,176,177,179,183,184,185,186,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,308,309,310,311,313,314,316,317,322,331,332,333,336,337,339,341,342,349,350,352,372,373,380,381,385,387,389,390,391,392,393,394,],[-40,97,-41,97,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,97,97,-130,97,97,97,-188,-189,185,97,-176,-177,-186,-187,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-93,-96,-101,97,-130,97,-125,-127,-129,-130,97,97,-5,97,97,-5,-2,-2,-5,-5,-5,97,-5,-5,-5,-5,-5,-5,97,-5,-5,97,-5,-5,-5,-175,-99,-135,97,97,-112,-118,-117,-124,-126,-128,-149,-159,-147,-148,97,-5,-227,-228,-229,-230,-231,-232,-233,97,97,-178,-179,97,-146,97,-145,97,97,97,97,97,97,97,97,-162,-163,97,97,-169,-170,97,-171,97,-151,97,97,97,97,97,-116,97,-143,97,97,-135,-135,-144,-164,97,-165,-168,-172,-167,-150,97,97,-113,-120,-166,-173,97,-119,97,-111,-115,-107,97,-109,-115,-108,]),'OP_DEC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,157,162,163,165,167,169,170,174,176,177,179,183,184,185,186,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,308,309,310,311,313,314,316,317,322,331,332,333,336,337,339,341,342,349,350,352,372,373,380,381,385,387,389,390,391,392,393,394,],[-40,98,-41,98,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,98,98,-130,98,98,98,-188,-189,186,98,-176,-177,-186,-187,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-93,-96,-101,98,-130,98,-125,-127,-129,-130,98,98,-5,98,98,-5,-2,-2,-5,-5,-5,98,-5,-5,-5,-5,-5,-5,98,-5,-5,98,-5,-5,-5,-175,-99,-135,98,98,-112,-118,-117,-124,-126,-128,-149,-159,-147,-148,98,-5,-227,-228,-229,-230,-231,-232,-233,98,98,-178,-179,98,-146,98,-145,98,98,98,98,98,98,98,98,-162,-163,98,98,-169,-170,98,-171,98,-151,98,98,98,98,98,-116,98,-143,98,98,-135,-135,-144,-164,98,-165,-168,-172,-167,-150,98,98,-113,-120,-166,-173,98,-119,98,-111,-115,-107,98,-109,-115,-108,]),'=':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,144,145,149,155,162,170,175,178,180,181,182,185,186,187,218,219,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-5,-83,-174,-5,-130,-130,245,-1,-1,-182,-5,-2,-2,-185,300,-84,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'ASS_MUL':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-130,-130,247,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'ASS_DIV':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-130,-130,248,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'ASS_MOD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-130,-130,249,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'ASS_ADD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-130,-130,250,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'ASS_SUB':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-130,-130,251,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'ASS_AND':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-130,-130,252,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'ASS_OR':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-130,-5,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,-174,-130,-130,253,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,-168,-172,-167,-150,-166,-173,]),'*':([26,38,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,334,335,336,337,339,341,343,344,345,372,373,375,376,377,],[-40,71,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,206,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,206,206,-168,-172,-167,-150,-6,-6,-6,-166,-173,-198,-199,-200,]),'/':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,334,335,336,337,339,341,343,344,345,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,207,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,207,207,-168,-172,-167,-150,-6,-6,-6,-166,-173,-198,-199,-200,]),'%':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,334,335,336,337,339,341,343,344,345,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,208,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,-164,-165,208,208,-168,-172,-167,-150,-6,-6,-6,-166,-173,-198,-199,-200,]),'+':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,157,162,163,165,167,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,256,258,259,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,305,306,307,308,309,310,311,313,314,316,317,322,325,326,327,328,331,332,333,334,335,336,337,339,341,342,343,344,345,349,350,352,370,371,372,373,375,376,377,380,381,385,387,389,390,391,392,393,394,],[-40,103,-41,103,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,103,103,-130,-5,103,103,103,-197,-183,-188,-189,-184,103,-176,-177,-186,-187,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,202,-201,-174,-93,-96,-101,103,-130,103,-125,-127,-129,-130,103,-190,103,-5,-1,103,-1,-182,-5,103,-5,-2,-2,-185,-5,-5,-5,103,-5,-5,-5,-5,-5,-5,103,-5,-5,103,-5,-5,-5,-175,-99,-135,103,103,-112,-118,-117,-124,-126,-128,-149,-159,-147,-148,103,-5,-227,-228,-229,-230,-231,-232,-233,103,-180,-181,-190,103,-178,-179,103,-146,103,-145,103,103,103,103,103,103,103,103,-162,-163,103,103,-169,-170,103,-171,103,-151,103,103,103,103,-193,-191,-192,103,-116,103,-143,103,103,-135,-135,-144,202,202,202,202,-164,103,-165,-6,-6,-168,-172,-167,-150,103,-6,-6,-6,103,-113,-120,-202,-203,-166,-173,-198,-199,-200,103,-119,103,-111,-115,-107,103,-109,-115,-108,]),'-':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,157,162,163,165,167,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,256,258,259,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,305,306,307,308,309,310,311,313,314,316,317,322,325,326,327,328,331,332,333,334,335,336,337,339,341,342,343,344,345,349,350,352,370,371,372,373,375,376,377,380,381,385,387,389,390,391,392,393,394,],[-40,104,-41,104,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,104,104,-130,-5,104,104,104,-197,-183,-188,-189,-184,104,-176,-177,-186,-187,-131,-132,-133,-134,-155,-158,-136,-160,-161,-137,-138,-139,-140,-141,-142,203,-201,-174,-93,-96,-101,104,-130,104,-125,-127,-129,-130,104,-190,104,-5,-1,104,-1,-182,-5,104,-5,-2,-2,-185,-5,-5,-5,104,-5,-5,-5,-5,-5,-5,104,-5,-5,104,-5,-5,-5,-175,-99,-135,104,104,-112,-118,-117,-124,-126,-128,-149,-159,-147,-148,104,-5,-227,-228,-229,-230,-231,-232,-233,104,-180,-181,-190,104,-178,-179,104,-146,104,-145,104,104,104,104,104,104,104,104,-162,-163,104,104,-169,-170,104,-171,104,-151,104,104,104,104,-193,-191,-192,104,-116,104,-143,104,104,-135,-135,-144,203,203,203,203,-164,104,-165,-6,-6,-168,-172,-167,-150,104,-6,-6,-6,104,-113,-120,-202,-203,-166,-173,-198,-199,-200,104,-119,104,-111,-115,-107,104,-109,-115,-108,]),'<':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,196,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,196,196,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'>':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,197,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,197,197,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'OP_LE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,198,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,198,198,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'OP_GE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,-155,-158,-136,199,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,-144,199,199,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'OP_EQ':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,194,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,194,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'OP_NE':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,-132,-133,-134,195,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,195,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'&':([26,70,92,95,100,101,105,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,-131,192,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,192,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'^':([26,70,92,95,100,101,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,-176,-177,190,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,190,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'|':([26,70,92,95,100,101,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,-184,188,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-135,-135,188,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-217,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'OP_LAND':([26,70,92,95,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,-197,-183,184,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,184,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'?':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,176,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'OP_LOR':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,162,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-130,-5,177,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,]),'(':([26,40,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,78,79,81,82,83,85,86,87,90,92,97,98,99,103,104,106,110,111,115,119,121,125,126,127,128,129,130,133,144,145,152,153,156,157,162,163,165,167,169,170,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,219,225,227,228,229,232,234,235,237,238,239,240,242,243,245,246,247,248,249,250,251,252,253,255,261,264,265,266,267,268,270,271,272,273,274,275,276,283,284,287,289,291,293,294,295,300,304,308,309,310,311,313,314,317,322,332,341,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[-40,86,150,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,86,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,86,163,86,-154,179,179,183,-188,-189,179,-186,-187,-153,-155,-152,-137,-138,-139,-140,-141,-142,205,217,-83,-93,-96,-101,86,-154,86,-125,-127,-129,-154,86,86,-5,86,86,-5,-5,-5,-5,86,-5,-5,-5,-5,-5,-5,86,-5,-5,287,86,-5,-5,-5,-84,-99,179,183,183,-112,-118,-117,-124,-126,-128,-149,-147,-148,183,-5,-227,-228,-229,-230,-231,-232,-233,183,183,183,-146,183,-145,183,183,183,183,183,183,183,86,183,183,86,86,-151,183,183,183,86,349,86,-116,86,-143,86,183,179,-144,86,-150,86,86,-113,-120,86,-119,86,-111,-115,-107,86,-109,-115,-108,]),')':([26,60,61,62,63,64,65,66,67,68,70,84,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,145,149,150,158,159,160,161,162,170,175,178,180,181,182,185,186,187,205,217,219,220,221,223,227,230,231,236,240,241,242,243,256,257,258,259,260,262,263,265,267,277,281,285,286,287,288,290,291,292,298,303,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,338,339,341,343,344,345,348,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,374,375,376,377,379,380,381,382,384,386,388,],[-40,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,-106,-234,-224,-5,-222,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-83,-174,222,227,228,229,-194,-130,-130,-190,-1,-1,-182,-5,-2,-2,-185,291,299,-84,-175,301,-80,-135,-195,-196,-122,-149,-159,-147,-148,-180,316,-181,-190,317,-178,-179,-146,-145,-162,-163,-169,-170,339,-171,341,-151,-156,346,-82,-193,-191,-192,-143,-7,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,372,-167,-150,-6,-6,-6,-81,-113,-120,-123,-225,-3,-223,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-157,-198,-199,-200,383,385,-119,-226,-114,-121,391,]),',':([26,70,84,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,141,143,144,145,149,154,155,170,175,178,180,181,182,185,186,187,209,219,220,221,223,227,233,236,240,241,242,243,256,258,259,262,263,265,267,277,278,279,280,281,285,286,288,290,291,292,297,298,303,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,343,344,345,347,348,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,382,386,],[-40,-41,-106,-130,-234,-224,-5,-222,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,212,-65,-67,-83,-174,212,-67,-130,-190,-1,-1,-182,-5,-2,-2,-185,212,-84,-175,302,-80,-135,310,-122,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,-162,332,-72,-69,-163,-169,-170,-171,342,-151,-156,-66,302,-82,-193,-191,-192,-143,-7,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-70,332,-164,-74,-165,-6,-6,-168,-172,342,-167,-150,-6,-6,-6,-4,-81,-123,-225,-3,-223,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-71,-73,-202,-203,-166,-173,-157,-198,-199,-200,-68,-226,310,]),']':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,244,256,258,259,262,263,265,267,269,277,281,285,286,288,291,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,340,341,343,344,345,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,382,],[-40,-41,-234,-224,-5,-222,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,311,-180,-181,-190,-178,-179,-146,-145,322,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-7,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,373,-150,-6,-6,-6,-225,-3,-223,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,-226,]),':':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,170,175,178,180,181,182,185,186,187,220,227,240,241,242,243,254,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,382,],[-40,-41,-234,-224,-5,-222,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-174,-130,-190,-1,-1,-182,-5,-2,-2,-185,-175,-135,-149,-159,-147,-148,314,-180,-181,-190,-178,-179,-146,-145,-162,-163,-169,-170,-171,-151,-193,-191,-192,-143,-7,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-164,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-225,-3,-223,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-202,-203,-166,-173,-198,-199,-200,-226,]),'}':([26,29,30,39,40,41,42,43,44,46,47,48,49,50,54,70,72,73,74,75,76,78,79,81,82,83,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,146,147,149,152,153,156,165,167,169,170,175,178,180,181,182,185,186,187,200,201,211,213,215,216,220,225,227,237,238,239,240,241,242,243,256,258,259,262,263,265,267,276,277,278,279,280,281,282,285,286,288,291,296,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,341,343,344,345,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,382,387,389,390,392,393,394,],[-40,-21,42,-22,73,135,-43,-53,-55,-58,-59,-60,-61,-62,-92,-41,152,-94,-95,-97,-98,-105,-100,-102,-103,-104,-234,-224,-5,-222,-197,-183,-220,-184,-218,-176,-177,-216,-131,-214,-132,-133,-134,-212,-155,-158,-136,-209,-160,-161,-137,-138,-139,-140,-141,-142,-204,-201,-42,-54,-56,-57,-88,-91,-174,-93,-96,-101,-125,-127,-129,-130,-190,-1,-1,-182,-5,-2,-2,-185,277,281,-87,-76,-85,-86,-175,-99,-135,-124,-126,-128,-149,-159,-147,-148,-180,-181,-190,-178,-179,-146,-145,329,-162,331,-72,-69,-163,333,-169,-170,-171,-151,-75,-193,-191,-192,-143,-7,-6,-135,-135,-6,-6,-6,-6,-144,-6,-6,-6,-6,-6,-6,-70,368,-164,-74,-165,-6,-6,-168,-172,-167,-150,-6,-6,-6,-225,-3,-223,-221,-219,-217,-215,-213,-210,-211,-205,-206,-207,-208,-71,-73,-202,-203,-166,-173,-198,-199,-200,-226,-111,-115,-107,-109,-115,-108,]),'DO':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,157,165,167,169,225,237,238,239,385,387,389,390,391,392,393,394,],[85,85,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,-93,-96,-101,85,-125,-127,-129,-99,-124,-126,-128,85,-111,-115,-107,85,-109,-115,-108,]),'FOR':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,157,165,167,169,225,237,238,239,385,387,389,390,391,392,393,394,],[87,87,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,-93,-96,-101,87,-125,-127,-129,-99,-124,-126,-128,87,-111,-115,-107,87,-109,-115,-108,]),'BREAK':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,157,165,167,169,225,237,238,239,385,387,389,390,391,392,393,394,],[88,88,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,-93,-96,-101,88,-125,-127,-129,-99,-124,-126,-128,88,-111,-115,-107,88,-109,-115,-108,]),'CONTINUE':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,157,165,167,169,225,237,238,239,385,387,389,390,391,392,393,394,],[89,89,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,-93,-96,-101,89,-125,-127,-129,-99,-124,-126,-128,89,-111,-115,-107,89,-109,-115,-108,]),'RETURN':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,157,165,167,169,225,237,238,239,385,387,389,390,391,392,393,394,],[90,90,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,-93,-96,-101,90,-125,-127,-129,-99,-124,-126,-128,90,-111,-115,-107,90,-109,-115,-108,]),'~':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[110,110,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,110,110,110,110,110,-188,-189,110,-186,-187,-93,-96,-101,110,110,-125,-127,-129,110,110,-5,110,110,-5,-5,-5,-5,110,-5,-5,-5,-5,-5,-5,110,-5,-5,110,-5,-5,-5,-99,110,110,110,-112,-118,-117,-124,-126,-128,110,-5,-227,-228,-229,-230,-231,-232,-233,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-116,110,110,110,110,110,110,110,-113,-120,110,-119,110,-111,-115,-107,110,-109,-115,-108,]),'!':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[111,111,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,111,111,111,111,111,-188,-189,111,-186,-187,-93,-96,-101,111,111,-125,-127,-129,111,111,-5,111,111,-5,-5,-5,-5,111,-5,-5,-5,-5,-5,-5,111,-5,-5,111,-5,-5,-5,-99,111,111,111,-112,-118,-117,-124,-126,-128,111,-5,-227,-228,-229,-230,-231,-232,-233,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-116,111,111,111,111,111,111,111,-113,-120,111,-119,111,-111,-115,-107,111,-109,-115,-108,]),'THIS':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,157,163,165,167,169,173,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[119,119,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,119,119,119,119,119,-188,-189,119,-186,-187,-93,-96,-101,119,119,-125,-127,-129,242,119,119,-5,119,119,-5,-5,-5,-5,119,-5,-5,-5,-5,-5,-5,119,-5,-5,119,-5,-5,-5,-99,119,119,119,-112,-118,-117,-124,-126,-128,119,-5,-227,-228,-229,-230,-231,-232,-233,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-116,119,119,119,119,119,119,119,-113,-120,119,-119,119,-111,-115,-107,119,-109,-115,-108,]),'LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[125,125,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,125,125,125,125,125,-188,-189,125,-186,-187,-93,-96,-101,125,125,-125,-127,-129,125,125,-5,125,125,-5,-5,-5,-5,125,-5,-5,-5,-5,-5,-5,125,-5,-5,125,-5,-5,-5,-99,125,125,125,-112,-118,-117,-124,-126,-128,125,-5,-227,-228,-229,-230,-231,-232,-233,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-116,125,125,125,125,125,125,125,-113,-120,125,-119,125,-111,-115,-107,125,-109,-115,-108,]),'NUM_LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[126,126,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,126,126,126,126,126,-188,-189,126,-186,-187,-93,-96,-101,126,126,-125,-127,-129,126,126,-5,126,126,-5,-5,-5,-5,126,-5,-5,-5,-5,-5,-5,126,-5,-5,126,-5,-5,-5,-99,126,126,126,-112,-118,-117,-124,-126,-128,126,-5,-227,-228,-229,-230,-231,-232,-233,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-116,126,126,126,126,126,126,126,-113,-120,126,-119,126,-111,-115,-107,126,-109,-115,-108,]),'BOOLLIT':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,157,163,165,167,169,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[127,127,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,127,127,127,127,127,-188,-189,127,-186,-187,-93,-96,-101,127,127,-125,-127,-129,127,127,-5,127,127,-5,-5,-5,-5,127,-5,-5,-5,-5,-5,-5,127,-5,-5,127,-5,-5,-5,-99,127,127,127,-112,-118,-117,-124,-126,-128,127,-5,-227,-228,-229,-230,-231,-232,-233,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-116,127,127,127,127,127,127,127,-113,-120,127,-119,127,-111,-115,-107,127,-109,-115,-108,]),'NEW':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,157,163,165,167,169,173,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,309,310,313,314,317,332,342,349,350,352,380,381,385,387,389,390,391,392,393,394,],[132,132,-94,-95,-97,-98,-105,-100,-102,-103,-104,-110,132,132,132,132,132,-188,-189,132,-186,-187,-93,-96,-101,132,132,-125,-127,-129,132,132,132,-5,132,132,-5,-5,-5,-5,132,-5,-5,-5,-5,-5,-5,132,-5,-5,132,-5,-5,-5,-99,132,132,132,-112,-118,-117,-124,-126,-128,132,-5,-227,-228,-229,-230,-231,-232,-233,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-116,132,132,132,132,132,132,132,-113,-120,132,-119,132,-111,-115,-107,132,-109,-115,-108,]),'WHILE':([73,78,79,81,82,83,152,156,165,167,169,226,237,238,239,387,389,390,392,393,394,],[-94,-105,-100,-102,-103,-104,-93,-101,-125,-127,-129,304,-124,-126,-128,-111,-115,-107,-109,-115,-108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,20,]),'TypeDeclarations':([0,3,4,20,],[5,21,22,34,]),'ImportStatement':([0,3,4,20,],[7,7,23,23,]),'TypeDeclarationOptSemi':([0,3,4,5,20,21,22,34,],[8,8,8,24,8,24,24,24,]),'TypeDeclaration':([0,3,4,5,20,21,22,30,34,41,201,282,],[10,10,10,10,10,10,10,50,10,50,50,50,]),'ClassHeader':([0,3,4,5,20,21,22,30,34,41,201,282,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,20,21,22,30,34,41,201,282,],[12,12,12,12,12,12,12,51,12,51,51,51,]),'ClassWord':([0,3,4,5,12,20,21,22,30,34,41,51,201,282,],[13,13,13,13,31,13,13,13,13,13,13,31,13,13,]),'Modifier':([0,3,4,5,12,20,21,22,30,34,41,51,201,282,],[14,14,14,14,32,14,14,14,14,14,14,32,14,14,]),'QualifiedName':([6,9,30,40,41,51,72,86,90,97,98,99,106,132,150,157,163,174,176,179,183,193,200,201,205,217,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,300,302,308,310,313,314,317,332,342,349,380,385,391,],[25,27,59,92,59,59,92,162,170,170,170,170,170,59,59,170,92,170,170,170,162,170,170,59,170,59,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,59,170,170,170,170,170,170,170,170,59,170,170,170,170,170,170,170,170,170,170,170,]),'SemiColons':([10,25,27,44,71,],[28,35,37,137,151,]),'FieldDeclarations':([30,201,],[41,282,]),'FieldDeclarationOptSemi':([30,41,201,282,],[43,136,43,136,]),'FieldDeclaration':([30,41,201,282,],[44,44,44,44,]),'FieldVariableDeclaration':([30,41,201,282,],[45,45,45,45,]),'MethodDeclaration':([30,41,201,282,],[46,46,46,46,]),'ConstructorDeclaration':([30,41,201,282,],[47,47,47,47,]),'StaticInitializer':([30,41,201,282,],[48,48,48,48,]),'NonStaticInitializer':([30,41,201,282,],[49,49,49,49,]),'TypeSpecifier':([30,40,41,51,72,150,163,201,217,282,302,],[52,77,52,139,77,224,77,52,224,52,224,]),'ConstructorDeclarator':([30,41,51,201,282,],[53,53,140,53,53,]),'Block':([30,40,41,53,55,72,140,142,157,201,210,282,385,391,],[54,83,54,146,147,83,211,215,83,54,215,54,83,83,]),'TypeName':([30,40,41,51,72,132,150,163,201,217,282,302,],[56,56,56,56,56,204,56,56,56,56,56,56,]),'PrimitiveType':([30,40,41,51,72,86,90,97,98,99,106,132,150,157,163,174,176,179,183,193,200,201,205,217,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,300,302,308,310,313,314,317,332,342,349,380,385,391,],[58,91,58,58,91,161,171,171,171,171,171,58,58,171,91,171,171,171,161,171,171,58,171,58,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,58,171,171,171,171,171,171,171,171,58,171,171,171,171,171,171,171,171,171,171,171,]),'LocalVariableDeclarationsAndStatements':([40,],[72,]),'LocalVariableDeclarationOrStatement':([40,72,],[74,153,]),'LocalVariableDeclarationStatement':([40,72,163,],[75,75,235,]),'Statement':([40,72,157,385,391,],[76,76,226,389,393,]),'EmptyStatement':([40,72,157,385,391,],[79,79,79,79,79,]),'ExpressionStatement':([40,72,157,163,310,380,385,391,],[80,80,80,236,353,236,80,80,]),'IterationStatement':([40,72,157,385,391,],[81,81,81,81,81,]),'JumpStatement':([40,72,157,385,391,],[82,82,82,82,82,]),'Expression':([40,72,86,90,157,163,174,176,179,183,193,200,205,276,287,289,300,308,310,332,342,349,380,385,391,],[84,84,158,168,84,84,244,254,257,260,269,280,292,280,292,340,280,351,84,280,374,379,84,84,84,]),'AssignmentExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,276,287,289,300,308,310,313,332,342,349,380,385,391,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,355,93,93,93,93,93,93,]),'ConditionalExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[94,94,94,94,94,94,94,94,94,94,94,94,94,312,94,94,94,94,94,94,94,356,94,94,94,94,94,94,]),'UnaryExpression':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,332,342,349,380,385,391,],[95,95,95,95,178,180,182,187,95,95,95,95,95,95,95,95,95,182,182,182,182,182,182,182,182,182,182,182,182,182,182,95,182,182,95,95,182,182,182,95,95,95,95,182,95,95,95,95,95,95,]),'ConditionalOrExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ArithmeticUnaryOperator':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,332,342,349,380,385,391,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'CastExpression':([40,72,86,90,99,157,163,174,176,179,183,193,200,205,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,332,342,349,380,385,391,],[100,100,100,100,181,100,100,100,100,100,100,100,100,100,306,307,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,343,344,345,100,100,100,100,100,100,100,100,100,100,100,]),'LogicalUnaryExpression':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,305,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,305,101,101,101,101,101,101,]),'ConditionalAndExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,315,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'PostfixExpression':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'LogicalUnaryOperator':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'InclusiveOrExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,261,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,318,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'PrimaryExpression':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'RealPostfixExpression':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'ExclusiveOrExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,261,264,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,319,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'NotJustName':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'AndExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,261,264,266,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,320,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'SpecialName':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'NewAllocationExpression':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ComplexPrimary':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'EqualityExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,261,264,266,268,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,321,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'PlainNewAllocationExpression':([40,72,86,90,97,98,99,106,157,163,173,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[120,120,120,120,120,120,120,120,120,120,241,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ComplexPrimaryNoParenthesis':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'RelationalExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,261,264,266,268,270,271,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,323,324,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ArrayAllocationExpression':([40,72,86,90,97,98,99,106,157,163,173,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'ClassAllocationExpression':([40,72,86,90,97,98,99,106,157,163,173,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ArrayAccess':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'FieldAccess':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'MethodCall':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'AdditiveExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,261,264,266,268,270,271,272,273,274,275,276,287,289,300,308,310,313,314,332,342,349,380,385,391,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,325,326,327,328,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'MethodAccess':([40,72,86,90,97,98,99,106,157,163,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,308,310,313,314,317,332,342,349,380,385,391,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'MultiplicativeExpression':([40,72,86,90,157,163,174,176,179,183,193,200,205,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,300,308,310,313,314,332,342,349,380,385,391,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,334,335,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'VariableDeclarators':([52,77,139,],[141,154,209,]),'MethodDeclarator':([52,139,],[142,210,]),'VariableDeclarator':([52,77,139,212,],[143,143,143,297,]),'DeclaratorName':([52,77,139,212,224,],[144,155,144,155,303,]),'Dims':([56,161,162,204,285,],[148,230,231,286,336,]),'codegen_do_init':([85,],[157,]),'PrimitiveTypeExpression':([86,183,],[159,159,]),'ClassTypeExpression':([86,183,],[160,160,]),'push':([95,144,155,177,182,184,188,190,192,194,195,196,197,198,199,202,203,206,207,208,246,],[175,218,218,255,259,261,264,266,268,270,271,272,273,274,275,283,284,293,294,295,313,]),'MethodBody':([142,210,],[213,296,]),'ParameterList':([150,217,],[221,298,]),'Parameter':([150,217,302,],[223,223,348,]),'ForInit':([163,],[232,]),'ExpressionStatements':([163,380,],[233,386,]),'AssignmentOperator':([175,],[246,]),'codegen_prefix':([178,180,],[256,258,]),'codegen_postfix':([185,186,],[262,263,]),'ArrayInitializers':([200,276,],[278,330,]),'VariableInitializer':([200,276,300,332,],[279,279,347,369,]),'DimExprs':([204,],[285,]),'DimExpr':([204,285,],[288,337,]),'ArgumentList':([205,287,],[290,338,]),'codegen_for_init':([232,],[308,]),'ForExpr':([308,],[350,]),'codegen_assign':([312,],[354,]),'codegen_binop':([315,318,319,320,321,323,324,325,326,327,328,334,335,343,344,345,],[357,358,359,360,361,362,363,364,365,366,367,370,371,375,376,377,]),'codegen_declarator':([347,],[378,]),'codegen_for_expr':([350,],[380,]),'codegen_shorthand':([355,],[382,]),'ForIncr':([380,],[384,]),'codegen_for_inc':([384,],[388,]),'codegen_do_final':([387,],[390,]),'codegen_for':([389,393,],[392,394,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('codegen_prefix -> <empty>','codegen_prefix',0,'p_CodegenPrefix','icg.py',82),
  ('codegen_postfix -> <empty>','codegen_postfix',0,'p_CodegenPostfix','icg.py',92),
  ('codegen_shorthand -> <empty>','codegen_shorthand',0,'p_CodegenShorthand','icg.py',102),
  ('codegen_declarator -> <empty>','codegen_declarator',0,'p_CodegenDeclarator','icg.py',115),
  ('push -> <empty>','push',0,'p_Push','icg.py',121),
  ('codegen_binop -> <empty>','codegen_binop',0,'p_CodegenBinop','icg.py',128),
  ('codegen_assign -> <empty>','codegen_assign',0,'p_CodegenAssign','icg.py',140),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','icg.py',158),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','icg.py',159),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','icg.py',167),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','icg.py',168),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','icg.py',173),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','icg.py',174),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','icg.py',175),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','icg.py',176),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','icg.py',177),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','icg.py',178),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','icg.py',179),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','icg.py',180),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','icg.py',181),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','icg.py',186),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','icg.py',187),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','icg.py',195),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','icg.py',200),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','icg.py',201),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','icg.py',202),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','icg.py',203),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','icg.py',204),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','icg.py',205),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','icg.py',206),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','icg.py',214),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','icg.py',219),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','icg.py',220),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','icg.py',228),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','icg.py',229),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','icg.py',234),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','icg.py',235),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','icg.py',243),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','icg.py',244),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','icg.py',249),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','icg.py',250),
  ('TypeDeclaration -> ClassHeader { FieldDeclarations }','TypeDeclaration',4,'p_TypeDeclaration','icg.py',258),
  ('TypeDeclaration -> ClassHeader { }','TypeDeclaration',3,'p_TypeDeclaration','icg.py',259),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','icg.py',264),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','icg.py',265),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','icg.py',276),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','icg.py',277),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','icg.py',285),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','icg.py',286),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','icg.py',287),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','icg.py',288),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','icg.py',293),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','icg.py',297),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','icg.py',298),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','icg.py',306),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','icg.py',307),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','icg.py',315),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',316),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',317),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','icg.py',318),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','icg.py',319),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',320),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','icg.py',328),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','icg.py',329),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','icg.py',351),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','icg.py',352),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','icg.py',360),
  ('VariableDeclarator -> DeclaratorName push = VariableInitializer codegen_declarator','VariableDeclarator',5,'p_VariableDeclarator','icg.py',361),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','icg.py',372),
  ('VariableInitializer -> { }','VariableInitializer',2,'p_VariableInitializer','icg.py',373),
  ('VariableInitializer -> { ArrayInitializers }','VariableInitializer',3,'p_VariableInitializer','icg.py',374),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','icg.py',382),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','icg.py',383),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','icg.py',384),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','icg.py',392),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','icg.py',393),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','icg.py',408),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','icg.py',409),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','icg.py',410),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','icg.py',422),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','icg.py',423),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','icg.py',431),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','icg.py',439),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','icg.py',440),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','icg.py',449),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','icg.py',450),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','icg.py',455),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','icg.py',456),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','icg.py',469),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','icg.py',470),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','icg.py',482),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','icg.py',487),
  ('Block -> { LocalVariableDeclarationsAndStatements }','Block',3,'p_Block','icg.py',492),
  ('Block -> { }','Block',2,'p_Block','icg.py',493),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','icg.py',498),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','icg.py',499),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','icg.py',507),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','icg.py',508),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','icg.py',516),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','icg.py',527),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','icg.py',528),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','icg.py',529),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','icg.py',530),
  ('Statement -> Block','Statement',1,'p_Statement','icg.py',531),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','icg.py',539),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','icg.py',544),
  ('IterationStatement -> DO codegen_do_init Statement WHILE ( Expression ) ; codegen_do_final','IterationStatement',9,'p_IterationStatement','icg.py',549),
  ('IterationStatement -> FOR ( ForInit codegen_for_init ForExpr codegen_for_expr ForIncr codegen_for_inc ) Statement codegen_for','IterationStatement',11,'p_IterationStatement','icg.py',550),
  ('IterationStatement -> FOR ( ForInit codegen_for_init ForExpr codegen_for_expr ) Statement codegen_for','IterationStatement',9,'p_IterationStatement','icg.py',551),
  ('codegen_do_init -> <empty>','codegen_do_init',0,'p_CodegenDoInit','icg.py',556),
  ('codegen_do_final -> <empty>','codegen_do_final',0,'p_CodegenDoFinal','icg.py',565),
  ('codegen_for_init -> <empty>','codegen_for_init',0,'p_CodegenForInit','icg.py',577),
  ('codegen_for_expr -> <empty>','codegen_for_expr',0,'p_CodegenForExpr','icg.py',586),
  ('codegen_for_inc -> <empty>','codegen_for_inc',0,'p_CodegenForInc','icg.py',597),
  ('codegen_for -> <empty>','codegen_for',0,'p_CodegenFor','icg.py',604),
  ('ForInit -> ExpressionStatements ;','ForInit',2,'p_ForInit','icg.py',617),
  ('ForInit -> LocalVariableDeclarationStatement','ForInit',1,'p_ForInit','icg.py',618),
  ('ForInit -> ;','ForInit',1,'p_ForInit','icg.py',619),
  ('ForExpr -> Expression ;','ForExpr',2,'p_ForExpr','icg.py',627),
  ('ForExpr -> ;','ForExpr',1,'p_ForExpr','icg.py',628),
  ('ForIncr -> ExpressionStatements','ForIncr',1,'p_ForIncr','icg.py',636),
  ('ExpressionStatements -> ExpressionStatement','ExpressionStatements',1,'p_ExpressionStatements','icg.py',640),
  ('ExpressionStatements -> ExpressionStatements , ExpressionStatement','ExpressionStatements',3,'p_ExpressionStatements','icg.py',641),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','icg.py',649),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','icg.py',650),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','icg.py',651),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','icg.py',652),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','icg.py',653),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','icg.py',654),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','icg.py',659),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','icg.py',660),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','icg.py',665),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','icg.py',666),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','icg.py',667),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','icg.py',672),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','icg.py',673),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',681),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',682),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',683),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',684),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',685),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',686),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','icg.py',701),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','icg.py',702),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','icg.py',707),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','icg.py',708),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','icg.py',709),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','icg.py',710),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','icg.py',711),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','icg.py',716),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','icg.py',717),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','icg.py',722),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','icg.py',723),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','icg.py',724),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','icg.py',729),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','icg.py',734),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','icg.py',735),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','icg.py',743),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','icg.py',744),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','icg.py',752),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','icg.py',753),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','icg.py',754),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','icg.py',755),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { ArrayInitializers }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','icg.py',756),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { FieldDeclarations }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','icg.py',757),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','icg.py',765),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','icg.py',766),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','icg.py',771),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','icg.py',772),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','icg.py',773),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','icg.py',778),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','icg.py',779),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','icg.py',787),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','icg.py',792),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','icg.py',793),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','icg.py',801),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','icg.py',802),
  ('RealPostfixExpression -> PostfixExpression OP_INC codegen_postfix','RealPostfixExpression',3,'p_RealPostfixExpression','icg.py',807),
  ('RealPostfixExpression -> PostfixExpression OP_DEC codegen_postfix','RealPostfixExpression',3,'p_RealPostfixExpression','icg.py',808),
  ('UnaryExpression -> OP_INC UnaryExpression codegen_prefix','UnaryExpression',3,'p_UnaryExpression','icg.py',813),
  ('UnaryExpression -> OP_DEC UnaryExpression codegen_prefix','UnaryExpression',3,'p_UnaryExpression','icg.py',814),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','icg.py',815),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','icg.py',816),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','icg.py',837),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','icg.py',838),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','icg.py',850),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','icg.py',851),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','icg.py',856),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','icg.py',857),
  ('CastExpression -> UnaryExpression push','CastExpression',2,'p_CastExpression','icg.py',862),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','icg.py',863),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','icg.py',864),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','icg.py',865),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','icg.py',873),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','icg.py',874),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','icg.py',882),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','icg.py',887),
  ('MultiplicativeExpression -> MultiplicativeExpression * push CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',888),
  ('MultiplicativeExpression -> MultiplicativeExpression / push CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',889),
  ('MultiplicativeExpression -> MultiplicativeExpression % push CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',890),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','icg.py',899),
  ('AdditiveExpression -> AdditiveExpression + push MultiplicativeExpression codegen_binop','AdditiveExpression',5,'p_AdditiveExpression','icg.py',900),
  ('AdditiveExpression -> AdditiveExpression - push MultiplicativeExpression codegen_binop','AdditiveExpression',5,'p_AdditiveExpression','icg.py',901),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','icg.py',910),
  ('RelationalExpression -> RelationalExpression < push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',911),
  ('RelationalExpression -> RelationalExpression > push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',912),
  ('RelationalExpression -> RelationalExpression OP_LE push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',913),
  ('RelationalExpression -> RelationalExpression OP_GE push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',914),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','icg.py',923),
  ('EqualityExpression -> EqualityExpression OP_EQ push RelationalExpression codegen_binop','EqualityExpression',5,'p_EqualityExpression','icg.py',924),
  ('EqualityExpression -> EqualityExpression OP_NE push RelationalExpression codegen_binop','EqualityExpression',5,'p_EqualityExpression','icg.py',925),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','icg.py',933),
  ('AndExpression -> AndExpression & push EqualityExpression codegen_binop','AndExpression',5,'p_AndExpression','icg.py',934),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','icg.py',942),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ push AndExpression codegen_binop','ExclusiveOrExpression',5,'p_ExclusiveOrExpression','icg.py',943),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','icg.py',951),
  ('InclusiveOrExpression -> InclusiveOrExpression | push ExclusiveOrExpression codegen_binop','InclusiveOrExpression',5,'p_InclusiveOrExpression','icg.py',952),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','icg.py',960),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND push InclusiveOrExpression codegen_binop','ConditionalAndExpression',5,'p_ConditionalAndExpression','icg.py',961),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','icg.py',969),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR push ConditionalAndExpression codegen_binop','ConditionalOrExpression',5,'p_ConditionalOrExpression','icg.py',970),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','icg.py',978),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','icg.py',979),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','icg.py',987),
  ('AssignmentExpression -> UnaryExpression push = ConditionalExpression codegen_assign','AssignmentExpression',5,'p_AssignmentExpression','icg.py',988),
  ('AssignmentExpression -> UnaryExpression push AssignmentOperator push AssignmentExpression codegen_shorthand','AssignmentExpression',6,'p_AssignmentExpression','icg.py',989),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','icg.py',999),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1000),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1001),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1002),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1003),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1004),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1005),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','icg.py',1012),
]
