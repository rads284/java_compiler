
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitASS_ADD ASS_AND ASS_DIV ASS_MOD ASS_MUL ASS_OR ASS_SUB BOOLEAN BOOLLIT BREAK BYTE CHAR CLASS CONTINUE DO DOUBLE FLOAT FOR IDENTIFIER IMPORT INT LITERAL LONG NEW NUM_LITERAL OP_DEC OP_DIM OP_EQ OP_GE OP_INC OP_LAND OP_LE OP_LOR OP_NE PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VOID WHILETypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' FieldDeclarations '}'\n    | ClassHeader '{' '}'\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    | NonStaticInitializer\n    | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName '=' VariableInitializer\n    VariableInitializer : Expression\n    | '{' '}'\n        | '{' ArrayInitializers '}'\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' LocalVariableDeclarationsAndStatements '}'\n    | '{' '}'\n    LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n    | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO Statement WHILE '(' Expression ')' ';'\n    | FOR '(' ForInit ForExpr ForIncr ')' Statement\n    | FOR '(' ForInit ForExpr         ')' Statement\n    ForInit : ExpressionStatements ';'\n    | LocalVariableDeclarationStatement\n    | ';'\n    ForExpr : Expression ';'\n    | ';'\n    ForIncr : ExpressionStatements ExpressionStatements : ExpressionStatement\n    | ExpressionStatements ',' ExpressionStatement \n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n    | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName\n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' '}'\n        | ClassAllocationExpression '{' '}'\n        | ArrayAllocationExpression '{' ArrayInitializers '}'\n        | ClassAllocationExpression '{' FieldDeclarations '}'\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n    | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC\n    | PostfixExpression OP_DEC\n    UnaryExpression : OP_INC UnaryExpression\n    | OP_DEC UnaryExpression\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n        | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression\n    | MultiplicativeExpression '*' CastExpression\n    | MultiplicativeExpression '/' CastExpression\n    | MultiplicativeExpression '%' CastExpression\n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression '+' MultiplicativeExpression\n    | AdditiveExpression '-' MultiplicativeExpression\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' AdditiveExpression\n    | RelationalExpression '>' AdditiveExpression\n    | RelationalExpression OP_LE AdditiveExpression\n    | RelationalExpression OP_GE AdditiveExpression\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ RelationalExpression\n        | EqualityExpression OP_NE RelationalExpression\n    AndExpression : EqualityExpression\n        | AndExpression '&' EqualityExpression\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' AndExpression\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' ExclusiveOrExpression\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND InclusiveOrExpression\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR ConditionalAndExpression\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression AssignmentOperator AssignmentExpression\n    AssignmentOperator : '='\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,20,23,29,35,37,39,151,],[9,9,9,-29,9,-30,-14,-24,-31,-15,-32,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,172,173,209,219,221,223,224,277,291,],[15,15,15,15,-29,-25,-27,15,-39,-41,-42,-43,-44,15,15,15,-30,-26,-28,-14,15,-40,15,-24,-31,-15,15,-36,-46,-48,-51,-52,-53,-54,-55,15,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,248,251,15,-80,-69,-78,-79,15,-68,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,277,291,],[16,16,16,16,-29,-25,-27,16,-39,-41,-42,-43,-44,16,16,16,-30,-26,-28,-14,16,-40,16,-24,-31,-15,16,-36,-46,-48,-51,-52,-53,-54,-55,16,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,16,-80,-69,-78,-79,16,-68,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,277,291,],[17,17,17,17,-29,-25,-27,17,-39,-41,-42,-43,-44,17,17,17,-30,-26,-28,-14,17,-40,17,-24,-31,-15,17,-36,-46,-48,-51,-52,-53,-54,-55,17,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,17,-80,-69,-78,-79,17,-68,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,277,291,],[18,18,18,18,-29,-25,-27,18,-39,-41,-42,-43,-44,18,18,18,-30,-26,-28,-14,18,-40,18,-24,-31,-15,18,-36,-46,-48,-51,-52,-53,-54,-55,18,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,18,-80,-69,-78,-79,18,-68,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,277,291,],[19,19,19,19,-29,-25,-27,19,-39,-41,-42,-43,-44,19,19,19,-30,-26,-28,-14,55,-40,19,-24,-31,-15,55,-36,-46,-48,-51,-52,-53,-54,-55,19,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,55,-80,-69,-78,-79,55,-68,]),'$end':([1,2,3,4,5,7,8,10,20,21,22,23,24,28,29,34,35,37,39,42,135,151,],[0,-16,-21,-22,-23,-29,-25,-27,-18,-19,-20,-30,-26,-28,-14,-17,-24,-31,-15,-36,-35,-32,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,26,29,30,31,32,36,38,39,40,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,81,82,83,85,86,88,89,90,91,92,97,98,99,103,104,106,110,111,132,135,136,137,138,139,146,147,148,149,150,152,153,156,165,167,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,220,221,223,224,225,226,228,232,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[26,26,33,-39,-45,-41,-42,-43,-44,-33,-14,57,69,-40,70,70,-15,26,57,-36,-46,-48,-51,-52,-53,-54,-55,57,145,-85,-44,-1,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,26,-87,-88,-90,-91,145,-98,-93,-95,-96,-97,26,26,166,168,26,-3,-4,26,26,26,-175,-176,26,-173,-174,26,-35,-47,-49,-50,145,-81,-84,-2,-161,26,-86,-89,-94,26,-112,-114,-116,70,26,26,-213,-214,-215,-216,-217,-218,-219,-220,26,26,26,26,26,26,260,26,262,26,26,26,26,26,26,26,26,26,57,26,26,26,26,26,26,-80,145,-69,-78,-79,26,26,-162,145,-92,26,26,26,26,-105,-104,-111,-113,-115,26,57,26,26,-68,26,26,26,-107,-103,26,26,26,26,26,26,-106,26,-102,-100,-101,]),';':([10,25,26,27,28,29,35,37,39,40,42,44,45,46,47,48,49,50,54,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,88,89,90,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,138,141,142,143,144,145,146,147,149,151,152,153,154,155,156,158,165,166,167,168,169,170,171,186,188,189,190,193,194,195,217,218,219,221,222,223,224,227,228,233,235,240,241,242,243,244,245,246,247,248,249,250,251,253,255,258,259,260,261,262,263,265,266,267,268,269,270,272,275,276,278,279,280,281,283,286,288,289,290,291,292,294,295,300,301,302,304,306,308,310,311,312,313,315,317,318,319,321,323,325,329,332,333,334,336,337,339,340,341,342,343,],[29,29,-33,29,39,-14,39,39,-15,78,-36,29,138,-51,-52,-53,-54,-55,-85,-34,29,78,-87,-88,-90,-91,-98,-93,156,-95,-96,-97,-99,78,167,169,171,-117,-221,-211,-177,-209,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-35,39,-50,-57,224,-58,-60,-76,-81,-84,-161,39,-86,-89,233,-60,-94,-117,242,245,-112,246,-114,247,-116,-167,-168,-169,-177,-165,-166,-172,-56,224,-80,-69,-72,-78,-79,-77,-162,-92,-122,305,306,-105,-104,-109,-111,-113,-115,-136,-146,-134,-135,-212,-208,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-62,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-68,-59,-71,-61,-180,-178,-179,331,-103,-130,-122,-122,-131,-63,-151,-152,-155,-159,-154,-137,-70,78,-110,-210,-64,-153,-160,342,78,-102,-100,-101,]),'{':([11,29,30,33,39,40,41,42,43,44,46,47,48,49,50,53,54,55,69,72,73,74,75,76,78,79,81,82,83,85,123,124,135,136,137,138,140,142,146,147,149,152,153,156,167,169,171,208,209,218,219,221,222,223,224,226,228,230,233,245,246,247,271,277,280,281,283,291,294,296,316,318,319,321,325,329,336,337,340,341,342,343,],[30,-14,40,-38,-15,40,40,-36,-46,-48,-51,-52,-53,-54,-55,40,-85,40,-37,40,-87,-88,-90,-91,-98,-93,-95,-96,-97,40,208,209,-35,-47,-49,-50,40,40,-81,-84,-161,-86,-89,-94,-112,-114,-116,271,40,40,-80,-69,-72,-78,-79,271,-162,-83,-92,-111,-113,-115,271,40,-156,-157,-158,-68,-71,-82,271,-155,-159,-154,-70,40,-153,-160,40,-102,-100,-101,]),'BOOLEAN':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,60,-40,-15,60,60,-36,-46,-48,-51,-52,-53,-54,-55,60,-85,-44,60,-87,-88,-90,-91,-98,-93,-95,-96,-97,60,60,60,60,60,60,-175,-176,60,-173,-174,60,-35,-47,-49,-50,-81,-84,60,-86,-89,-94,60,-112,-114,-116,60,60,-213,-214,-215,-216,-217,-218,-219,-220,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-80,-69,-78,-79,60,60,-92,60,60,60,60,-105,-104,-111,-113,-115,60,60,60,60,-68,60,60,60,-107,-103,60,60,60,60,60,60,-106,60,-102,-100,-101,]),'CHAR':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,61,-40,-15,61,61,-36,-46,-48,-51,-52,-53,-54,-55,61,-85,-44,61,-87,-88,-90,-91,-98,-93,-95,-96,-97,61,61,61,61,61,61,-175,-176,61,-173,-174,61,-35,-47,-49,-50,-81,-84,61,-86,-89,-94,61,-112,-114,-116,61,61,-213,-214,-215,-216,-217,-218,-219,-220,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-80,-69,-78,-79,61,61,-92,61,61,61,61,-105,-104,-111,-113,-115,61,61,61,61,-68,61,61,61,-107,-103,61,61,61,61,61,61,-106,61,-102,-100,-101,]),'BYTE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,62,-40,-15,62,62,-36,-46,-48,-51,-52,-53,-54,-55,62,-85,-44,62,-87,-88,-90,-91,-98,-93,-95,-96,-97,62,62,62,62,62,62,-175,-176,62,-173,-174,62,-35,-47,-49,-50,-81,-84,62,-86,-89,-94,62,-112,-114,-116,62,62,-213,-214,-215,-216,-217,-218,-219,-220,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-80,-69,-78,-79,62,62,-92,62,62,62,62,-105,-104,-111,-113,-115,62,62,62,62,-68,62,62,62,-107,-103,62,62,62,62,62,62,-106,62,-102,-100,-101,]),'SHORT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,63,-40,-15,63,63,-36,-46,-48,-51,-52,-53,-54,-55,63,-85,-44,63,-87,-88,-90,-91,-98,-93,-95,-96,-97,63,63,63,63,63,63,-175,-176,63,-173,-174,63,-35,-47,-49,-50,-81,-84,63,-86,-89,-94,63,-112,-114,-116,63,63,-213,-214,-215,-216,-217,-218,-219,-220,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-80,-69,-78,-79,63,63,-92,63,63,63,63,-105,-104,-111,-113,-115,63,63,63,63,-68,63,63,63,-107,-103,63,63,63,63,63,63,-106,63,-102,-100,-101,]),'INT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,64,-40,-15,64,64,-36,-46,-48,-51,-52,-53,-54,-55,64,-85,-44,64,-87,-88,-90,-91,-98,-93,-95,-96,-97,64,64,64,64,64,64,-175,-176,64,-173,-174,64,-35,-47,-49,-50,-81,-84,64,-86,-89,-94,64,-112,-114,-116,64,64,-213,-214,-215,-216,-217,-218,-219,-220,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-80,-69,-78,-79,64,64,-92,64,64,64,64,-105,-104,-111,-113,-115,64,64,64,64,-68,64,64,64,-107,-103,64,64,64,64,64,64,-106,64,-102,-100,-101,]),'LONG':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,65,-40,-15,65,65,-36,-46,-48,-51,-52,-53,-54,-55,65,-85,-44,65,-87,-88,-90,-91,-98,-93,-95,-96,-97,65,65,65,65,65,65,-175,-176,65,-173,-174,65,-35,-47,-49,-50,-81,-84,65,-86,-89,-94,65,-112,-114,-116,65,65,-213,-214,-215,-216,-217,-218,-219,-220,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-80,-69,-78,-79,65,65,-92,65,65,65,65,-105,-104,-111,-113,-115,65,65,65,65,-68,65,65,65,-107,-103,65,65,65,65,65,65,-106,65,-102,-100,-101,]),'FLOAT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,66,-40,-15,66,66,-36,-46,-48,-51,-52,-53,-54,-55,66,-85,-44,66,-87,-88,-90,-91,-98,-93,-95,-96,-97,66,66,66,66,66,66,-175,-176,66,-173,-174,66,-35,-47,-49,-50,-81,-84,66,-86,-89,-94,66,-112,-114,-116,66,66,-213,-214,-215,-216,-217,-218,-219,-220,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-80,-69,-78,-79,66,66,-92,66,66,66,66,-105,-104,-111,-113,-115,66,66,66,66,-68,66,66,66,-107,-103,66,66,66,66,66,66,-106,66,-102,-100,-101,]),'DOUBLE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,67,-40,-15,67,67,-36,-46,-48,-51,-52,-53,-54,-55,67,-85,-44,67,-87,-88,-90,-91,-98,-93,-95,-96,-97,67,67,67,67,67,67,-175,-176,67,-173,-174,67,-35,-47,-49,-50,-81,-84,67,-86,-89,-94,67,-112,-114,-116,67,67,-213,-214,-215,-216,-217,-218,-219,-220,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-80,-69,-78,-79,67,67,-92,67,67,67,67,-105,-104,-111,-113,-115,67,67,67,67,-68,67,67,67,-107,-103,67,67,67,67,67,67,-106,67,-102,-100,-101,]),'VOID':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,233,235,236,237,240,242,243,245,246,247,271,277,282,284,291,297,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[-39,-41,-42,-43,-44,-14,68,-40,-15,68,68,-36,-46,-48,-51,-52,-53,-54,-55,68,-85,-44,68,-87,-88,-90,-91,-98,-93,-95,-96,-97,68,68,68,68,68,68,-175,-176,68,-173,-174,68,-35,-47,-49,-50,-81,-84,68,-86,-89,-94,68,-112,-114,-116,68,68,-213,-214,-215,-216,-217,-218,-219,-220,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-80,-69,-78,-79,68,68,-92,68,68,68,68,-105,-104,-111,-113,-115,68,68,68,68,-68,68,68,68,-107,-103,68,68,68,68,68,68,-106,68,-102,-100,-101,]),'.':([25,26,27,57,59,60,61,62,63,64,65,66,67,68,70,91,92,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,159,163,164,193,194,228,235,248,249,250,251,260,262,272,276,280,281,283,286,308,310,311,312,315,317,318,319,321,323,336,337,],[36,-33,38,-33,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,172,173,197,199,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,173,172,172,173,-165,-166,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'[':([26,58,59,60,61,62,63,64,65,66,67,68,70,92,117,121,125,126,127,128,129,130,158,164,212,235,248,250,251,260,262,280,283,286,308,310,311,312,319,323,337,],[-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,174,201,-123,-124,-125,-126,-127,-128,-129,174,174,284,-122,-136,-134,-135,-133,-132,284,-158,-138,-130,-122,-122,-131,-159,-137,-160,]),'OP_DIM':([26,56,57,58,59,60,61,62,63,64,65,66,67,68,70,91,92,142,144,145,148,149,155,163,164,212,218,222,227,228,238,239,280,281,283,294,298,318,319,325,337,],[-33,149,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-3,-4,222,227,-76,228,-161,227,149,149,149,222,-72,-77,-162,228,228,149,228,-158,-71,227,228,-159,-70,-160,]),'OP_INC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,193,194,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,228,233,235,236,237,240,242,243,245,246,247,248,249,250,251,260,262,271,272,276,280,281,282,283,284,286,299,303,305,306,307,308,309,310,311,312,315,316,317,318,319,321,323,324,329,331,336,337,340,341,342,343,],[-33,97,-34,97,-87,-88,-90,-91,-98,-93,-95,-96,-97,97,97,97,-117,97,97,97,-175,-176,193,97,-163,-164,-173,-174,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-86,-89,-94,-117,-117,97,-112,-114,-116,97,97,-213,-214,-215,-216,-217,-218,-219,-220,97,97,97,97,97,-165,-166,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-162,-92,-122,97,97,97,-105,-104,-111,-113,-115,-136,-146,-134,-135,-133,-132,97,-149,-150,-156,-157,97,-158,97,-138,97,97,-107,-103,97,-130,97,-122,-122,-131,-151,97,-152,-155,-159,-154,-137,97,97,-106,-153,-160,97,-102,-100,-101,]),'OP_DEC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,193,194,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,228,233,235,236,237,240,242,243,245,246,247,248,249,250,251,260,262,271,272,276,280,281,282,283,284,286,299,303,305,306,307,308,309,310,311,312,315,316,317,318,319,321,323,324,329,331,336,337,340,341,342,343,],[-33,98,-34,98,-87,-88,-90,-91,-98,-93,-95,-96,-97,98,98,98,-117,98,98,98,-175,-176,194,98,-163,-164,-173,-174,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-86,-89,-94,-117,-117,98,-112,-114,-116,98,98,-213,-214,-215,-216,-217,-218,-219,-220,98,98,98,98,98,-165,-166,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-162,-92,-122,98,98,98,-105,-104,-111,-113,-115,-136,-146,-134,-135,-133,-132,98,-149,-150,-156,-157,98,-158,98,-138,98,98,-107,-103,98,-130,98,-122,-122,-131,-151,98,-152,-155,-159,-154,-137,98,98,-106,-153,-160,98,-102,-100,-101,]),'=':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,144,145,149,155,158,164,186,188,189,190,193,194,195,227,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,176,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,226,-76,-161,226,-117,-117,-167,-168,-169,-177,-165,-166,-172,-77,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'ASS_MUL':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,177,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'ASS_DIV':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,178,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'ASS_MOD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,179,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'ASS_ADD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,180,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'ASS_SUB':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,181,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'ASS_AND':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,182,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'ASS_OR':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,280,281,283,286,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,183,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,-156,-157,-158,-138,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'*':([26,38,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,71,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,214,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,214,214,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'/':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,215,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,215,215,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'%':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,216,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,-149,-150,216,216,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'+':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,228,233,235,236,237,240,242,243,245,246,247,248,249,250,251,260,262,267,268,269,270,271,272,276,278,279,280,281,282,283,284,286,288,289,290,299,300,301,302,303,305,306,307,308,309,310,311,312,315,316,317,318,319,321,323,324,329,331,336,337,340,341,342,343,],[-33,103,-34,103,-87,-88,-90,-91,-98,-93,-95,-96,-97,103,103,103,-117,-177,103,103,103,-184,-170,-175,-176,-171,103,-163,-164,-173,-174,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,210,-188,-161,-86,-89,-94,-117,-117,103,-112,-114,-116,103,103,-213,-214,-215,-216,-217,-218,-219,-220,103,103,-167,103,-168,-169,-177,103,103,-165,-166,-172,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-162,-92,-122,103,103,103,-105,-104,-111,-113,-115,-136,-146,-134,-135,-133,-132,210,210,210,210,103,-149,-150,-189,-190,-156,-157,103,-158,103,-138,-185,-186,-187,103,-180,-178,-179,103,-107,-103,103,-130,103,-122,-122,-131,-151,103,-152,-155,-159,-154,-137,103,103,-106,-153,-160,103,-102,-100,-101,]),'-':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,228,233,235,236,237,240,242,243,245,246,247,248,249,250,251,260,262,267,268,269,270,271,272,276,278,279,280,281,282,283,284,286,288,289,290,299,300,301,302,303,305,306,307,308,309,310,311,312,315,316,317,318,319,321,323,324,329,331,336,337,340,341,342,343,],[-33,104,-34,104,-87,-88,-90,-91,-98,-93,-95,-96,-97,104,104,104,-117,-177,104,104,104,-184,-170,-175,-176,-171,104,-163,-164,-173,-174,-118,-119,-120,-121,-142,-145,-123,-147,-148,-124,-125,-126,-127,-128,-129,211,-188,-161,-86,-89,-94,-117,-117,104,-112,-114,-116,104,104,-213,-214,-215,-216,-217,-218,-219,-220,104,104,-167,104,-168,-169,-177,104,104,-165,-166,-172,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-162,-92,-122,104,104,104,-105,-104,-111,-113,-115,-136,-146,-134,-135,-133,-132,211,211,211,211,104,-149,-150,-189,-190,-156,-157,104,-158,104,-138,-185,-186,-187,104,-180,-178,-179,104,-107,-103,104,-130,104,-122,-122,-131,-151,104,-152,-155,-159,-154,-137,104,104,-106,-153,-160,104,-102,-100,-101,]),'<':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,204,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,204,204,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'>':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,205,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,205,205,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'OP_LE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,206,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,206,206,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'OP_GE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,-142,-145,-123,207,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,207,207,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'OP_EQ':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,202,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,202,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'OP_NE':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,-119,-120,-121,203,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,-132,203,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'&':([26,70,92,95,100,101,105,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,-118,200,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-133,200,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'^':([26,70,92,95,100,101,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,259,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,-163,-164,198,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,198,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'|':([26,70,92,95,100,101,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,258,259,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,-171,196,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,196,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'OP_LAND':([26,70,92,95,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,255,258,259,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,-184,-170,192,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,192,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'?':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,255,258,259,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,184,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-208,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'OP_LOR':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,228,235,248,249,250,251,255,258,259,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,336,337,],[-33,-34,-117,-177,185,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-208,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-153,-160,]),'(':([26,40,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,78,79,81,82,83,85,86,87,90,92,97,98,99,103,104,106,110,111,115,119,121,125,126,127,128,129,130,133,144,145,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,226,227,233,234,235,236,237,240,242,243,245,246,247,248,250,251,260,262,271,282,284,286,299,303,305,306,307,308,309,311,312,316,323,324,329,331,340,341,342,343,],[-33,86,150,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,86,-87,-88,-90,-91,-98,-93,-95,-96,-97,86,86,165,86,-141,187,187,191,-175,-176,187,-173,-174,-140,-142,-139,-124,-125,-126,-127,-128,-129,213,225,-76,-86,-89,-94,-141,-141,86,-112,-114,-116,86,86,-213,-214,-215,-216,-217,-218,-219,-220,86,191,86,86,191,191,191,191,86,191,191,191,191,191,191,86,191,191,282,86,191,191,191,86,-77,-92,299,187,191,191,86,-105,-104,-111,-113,-115,-136,-134,-135,-133,-132,86,86,86,-138,86,86,-107,-103,86,-130,191,187,-131,86,-137,86,86,-106,86,-102,-100,-101,]),')':([26,60,61,62,63,64,65,66,67,68,70,84,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,145,149,150,158,160,161,162,163,164,186,188,189,190,193,194,195,213,225,227,228,229,231,235,238,239,244,248,249,250,251,253,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,282,283,285,286,287,288,289,290,293,298,300,301,302,303,305,308,310,311,312,315,317,318,319,320,321,323,326,327,328,330,331,332,333,336,337,338,],[-33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-99,-221,-211,-177,-209,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-76,-161,230,-117,235,236,237,-181,-117,-167,-168,-169,-177,-165,-166,-172,286,294,-77,-162,296,-73,-122,-182,-183,-109,-136,-146,-134,-135,-212,-208,310,311,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,321,-158,323,-138,-143,-185,-186,-187,325,-75,-180,-178,-179,329,-107,-130,-122,-122,-131,-151,-152,-155,-159,336,-154,-137,-74,339,340,-108,-106,-110,-210,-153,-160,-144,]),',':([26,70,84,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,141,143,144,145,149,154,155,158,186,188,189,190,193,194,195,217,227,228,229,231,235,241,244,248,249,250,251,253,255,258,259,260,261,262,263,265,266,267,268,269,270,272,273,274,275,276,278,279,280,281,283,285,286,287,288,289,290,292,293,295,298,300,301,302,308,310,311,312,313,314,315,316,317,318,319,320,321,323,326,330,332,333,334,335,336,337,338,],[-33,-34,-99,-117,-221,-211,-177,-209,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,220,-58,-60,-76,-161,220,-60,-117,-167,-168,-169,-177,-165,-166,-172,220,-77,-162,297,-73,-122,307,-109,-136,-146,-134,-135,-212,-208,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,316,-65,-62,-150,-189,-190,-156,-157,-158,324,-138,-143,-185,-186,-187,-59,297,-61,-75,-180,-178,-179,-130,-122,-122,-131,-63,316,-151,-67,-152,-155,-159,324,-154,-137,-74,307,-110,-210,-64,-66,-153,-160,-144,]),']':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,186,188,189,190,193,194,195,228,235,248,249,250,251,252,253,255,258,259,260,261,262,263,264,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,322,323,333,336,337,],[-33,-34,-221,-211,-177,-209,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,308,-212,-208,-206,-204,-133,-202,-132,-200,312,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,337,-137,-210,-153,-160,]),':':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,186,188,189,190,193,194,195,228,235,248,249,250,251,253,254,255,258,259,260,261,262,263,265,266,267,268,269,270,272,276,278,279,280,281,283,286,288,289,290,300,301,302,308,310,311,312,315,317,318,319,321,323,333,336,337,],[-33,-34,-221,-211,-177,-209,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-161,-117,-167,-168,-169,-177,-165,-166,-172,-162,-122,-136,-146,-134,-135,-212,309,-208,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,-149,-150,-189,-190,-156,-157,-158,-138,-185,-186,-187,-180,-178,-179,-130,-122,-122,-131,-151,-152,-155,-159,-154,-137,-210,-153,-160,]),'}':([26,29,30,39,40,41,42,43,44,46,47,48,49,50,54,70,72,73,74,75,76,78,79,81,82,83,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,146,147,149,152,153,156,158,167,169,171,186,188,189,190,193,194,195,208,209,219,221,223,224,228,233,235,245,246,247,248,249,250,251,253,255,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,286,288,289,290,291,300,301,302,308,310,311,312,313,314,315,316,317,318,319,321,323,333,334,335,336,337,341,342,343,],[-33,-14,42,-15,73,135,-36,-46,-48,-51,-52,-53,-54,-55,-85,-34,152,-87,-88,-90,-91,-98,-93,-95,-96,-97,-221,-211,-177,-209,-184,-170,-207,-171,-205,-163,-164,-203,-118,-201,-119,-120,-121,-199,-142,-145,-123,-196,-147,-148,-124,-125,-126,-127,-128,-129,-191,-188,-35,-47,-49,-50,-81,-84,-161,-86,-89,-94,-117,-112,-114,-116,-167,-168,-169,-177,-165,-166,-172,272,276,-80,-69,-78,-79,-162,-92,-122,-111,-113,-115,-136,-146,-134,-135,-212,-208,-206,-204,-133,-202,-132,-200,-197,-198,-192,-193,-194,-195,313,-149,315,-65,-62,-150,317,-189,-190,-156,-157,-158,-138,-185,-186,-187,-68,-180,-178,-179,-130,-122,-122,-131,-63,334,-151,-67,-152,-155,-159,-154,-137,-210,-64,-66,-153,-160,-102,-100,-101,]),'DO':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,233,245,246,247,329,340,341,342,343,],[85,85,-87,-88,-90,-91,-98,-93,-95,-96,-97,85,-86,-89,-94,-112,-114,-116,-92,-111,-113,-115,85,85,-102,-100,-101,]),'FOR':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,233,245,246,247,329,340,341,342,343,],[87,87,-87,-88,-90,-91,-98,-93,-95,-96,-97,87,-86,-89,-94,-112,-114,-116,-92,-111,-113,-115,87,87,-102,-100,-101,]),'BREAK':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,233,245,246,247,329,340,341,342,343,],[88,88,-87,-88,-90,-91,-98,-93,-95,-96,-97,88,-86,-89,-94,-112,-114,-116,-92,-111,-113,-115,88,88,-102,-100,-101,]),'CONTINUE':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,233,245,246,247,329,340,341,342,343,],[89,89,-87,-88,-90,-91,-98,-93,-95,-96,-97,89,-86,-89,-94,-112,-114,-116,-92,-111,-113,-115,89,89,-102,-100,-101,]),'RETURN':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,233,245,246,247,329,340,341,342,343,],[90,90,-87,-88,-90,-91,-98,-93,-95,-96,-97,90,-86,-89,-94,-112,-114,-116,-92,-111,-113,-115,90,90,-102,-100,-101,]),'~':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,233,235,236,237,240,242,243,245,246,247,271,282,284,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[110,110,-87,-88,-90,-91,-98,-93,-95,-96,-97,110,110,110,110,110,110,-175,-176,110,-173,-174,-86,-89,-94,110,-112,-114,-116,110,110,-213,-214,-215,-216,-217,-218,-219,-220,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-92,110,110,110,110,-105,-104,-111,-113,-115,110,110,110,110,110,-107,-103,110,110,110,110,110,110,-106,110,-102,-100,-101,]),'!':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,233,235,236,237,240,242,243,245,246,247,271,282,284,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[111,111,-87,-88,-90,-91,-98,-93,-95,-96,-97,111,111,111,111,111,111,-175,-176,111,-173,-174,-86,-89,-94,111,-112,-114,-116,111,111,-213,-214,-215,-216,-217,-218,-219,-220,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-92,111,111,111,111,-105,-104,-111,-113,-115,111,111,111,111,111,-107,-103,111,111,111,111,111,111,-106,111,-102,-100,-101,]),'THIS':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,233,235,236,237,240,242,243,245,246,247,271,282,284,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[119,119,-87,-88,-90,-91,-98,-93,-95,-96,-97,119,119,119,119,119,119,-175,-176,119,-173,-174,-86,-89,-94,119,-112,-114,-116,250,119,119,-213,-214,-215,-216,-217,-218,-219,-220,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-92,119,119,119,119,-105,-104,-111,-113,-115,119,119,119,119,119,-107,-103,119,119,119,119,119,119,-106,119,-102,-100,-101,]),'LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,233,235,236,237,240,242,243,245,246,247,271,282,284,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[125,125,-87,-88,-90,-91,-98,-93,-95,-96,-97,125,125,125,125,125,125,-175,-176,125,-173,-174,-86,-89,-94,125,-112,-114,-116,125,125,-213,-214,-215,-216,-217,-218,-219,-220,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-92,125,125,125,125,-105,-104,-111,-113,-115,125,125,125,125,125,-107,-103,125,125,125,125,125,125,-106,125,-102,-100,-101,]),'NUM_LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,233,235,236,237,240,242,243,245,246,247,271,282,284,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[126,126,-87,-88,-90,-91,-98,-93,-95,-96,-97,126,126,126,126,126,126,-175,-176,126,-173,-174,-86,-89,-94,126,-112,-114,-116,126,126,-213,-214,-215,-216,-217,-218,-219,-220,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-92,126,126,126,126,-105,-104,-111,-113,-115,126,126,126,126,126,-107,-103,126,126,126,126,126,126,-106,126,-102,-100,-101,]),'BOOLLIT':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,233,235,236,237,240,242,243,245,246,247,271,282,284,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[127,127,-87,-88,-90,-91,-98,-93,-95,-96,-97,127,127,127,127,127,127,-175,-176,127,-173,-174,-86,-89,-94,127,-112,-114,-116,127,127,-213,-214,-215,-216,-217,-218,-219,-220,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-92,127,127,127,127,-105,-104,-111,-113,-115,127,127,127,127,127,-107,-103,127,127,127,127,127,127,-106,127,-102,-100,-101,]),'NEW':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,233,235,236,237,240,242,243,245,246,247,271,282,284,299,303,305,306,307,309,311,316,324,329,331,340,341,342,343,],[132,132,-87,-88,-90,-91,-98,-93,-95,-96,-97,132,132,132,132,132,132,-175,-176,132,-173,-174,-86,-89,-94,132,-112,-114,-116,132,132,132,-213,-214,-215,-216,-217,-218,-219,-220,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-92,132,132,132,132,-105,-104,-111,-113,-115,132,132,132,132,132,-107,-103,132,132,132,132,132,132,-106,132,-102,-100,-101,]),'WHILE':([73,78,79,81,82,83,152,156,157,167,169,171,245,246,247,341,342,343,],[-87,-98,-93,-95,-96,-97,-86,-94,234,-112,-114,-116,-111,-113,-115,-102,-100,-101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,20,]),'TypeDeclarations':([0,3,4,20,],[5,21,22,34,]),'ImportStatement':([0,3,4,20,],[7,7,23,23,]),'TypeDeclarationOptSemi':([0,3,4,5,20,21,22,34,],[8,8,8,24,8,24,24,24,]),'TypeDeclaration':([0,3,4,5,20,21,22,30,34,41,209,277,],[10,10,10,10,10,10,10,50,10,50,50,50,]),'ClassHeader':([0,3,4,5,20,21,22,30,34,41,209,277,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,20,21,22,30,34,41,209,277,],[12,12,12,12,12,12,12,51,12,51,51,51,]),'ClassWord':([0,3,4,5,12,20,21,22,30,34,41,51,209,277,],[13,13,13,13,31,13,13,13,13,13,13,31,13,13,]),'Modifier':([0,3,4,5,12,20,21,22,30,34,41,51,209,277,],[14,14,14,14,32,14,14,14,14,14,14,32,14,14,]),'QualifiedName':([6,9,30,40,41,51,72,85,86,90,97,98,99,106,132,150,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,225,226,235,236,237,240,271,277,282,284,297,299,303,307,309,311,316,324,329,340,],[25,27,59,92,59,59,92,158,164,158,158,158,158,158,59,59,92,158,158,158,158,158,164,158,158,158,158,158,158,158,158,158,158,158,158,59,158,158,158,158,158,158,59,158,158,158,158,158,158,59,158,158,59,158,158,158,158,158,158,158,158,158,]),'SemiColons':([10,25,27,44,71,],[28,35,37,137,151,]),'FieldDeclarations':([30,209,],[41,277,]),'FieldDeclarationOptSemi':([30,41,209,277,],[43,136,43,136,]),'FieldDeclaration':([30,41,209,277,],[44,44,44,44,]),'FieldVariableDeclaration':([30,41,209,277,],[45,45,45,45,]),'MethodDeclaration':([30,41,209,277,],[46,46,46,46,]),'ConstructorDeclaration':([30,41,209,277,],[47,47,47,47,]),'StaticInitializer':([30,41,209,277,],[48,48,48,48,]),'NonStaticInitializer':([30,41,209,277,],[49,49,49,49,]),'TypeSpecifier':([30,40,41,51,72,150,165,209,225,277,297,],[52,77,52,139,77,232,77,52,232,52,232,]),'ConstructorDeclarator':([30,41,51,209,277,],[53,53,140,53,53,]),'Block':([30,40,41,53,55,72,85,140,142,209,218,277,329,340,],[54,83,54,146,147,83,83,219,223,54,223,54,83,83,]),'TypeName':([30,40,41,51,72,132,150,165,209,225,277,297,],[56,56,56,56,56,212,56,56,56,56,56,56,]),'PrimitiveType':([30,40,41,51,72,85,86,90,97,98,99,106,132,150,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,225,226,235,236,237,240,271,277,282,284,297,299,303,307,309,311,316,324,329,340,],[58,91,58,58,91,159,163,159,159,159,159,159,58,58,91,159,159,159,159,159,163,159,159,159,159,159,159,159,159,159,159,159,159,58,159,159,159,159,159,159,58,159,159,159,159,159,159,58,159,159,58,159,159,159,159,159,159,159,159,159,]),'LocalVariableDeclarationsAndStatements':([40,],[72,]),'LocalVariableDeclarationOrStatement':([40,72,],[74,153,]),'LocalVariableDeclarationStatement':([40,72,165,],[75,75,243,]),'Statement':([40,72,85,329,340,],[76,76,157,341,343,]),'EmptyStatement':([40,72,85,329,340,],[79,79,79,79,79,]),'ExpressionStatement':([40,72,85,165,303,307,329,340,],[80,80,80,244,244,332,80,80,]),'IterationStatement':([40,72,85,329,340,],[81,81,81,81,81,]),'JumpStatement':([40,72,85,329,340,],[82,82,82,82,82,]),'Expression':([40,72,85,86,90,165,174,184,187,191,201,208,213,226,240,271,282,284,299,303,307,316,324,329,340,],[84,84,84,160,170,84,252,254,256,257,264,275,287,275,304,275,287,322,327,84,84,275,338,84,84,]),'AssignmentExpression':([40,72,85,86,90,165,174,175,184,187,191,201,208,213,226,240,271,282,284,299,303,307,316,324,329,340,],[93,93,93,93,93,93,93,253,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'ConditionalExpression':([40,72,85,86,90,165,174,175,184,187,191,201,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,333,94,94,94,94,]),'UnaryExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,240,271,282,284,299,303,307,309,316,324,329,340,],[95,95,95,95,95,186,188,190,195,95,95,95,95,190,95,95,190,190,190,190,95,190,190,190,190,190,190,95,190,190,95,190,190,190,95,190,190,95,95,95,95,95,95,95,190,95,95,95,95,]),'ConditionalOrExpression':([40,72,85,86,90,165,174,175,184,187,191,201,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ArithmeticUnaryOperator':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,240,271,282,284,299,303,307,309,316,324,329,340,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'CastExpression':([40,72,85,86,90,99,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,240,271,282,284,299,303,307,309,316,324,329,340,],[100,100,100,100,100,189,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,288,289,290,100,301,302,100,100,100,100,100,100,100,100,100,100,100,100,]),'LogicalUnaryExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,300,101,101,101,101,101,101,101,101,101,101,300,101,101,101,101,]),'ConditionalAndExpression':([40,72,85,86,90,165,174,175,184,185,187,191,201,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[102,102,102,102,102,102,102,102,102,255,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'PostfixExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'LogicalUnaryOperator':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'InclusiveOrExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,201,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[107,107,107,107,107,107,107,107,107,107,107,107,258,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'PrimaryExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'RealPostfixExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'ExclusiveOrExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,201,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[112,112,112,112,112,112,112,112,112,112,112,112,112,259,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'NotJustName':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'AndExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,201,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,261,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'SpecialName':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'NewAllocationExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ComplexPrimary':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'EqualityExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,263,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'PlainNewAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[120,120,120,120,120,120,120,120,120,120,249,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ComplexPrimaryNoParenthesis':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'RelationalExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,202,203,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,265,266,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ArrayAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'ClassAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ArrayAccess':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'FieldAccess':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'MethodCall':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'AdditiveExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,267,268,269,270,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'MethodAccess':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,235,236,237,240,271,282,284,299,303,307,309,311,316,324,329,340,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'MultiplicativeExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,226,240,271,282,284,299,303,307,309,316,324,329,340,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,278,279,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'VariableDeclarators':([52,77,139,],[141,154,217,]),'MethodDeclarator':([52,139,],[142,218,]),'VariableDeclarator':([52,77,139,220,],[143,143,143,292,]),'DeclaratorName':([52,77,139,220,232,],[144,155,144,155,298,]),'Dims':([56,163,164,212,280,],[148,238,239,281,318,]),'PrimitiveTypeExpression':([86,191,],[161,161,]),'ClassTypeExpression':([86,191,],[162,162,]),'AssignmentOperator':([95,],[175,]),'MethodBody':([142,218,],[221,291,]),'ParameterList':([150,225,],[229,293,]),'Parameter':([150,225,297,],[231,231,326,]),'ForInit':([165,],[240,]),'ExpressionStatements':([165,303,],[241,330,]),'ArrayInitializers':([208,271,],[273,314,]),'VariableInitializer':([208,226,271,316,],[274,295,274,335,]),'DimExprs':([212,],[280,]),'DimExpr':([212,280,],[283,319,]),'ArgumentList':([213,282,],[285,320,]),'ForExpr':([240,],[303,]),'ForIncr':([303,],[328,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','dowhile_yacc.py',75),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','dowhile_yacc.py',76),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','dowhile_yacc.py',84),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','dowhile_yacc.py',85),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',90),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',91),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',92),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',93),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',94),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',95),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',96),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',97),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',98),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','dowhile_yacc.py',103),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','dowhile_yacc.py',104),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','dowhile_yacc.py',112),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','dowhile_yacc.py',117),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',118),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',119),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',120),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',121),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',122),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',123),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','dowhile_yacc.py',131),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','dowhile_yacc.py',136),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','dowhile_yacc.py',137),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','dowhile_yacc.py',145),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','dowhile_yacc.py',146),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','dowhile_yacc.py',151),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','dowhile_yacc.py',152),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','dowhile_yacc.py',160),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','dowhile_yacc.py',161),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','dowhile_yacc.py',166),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','dowhile_yacc.py',167),
  ('TypeDeclaration -> ClassHeader { FieldDeclarations }','TypeDeclaration',4,'p_TypeDeclaration','dowhile_yacc.py',175),
  ('TypeDeclaration -> ClassHeader { }','TypeDeclaration',3,'p_TypeDeclaration','dowhile_yacc.py',176),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','dowhile_yacc.py',181),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','dowhile_yacc.py',182),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','dowhile_yacc.py',193),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','dowhile_yacc.py',194),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','dowhile_yacc.py',202),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','dowhile_yacc.py',203),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','dowhile_yacc.py',204),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','dowhile_yacc.py',205),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','dowhile_yacc.py',210),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','dowhile_yacc.py',214),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','dowhile_yacc.py',215),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','dowhile_yacc.py',223),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','dowhile_yacc.py',224),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','dowhile_yacc.py',232),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',233),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',234),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',235),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',236),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',237),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','dowhile_yacc.py',245),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','dowhile_yacc.py',246),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','dowhile_yacc.py',268),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','dowhile_yacc.py',269),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','dowhile_yacc.py',277),
  ('VariableDeclarator -> DeclaratorName = VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','dowhile_yacc.py',278),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','dowhile_yacc.py',289),
  ('VariableInitializer -> { }','VariableInitializer',2,'p_VariableInitializer','dowhile_yacc.py',290),
  ('VariableInitializer -> { ArrayInitializers }','VariableInitializer',3,'p_VariableInitializer','dowhile_yacc.py',291),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','dowhile_yacc.py',299),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','dowhile_yacc.py',300),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','dowhile_yacc.py',301),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','dowhile_yacc.py',309),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','dowhile_yacc.py',310),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','dowhile_yacc.py',325),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','dowhile_yacc.py',326),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','dowhile_yacc.py',327),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','dowhile_yacc.py',339),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','dowhile_yacc.py',340),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','dowhile_yacc.py',348),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','dowhile_yacc.py',356),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','dowhile_yacc.py',357),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','dowhile_yacc.py',366),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','dowhile_yacc.py',367),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','dowhile_yacc.py',372),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','dowhile_yacc.py',373),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','dowhile_yacc.py',386),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','dowhile_yacc.py',387),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','dowhile_yacc.py',399),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','dowhile_yacc.py',404),
  ('Block -> { LocalVariableDeclarationsAndStatements }','Block',3,'p_Block','dowhile_yacc.py',409),
  ('Block -> { }','Block',2,'p_Block','dowhile_yacc.py',410),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','dowhile_yacc.py',415),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','dowhile_yacc.py',416),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','dowhile_yacc.py',424),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','dowhile_yacc.py',425),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','dowhile_yacc.py',433),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','dowhile_yacc.py',444),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','dowhile_yacc.py',445),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','dowhile_yacc.py',446),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','dowhile_yacc.py',447),
  ('Statement -> Block','Statement',1,'p_Statement','dowhile_yacc.py',448),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','dowhile_yacc.py',456),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','dowhile_yacc.py',461),
  ('IterationStatement -> DO Statement WHILE ( Expression ) ;','IterationStatement',7,'p_IterationStatement','dowhile_yacc.py',466),
  ('IterationStatement -> FOR ( ForInit ForExpr ForIncr ) Statement','IterationStatement',7,'p_IterationStatement','dowhile_yacc.py',467),
  ('IterationStatement -> FOR ( ForInit ForExpr ) Statement','IterationStatement',6,'p_IterationStatement','dowhile_yacc.py',468),
  ('ForInit -> ExpressionStatements ;','ForInit',2,'p_ForInit','dowhile_yacc.py',473),
  ('ForInit -> LocalVariableDeclarationStatement','ForInit',1,'p_ForInit','dowhile_yacc.py',474),
  ('ForInit -> ;','ForInit',1,'p_ForInit','dowhile_yacc.py',475),
  ('ForExpr -> Expression ;','ForExpr',2,'p_ForExpr','dowhile_yacc.py',483),
  ('ForExpr -> ;','ForExpr',1,'p_ForExpr','dowhile_yacc.py',484),
  ('ForIncr -> ExpressionStatements','ForIncr',1,'p_ForIncr','dowhile_yacc.py',492),
  ('ExpressionStatements -> ExpressionStatement','ExpressionStatements',1,'p_ExpressionStatements','dowhile_yacc.py',496),
  ('ExpressionStatements -> ExpressionStatements , ExpressionStatement','ExpressionStatements',3,'p_ExpressionStatements','dowhile_yacc.py',497),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',505),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',506),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',507),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',508),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',509),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',510),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','dowhile_yacc.py',515),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','dowhile_yacc.py',516),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','dowhile_yacc.py',521),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','dowhile_yacc.py',522),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','dowhile_yacc.py',523),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','dowhile_yacc.py',528),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','dowhile_yacc.py',529),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',537),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',538),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',539),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',540),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',541),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',542),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','dowhile_yacc.py',557),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','dowhile_yacc.py',558),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',563),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',564),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',565),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',566),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',567),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','dowhile_yacc.py',572),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','dowhile_yacc.py',573),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',578),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',579),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',580),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','dowhile_yacc.py',585),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','dowhile_yacc.py',590),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','dowhile_yacc.py',591),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','dowhile_yacc.py',599),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','dowhile_yacc.py',600),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','dowhile_yacc.py',608),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','dowhile_yacc.py',609),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','dowhile_yacc.py',610),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','dowhile_yacc.py',611),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { ArrayInitializers }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','dowhile_yacc.py',612),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { FieldDeclarations }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','dowhile_yacc.py',613),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','dowhile_yacc.py',621),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','dowhile_yacc.py',622),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','dowhile_yacc.py',627),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','dowhile_yacc.py',628),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','dowhile_yacc.py',629),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','dowhile_yacc.py',634),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','dowhile_yacc.py',635),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','dowhile_yacc.py',643),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','dowhile_yacc.py',648),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','dowhile_yacc.py',649),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','dowhile_yacc.py',657),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','dowhile_yacc.py',658),
  ('RealPostfixExpression -> PostfixExpression OP_INC','RealPostfixExpression',2,'p_RealPostfixExpression','dowhile_yacc.py',663),
  ('RealPostfixExpression -> PostfixExpression OP_DEC','RealPostfixExpression',2,'p_RealPostfixExpression','dowhile_yacc.py',664),
  ('UnaryExpression -> OP_INC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',675),
  ('UnaryExpression -> OP_DEC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',676),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',677),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','dowhile_yacc.py',678),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','dowhile_yacc.py',699),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','dowhile_yacc.py',700),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','dowhile_yacc.py',712),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','dowhile_yacc.py',713),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','dowhile_yacc.py',718),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','dowhile_yacc.py',719),
  ('CastExpression -> UnaryExpression','CastExpression',1,'p_CastExpression','dowhile_yacc.py',724),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',725),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',726),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',727),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','dowhile_yacc.py',735),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','dowhile_yacc.py',736),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','dowhile_yacc.py',744),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','dowhile_yacc.py',749),
  ('MultiplicativeExpression -> MultiplicativeExpression * CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',750),
  ('MultiplicativeExpression -> MultiplicativeExpression / CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',751),
  ('MultiplicativeExpression -> MultiplicativeExpression % CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',752),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','dowhile_yacc.py',768),
  ('AdditiveExpression -> AdditiveExpression + MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','dowhile_yacc.py',769),
  ('AdditiveExpression -> AdditiveExpression - MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','dowhile_yacc.py',770),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','dowhile_yacc.py',783),
  ('RelationalExpression -> RelationalExpression < AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',784),
  ('RelationalExpression -> RelationalExpression > AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',785),
  ('RelationalExpression -> RelationalExpression OP_LE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',786),
  ('RelationalExpression -> RelationalExpression OP_GE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',787),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','dowhile_yacc.py',805),
  ('EqualityExpression -> EqualityExpression OP_EQ RelationalExpression','EqualityExpression',3,'p_EqualityExpression','dowhile_yacc.py',806),
  ('EqualityExpression -> EqualityExpression OP_NE RelationalExpression','EqualityExpression',3,'p_EqualityExpression','dowhile_yacc.py',807),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','dowhile_yacc.py',823),
  ('AndExpression -> AndExpression & EqualityExpression','AndExpression',3,'p_AndExpression','dowhile_yacc.py',824),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','dowhile_yacc.py',836),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','dowhile_yacc.py',837),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','dowhile_yacc.py',847),
  ('InclusiveOrExpression -> InclusiveOrExpression | ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','dowhile_yacc.py',848),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','dowhile_yacc.py',859),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','dowhile_yacc.py',860),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','dowhile_yacc.py',871),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','dowhile_yacc.py',872),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','dowhile_yacc.py',883),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','dowhile_yacc.py',884),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','dowhile_yacc.py',892),
  ('AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression','AssignmentExpression',3,'p_AssignmentExpression','dowhile_yacc.py',893),
  ('AssignmentOperator -> =','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',921),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',922),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',923),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',924),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',925),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',926),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',927),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',928),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','dowhile_yacc.py',935),
]
