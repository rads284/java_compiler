
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitBOOLEAN BREAK BYTE CHAR CLASS CONTINUE DO DOUBLE FLOAT IMPORT INT LONG NEW PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VOID WHILE FOR OP_INC OP_DEC OP_DIM OP_GE OP_LE OP_EQ OP_NE OP_LAND OP_LOR ASS_MUL ASS_DIV ASS_MOD ASS_ADD ASS_SUB ASS_OR ASS_AND IDENTIFIER LITERAL BOOLLIT NUM_LITERALcodegen_prefix :codegen_postfix :codegen_shorthand :codegen_declarator :push_icg :codegen_binop :codegen_assign :TypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' push FieldDeclarations '}' pop\n    | ClassHeader '{' push '}' pop\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    | NonStaticInitializer\n    | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName push_icg '=' VariableInitializer codegen_declarator\n    VariableInitializer : Expression\n    | '{' push '}' pop\n        | '{' push ArrayInitializers '}' pop\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' push LocalVariableDeclarationsAndStatements '}' pop\n    | '{' push '}' pop\n    push :pop :LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n    | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO codegen_do_init Statement  WHILE '(' Expression ')' ';' codegen_do_final\n    | FOR '(' ForInit codegen_for_init ForExpr codegen_for_expr ForIncr codegen_for_inc ')' Statement codegen_for\n    | FOR '(' ForInit codegen_for_init ForExpr codegen_for_expr ')' Statement codegen_for\n    codegen_do_init : codegen_do_final : codegen_for_init :codegen_for_expr :codegen_for_inc :codegen_for :ForInit : ExpressionStatements ';'\n    | LocalVariableDeclarationStatement\n    | ';'\n    ForExpr : Expression ';'\n    | ';'\n    ForIncr : ExpressionStatements ExpressionStatements : ExpressionStatement\n    | ExpressionStatements ',' ExpressionStatement\n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n    | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName\n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' push '}' pop\n        | ClassAllocationExpression '{' push '}' pop\n        | ArrayAllocationExpression '{' push ArrayInitializers '}' pop\n        | ClassAllocationExpression '{' push FieldDeclarations '}' pop\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n    | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC codegen_postfix\n    | PostfixExpression OP_DEC codegen_postfix\n    UnaryExpression : OP_INC UnaryExpression codegen_prefix\n    | OP_DEC UnaryExpression codegen_prefix\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression push_icg\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n        | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression\n    | MultiplicativeExpression '*' push_icg  CastExpression codegen_binop\n    | MultiplicativeExpression '/' push_icg CastExpression codegen_binop\n    | MultiplicativeExpression '%' push_icg CastExpression codegen_binop\n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression '+' push_icg MultiplicativeExpression codegen_binop\n    | AdditiveExpression '-' push_icg MultiplicativeExpression codegen_binop\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' push_icg AdditiveExpression codegen_binop\n    | RelationalExpression '>' push_icg AdditiveExpression codegen_binop\n    | RelationalExpression OP_LE push_icg AdditiveExpression codegen_binop\n    | RelationalExpression OP_GE push_icg AdditiveExpression codegen_binop\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ push_icg RelationalExpression codegen_binop\n        | EqualityExpression OP_NE push_icg RelationalExpression codegen_binop\n    AndExpression : EqualityExpression\n        | AndExpression '&' push_icg EqualityExpression codegen_binop\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' push_icg AndExpression codegen_binop\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' push_icg ExclusiveOrExpression codegen_binop\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND push_icg InclusiveOrExpression codegen_binop\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR push_icg ConditionalAndExpression codegen_binop\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression push_icg '=' ConditionalExpression codegen_assign\n    | UnaryExpression push_icg  AssignmentOperator push_icg AssignmentExpression codegen_shorthand\n    AssignmentOperator : ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,20,23,29,35,37,39,73,],[9,9,9,-36,9,-37,-21,-31,-38,-22,-39,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,193,194,222,230,238,291,339,],[15,15,15,15,-36,-32,-34,15,-46,-48,-49,-50,-51,15,15,15,-37,-33,-35,-21,-95,-47,15,-31,-38,-22,15,15,-96,-53,-55,-58,-59,-60,-61,-62,15,-92,-51,-39,-96,-54,-43,-56,-57,-88,-91,-96,-42,-87,-76,-85,-86,-96,-94,254,257,-95,-75,-93,15,15,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,222,230,238,291,339,],[16,16,16,16,-36,-32,-34,16,-46,-48,-49,-50,-51,16,16,16,-37,-33,-35,-21,-95,-47,16,-31,-38,-22,16,16,-96,-53,-55,-58,-59,-60,-61,-62,16,-92,-51,-39,-96,-54,-43,-56,-57,-88,-91,-96,-42,-87,-76,-85,-86,-96,-94,-95,-75,-93,16,16,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,222,230,238,291,339,],[17,17,17,17,-36,-32,-34,17,-46,-48,-49,-50,-51,17,17,17,-37,-33,-35,-21,-95,-47,17,-31,-38,-22,17,17,-96,-53,-55,-58,-59,-60,-61,-62,17,-92,-51,-39,-96,-54,-43,-56,-57,-88,-91,-96,-42,-87,-76,-85,-86,-96,-94,-95,-75,-93,17,17,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,222,230,238,291,339,],[18,18,18,18,-36,-32,-34,18,-46,-48,-49,-50,-51,18,18,18,-37,-33,-35,-21,-95,-47,18,-31,-38,-22,18,18,-96,-53,-55,-58,-59,-60,-61,-62,18,-92,-51,-39,-96,-54,-43,-56,-57,-88,-91,-96,-42,-87,-76,-85,-86,-96,-94,-95,-75,-93,18,18,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,222,230,238,291,339,],[19,19,19,19,-36,-32,-34,19,-46,-48,-49,-50,-51,19,19,19,-37,-33,-35,-21,-95,-47,19,-31,-38,-22,59,59,-96,-53,-55,-58,-59,-60,-61,-62,19,-92,-51,-39,-96,-54,-43,-56,-57,-88,-91,-96,-42,-87,-76,-85,-86,-96,-94,-95,-75,-93,59,59,]),'$end':([1,2,3,4,5,7,8,10,20,21,22,23,24,28,29,34,35,37,39,46,73,75,77,155,],[0,-23,-28,-29,-30,-36,-32,-34,-25,-26,-27,-37,-33,-35,-21,-24,-31,-38,-22,-96,-39,-96,-43,-42,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,26,29,30,31,32,36,38,39,40,42,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,105,106,108,109,110,111,112,117,118,119,123,124,126,130,131,152,155,158,159,160,162,163,164,167,171,172,173,174,177,178,184,186,188,190,194,195,197,198,200,204,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[26,26,33,-46,-52,-48,-49,-50,-51,-40,-21,-95,41,-47,42,42,-22,61,-41,-95,61,-96,-53,-55,-58,-59,-60,-61,-62,61,86,-92,-51,-8,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,26,-96,-54,-43,-56,-57,86,-88,-91,-9,-176,26,26,-96,-97,-99,-100,86,-107,-102,-104,-105,-106,-112,26,185,187,26,-10,-11,26,26,26,-190,-191,26,-188,-189,26,-42,-87,86,-76,-85,-86,26,-177,86,-96,-98,-94,-103,26,26,-127,-129,-131,42,26,26,-5,26,26,-5,-5,279,-5,281,-5,26,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,26,-5,-5,-5,-75,26,26,-93,-101,26,26,26,-114,-120,-119,-126,-128,-130,26,-5,-229,-230,-231,-232,-233,-234,-235,26,26,26,26,26,26,26,26,26,26,26,26,61,26,26,26,26,26,26,26,-95,26,-118,26,26,26,26,61,26,26,26,-115,-122,26,26,-121,26,-113,-117,-109,26,-111,-117,-110,]),';':([10,25,26,27,28,29,35,37,39,42,43,44,46,48,49,50,51,52,53,54,58,73,74,75,77,78,79,82,83,84,85,86,87,88,90,92,93,94,95,96,98,99,100,101,102,103,104,105,108,109,110,112,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,155,156,157,158,160,161,162,163,166,167,172,173,174,175,176,177,178,184,185,186,187,188,189,190,191,196,199,201,202,203,206,207,208,230,231,233,238,239,241,246,247,248,249,250,251,252,253,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,305,306,307,311,312,313,314,315,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,352,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,386,391,392,394,395,396,397,399,401,402,404,405,406,407,408,409,],[29,29,-40,29,39,-21,39,39,-22,-41,29,-95,-96,29,79,-58,-59,-60,-61,-62,-92,39,98,-96,-43,39,-57,-64,163,-65,-67,-83,-88,-91,-176,98,-96,-97,-99,-100,-107,-102,177,-104,-105,-106,-108,-112,186,188,190,-132,-236,-226,-5,-224,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-42,-63,163,-87,-76,-79,-85,-86,-84,-177,-96,-98,-94,239,-67,-103,98,248,251,-127,252,-129,253,-131,-132,-192,-1,-1,-184,-5,-2,-2,-187,-75,-66,-78,-93,-101,-137,-114,315,-120,-119,-124,-126,-128,-130,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-77,-4,-69,-195,-193,-194,357,-118,-145,-7,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-68,390,-125,-227,-3,-225,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-96,-228,-166,-167,-70,-96,402,98,-71,-113,-117,-109,98,-111,-117,-110,]),'{':([11,29,30,33,39,40,41,44,45,46,47,48,50,51,52,53,54,57,58,59,74,75,76,77,78,79,81,83,87,88,90,92,93,94,95,96,98,99,101,102,103,105,143,144,155,157,158,160,161,162,163,167,169,172,173,174,177,178,186,188,190,221,222,230,233,234,235,238,239,251,252,253,290,291,294,295,297,305,308,339,342,343,345,353,375,380,381,399,402,404,405,406,407,408,409,],[30,-21,-95,-45,-22,44,-44,-95,44,-96,-53,-55,-58,-59,-60,-61,-62,44,-92,44,44,-96,-54,-43,-56,-57,44,44,-88,-91,-176,44,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,221,222,-42,44,-87,-76,-79,-85,-86,-177,-90,-96,-98,-94,-103,44,-127,-129,-131,-95,-95,-75,-78,308,-89,-93,-101,-126,-128,-130,308,44,-171,-172,-173,-77,-95,44,-170,-174,-169,308,308,-168,-175,44,-113,-117,-109,44,-111,-117,-110,]),'BOOLEAN':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,64,-95,64,-96,-53,-55,-58,-59,-60,-61,-62,64,-92,-51,64,-96,-54,-43,-56,-57,-88,-91,64,64,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,64,64,64,64,64,-190,-191,64,-188,-189,64,-42,-87,-76,-85,-86,64,-96,-98,-94,-103,64,64,-127,-129,-131,64,64,-5,64,64,-5,-5,-5,-5,64,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,64,-5,-5,-5,-75,64,64,-93,-101,64,64,64,-114,-120,-119,-126,-128,-130,64,-5,-229,-230,-231,-232,-233,-234,-235,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-95,64,-118,64,64,64,64,64,64,64,64,-115,-122,64,64,-121,64,-113,-117,-109,64,-111,-117,-110,]),'CHAR':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,65,-95,65,-96,-53,-55,-58,-59,-60,-61,-62,65,-92,-51,65,-96,-54,-43,-56,-57,-88,-91,65,65,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,65,65,65,65,65,-190,-191,65,-188,-189,65,-42,-87,-76,-85,-86,65,-96,-98,-94,-103,65,65,-127,-129,-131,65,65,-5,65,65,-5,-5,-5,-5,65,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,65,-5,-5,-5,-75,65,65,-93,-101,65,65,65,-114,-120,-119,-126,-128,-130,65,-5,-229,-230,-231,-232,-233,-234,-235,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-95,65,-118,65,65,65,65,65,65,65,65,-115,-122,65,65,-121,65,-113,-117,-109,65,-111,-117,-110,]),'BYTE':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,66,-95,66,-96,-53,-55,-58,-59,-60,-61,-62,66,-92,-51,66,-96,-54,-43,-56,-57,-88,-91,66,66,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,66,66,66,66,66,-190,-191,66,-188,-189,66,-42,-87,-76,-85,-86,66,-96,-98,-94,-103,66,66,-127,-129,-131,66,66,-5,66,66,-5,-5,-5,-5,66,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,66,-5,-5,-5,-75,66,66,-93,-101,66,66,66,-114,-120,-119,-126,-128,-130,66,-5,-229,-230,-231,-232,-233,-234,-235,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-95,66,-118,66,66,66,66,66,66,66,66,-115,-122,66,66,-121,66,-113,-117,-109,66,-111,-117,-110,]),'SHORT':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,67,-95,67,-96,-53,-55,-58,-59,-60,-61,-62,67,-92,-51,67,-96,-54,-43,-56,-57,-88,-91,67,67,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,67,67,67,67,67,-190,-191,67,-188,-189,67,-42,-87,-76,-85,-86,67,-96,-98,-94,-103,67,67,-127,-129,-131,67,67,-5,67,67,-5,-5,-5,-5,67,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,67,-5,-5,-5,-75,67,67,-93,-101,67,67,67,-114,-120,-119,-126,-128,-130,67,-5,-229,-230,-231,-232,-233,-234,-235,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-95,67,-118,67,67,67,67,67,67,67,67,-115,-122,67,67,-121,67,-113,-117,-109,67,-111,-117,-110,]),'INT':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,68,-95,68,-96,-53,-55,-58,-59,-60,-61,-62,68,-92,-51,68,-96,-54,-43,-56,-57,-88,-91,68,68,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,68,68,68,68,68,-190,-191,68,-188,-189,68,-42,-87,-76,-85,-86,68,-96,-98,-94,-103,68,68,-127,-129,-131,68,68,-5,68,68,-5,-5,-5,-5,68,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,68,-5,-5,-5,-75,68,68,-93,-101,68,68,68,-114,-120,-119,-126,-128,-130,68,-5,-229,-230,-231,-232,-233,-234,-235,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-95,68,-118,68,68,68,68,68,68,68,68,-115,-122,68,68,-121,68,-113,-117,-109,68,-111,-117,-110,]),'LONG':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,69,-95,69,-96,-53,-55,-58,-59,-60,-61,-62,69,-92,-51,69,-96,-54,-43,-56,-57,-88,-91,69,69,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,69,69,69,69,69,-190,-191,69,-188,-189,69,-42,-87,-76,-85,-86,69,-96,-98,-94,-103,69,69,-127,-129,-131,69,69,-5,69,69,-5,-5,-5,-5,69,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,69,-5,-5,-5,-75,69,69,-93,-101,69,69,69,-114,-120,-119,-126,-128,-130,69,-5,-229,-230,-231,-232,-233,-234,-235,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-95,69,-118,69,69,69,69,69,69,69,69,-115,-122,69,69,-121,69,-113,-117,-109,69,-111,-117,-110,]),'FLOAT':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,70,-95,70,-96,-53,-55,-58,-59,-60,-61,-62,70,-92,-51,70,-96,-54,-43,-56,-57,-88,-91,70,70,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,70,70,70,70,70,-190,-191,70,-188,-189,70,-42,-87,-76,-85,-86,70,-96,-98,-94,-103,70,70,-127,-129,-131,70,70,-5,70,70,-5,-5,-5,-5,70,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,70,-5,-5,-5,-75,70,70,-93,-101,70,70,70,-114,-120,-119,-126,-128,-130,70,-5,-229,-230,-231,-232,-233,-234,-235,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-95,70,-118,70,70,70,70,70,70,70,70,-115,-122,70,70,-121,70,-113,-117,-109,70,-111,-117,-110,]),'DOUBLE':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,71,-95,71,-96,-53,-55,-58,-59,-60,-61,-62,71,-92,-51,71,-96,-54,-43,-56,-57,-88,-91,71,71,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,71,71,71,71,71,-190,-191,71,-188,-189,71,-42,-87,-76,-85,-86,71,-96,-98,-94,-103,71,71,-127,-129,-131,71,71,-5,71,71,-5,-5,-5,-5,71,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,71,-5,-5,-5,-75,71,71,-93,-101,71,71,71,-114,-120,-119,-126,-128,-130,71,-5,-229,-230,-231,-232,-233,-234,-235,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-95,71,-118,71,71,71,71,71,71,71,71,-115,-122,71,71,-121,71,-113,-117,-109,71,-111,-117,-110,]),'VOID':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,234,236,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,308,314,315,316,319,320,323,339,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-46,-48,-49,-50,-51,-21,-95,-47,-22,72,-95,72,-96,-53,-55,-58,-59,-60,-61,-62,72,-92,-51,72,-96,-54,-43,-56,-57,-88,-91,72,72,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,72,72,72,72,72,-190,-191,72,-188,-189,72,-42,-87,-76,-85,-86,72,-96,-98,-94,-103,72,72,-127,-129,-131,72,72,-5,72,72,-5,-5,-5,-5,72,-5,-5,-5,-5,-5,-5,-95,-95,-5,-5,72,-5,-5,-5,-75,72,72,-93,-101,72,72,72,-114,-120,-119,-126,-128,-130,72,-5,-229,-230,-231,-232,-233,-234,-235,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-95,72,-118,72,72,72,72,72,72,72,72,-115,-122,72,72,-121,72,-113,-117,-109,72,-111,-117,-110,]),'.':([25,26,27,42,61,63,64,65,66,67,68,69,70,71,72,90,111,112,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,182,183,191,192,206,207,241,254,255,256,257,276,277,279,281,294,295,297,300,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[36,-40,38,-41,-40,36,-12,-13,-14,-15,-16,-17,-18,-19,-20,-176,193,194,210,212,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,193,194,194,193,-2,-2,-137,-151,-161,-149,-150,-180,-181,-148,-147,-171,-172,-173,-153,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'[':([26,42,62,63,64,65,66,67,68,69,70,71,72,112,137,141,145,146,147,148,149,150,183,191,225,241,254,256,257,279,281,294,297,300,317,322,323,328,343,347,381,],[-40,-41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,195,214,-138,-139,-140,-141,-142,-143,-144,195,195,298,-137,-151,-149,-150,-148,-147,298,-173,-153,-145,-137,-137,-146,-174,-152,-175,]),'OP_DIM':([26,42,60,61,62,63,64,65,66,67,68,69,70,71,72,83,85,86,89,90,111,112,157,161,166,167,176,182,183,225,233,237,244,245,294,295,297,305,342,343,381,],[-40,-41,90,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,161,166,-83,167,-176,-10,-11,161,-79,-84,-177,166,90,90,90,-78,166,167,167,90,167,-173,-77,167,-174,-175,]),'OP_INC':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,117,118,119,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,172,173,174,177,178,183,184,186,188,190,191,195,197,198,200,204,205,206,207,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,269,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,292,293,294,295,296,297,298,300,302,303,304,308,314,315,316,317,319,320,322,323,328,335,338,342,343,345,347,348,353,354,355,357,373,374,375,376,377,380,381,389,390,392,394,399,402,404,405,406,407,408,409,],[-40,-41,-95,117,-176,117,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,117,117,-132,117,117,117,-190,-191,206,117,-178,-179,-188,-189,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-96,-98,-94,-103,117,-132,117,-127,-129,-131,-132,117,117,-5,117,117,-5,-2,-2,-5,-5,-5,117,-5,-5,-5,-5,-5,-5,-95,-5,-5,117,-5,-5,-5,117,-93,-101,-137,117,117,-114,-120,-119,-126,-128,-130,-151,-161,-149,-150,117,-5,-229,-230,-231,-232,-233,-234,-235,117,117,-180,-181,117,-148,117,-147,117,117,117,117,117,117,117,117,117,117,-171,-172,117,-173,117,-153,117,117,117,-95,117,-118,117,-145,117,117,-137,-137,-146,-96,-96,-170,-174,-169,-152,117,117,117,-115,-122,-164,-96,117,-165,-96,-168,-175,117,-121,-166,-167,117,-113,-117,-109,117,-111,-117,-110,]),'OP_DEC':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,117,118,119,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,172,173,174,177,178,183,184,186,188,190,191,195,197,198,200,204,205,206,207,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,269,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,292,293,294,295,296,297,298,300,302,303,304,308,314,315,316,317,319,320,322,323,328,335,338,342,343,345,347,348,353,354,355,357,373,374,375,376,377,380,381,389,390,392,394,399,402,404,405,406,407,408,409,],[-40,-41,-95,118,-176,118,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,118,118,-132,118,118,118,-190,-191,207,118,-178,-179,-188,-189,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-96,-98,-94,-103,118,-132,118,-127,-129,-131,-132,118,118,-5,118,118,-5,-2,-2,-5,-5,-5,118,-5,-5,-5,-5,-5,-5,-95,-5,-5,118,-5,-5,-5,118,-93,-101,-137,118,118,-114,-120,-119,-126,-128,-130,-151,-161,-149,-150,118,-5,-229,-230,-231,-232,-233,-234,-235,118,118,-180,-181,118,-148,118,-147,118,118,118,118,118,118,118,118,118,118,-171,-172,118,-173,118,-153,118,118,118,-95,118,-118,118,-145,118,118,-137,-137,-146,-96,-96,-170,-174,-169,-152,118,118,118,-115,-122,-164,-96,118,-165,-96,-168,-175,118,-121,-166,-167,118,-113,-117,-109,118,-111,-117,-110,]),'=':([26,42,85,86,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,165,166,167,176,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-5,-83,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,234,-84,-177,-5,-132,-132,259,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'ASS_MUL':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-132,-132,261,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'ASS_DIV':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-132,-132,262,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'ASS_MOD':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-132,-132,263,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'ASS_ADD':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-132,-132,264,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'ASS_SUB':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-132,-132,265,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'ASS_AND':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-132,-132,266,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'ASS_OR':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,342,343,345,347,373,374,376,377,380,381,392,394,],[-40,-41,-176,-132,-5,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,-177,-132,-132,267,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,-170,-174,-169,-152,-164,-96,-165,-96,-168,-175,-166,-167,]),'*':([26,38,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,340,341,342,343,345,347,349,350,351,373,374,376,377,380,381,383,384,385,392,394,],[-40,43,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,227,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,227,227,-170,-174,-169,-152,-6,-6,-6,-164,-96,-165,-96,-168,-175,-200,-201,-202,-166,-167,]),'/':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,340,341,342,343,345,347,349,350,351,373,374,376,377,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,228,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,228,228,-170,-174,-169,-152,-6,-6,-6,-164,-96,-165,-96,-168,-175,-200,-201,-202,-166,-167,]),'%':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,335,338,340,341,342,343,345,347,349,350,351,373,374,376,377,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,229,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,-96,-96,229,229,-170,-174,-169,-152,-6,-6,-6,-164,-96,-165,-96,-168,-175,-200,-201,-202,-166,-167,]),'+':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,115,117,118,119,120,121,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,151,154,167,172,173,174,177,178,183,184,186,188,190,191,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,269,270,272,273,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,292,293,294,295,296,297,298,300,302,303,304,308,311,312,313,314,315,316,317,319,320,322,323,328,331,332,333,334,335,338,340,341,342,343,345,347,348,349,350,351,353,354,355,357,373,374,375,376,377,378,379,380,381,383,384,385,389,390,392,394,399,402,404,405,406,407,408,409,],[-40,-41,-95,123,-176,123,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,123,123,-132,-5,123,123,123,-199,-185,-190,-191,-186,123,-178,-179,-188,-189,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,223,-203,-177,-96,-98,-94,-103,123,-132,123,-127,-129,-131,-132,123,-192,123,-5,-1,123,-1,-184,-5,123,-5,-2,-2,-187,-5,-5,-5,123,-5,-5,-5,-5,-5,-5,-95,-5,-5,123,-5,-5,-5,123,-93,-101,-137,123,123,-114,-120,-119,-126,-128,-130,-151,-161,-149,-150,123,-5,-229,-230,-231,-232,-233,-234,-235,123,-182,-183,-192,123,-180,-181,123,-148,123,-147,123,123,123,123,123,123,123,123,123,123,-171,-172,123,-173,123,-153,123,123,123,-95,-195,-193,-194,123,-118,123,-145,123,123,-137,-137,-146,223,223,223,223,-96,-96,-6,-6,-170,-174,-169,-152,123,-6,-6,-6,123,123,-115,-122,-164,-96,123,-165,-96,-204,-205,-168,-175,-200,-201,-202,123,-121,-166,-167,123,-113,-117,-109,123,-111,-117,-110,]),'-':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,115,117,118,119,120,121,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,151,154,167,172,173,174,177,178,183,184,186,188,190,191,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,269,270,272,273,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,292,293,294,295,296,297,298,300,302,303,304,308,311,312,313,314,315,316,317,319,320,322,323,328,331,332,333,334,335,338,340,341,342,343,345,347,348,349,350,351,353,354,355,357,373,374,375,376,377,378,379,380,381,383,384,385,389,390,392,394,399,402,404,405,406,407,408,409,],[-40,-41,-95,124,-176,124,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,124,124,-132,-5,124,124,124,-199,-185,-190,-191,-186,124,-178,-179,-188,-189,-133,-134,-135,-136,-157,-160,-138,-162,-163,-139,-140,-141,-142,-143,-144,224,-203,-177,-96,-98,-94,-103,124,-132,124,-127,-129,-131,-132,124,-192,124,-5,-1,124,-1,-184,-5,124,-5,-2,-2,-187,-5,-5,-5,124,-5,-5,-5,-5,-5,-5,-95,-5,-5,124,-5,-5,-5,124,-93,-101,-137,124,124,-114,-120,-119,-126,-128,-130,-151,-161,-149,-150,124,-5,-229,-230,-231,-232,-233,-234,-235,124,-182,-183,-192,124,-180,-181,124,-148,124,-147,124,124,124,124,124,124,124,124,124,124,-171,-172,124,-173,124,-153,124,124,124,-95,-195,-193,-194,124,-118,124,-145,124,124,-137,-137,-146,224,224,224,224,-96,-96,-6,-6,-170,-174,-169,-152,124,-6,-6,-6,124,124,-115,-122,-164,-96,124,-165,-96,-204,-205,-168,-175,-200,-201,-202,124,-121,-166,-167,124,-113,-117,-109,124,-111,-117,-110,]),'<':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,217,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,217,217,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'>':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,218,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,218,218,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'OP_LE':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,219,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,219,219,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'OP_GE':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,-157,-160,-138,220,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,-146,220,220,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'OP_EQ':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,215,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,215,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'OP_NE':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,-134,-135,-136,216,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,216,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'&':([26,42,90,112,115,120,121,125,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,-133,213,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,213,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'^':([26,42,90,112,115,120,121,125,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,-178,-179,211,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,211,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'|':([26,42,90,112,115,120,121,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,-186,209,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-137,-137,209,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'OP_LAND':([26,42,90,112,115,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,-199,-185,205,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,205,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'?':([26,42,90,112,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,197,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'OP_LOR':([26,42,90,112,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,183,191,196,199,201,202,203,206,207,208,241,254,255,256,257,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,392,394,],[-40,-41,-176,-132,-5,198,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-166,-167,]),'(':([26,42,44,61,62,63,64,65,66,67,68,69,70,71,72,74,85,86,92,93,94,95,96,98,99,101,102,103,105,106,107,110,112,117,118,119,123,124,126,130,131,135,139,141,145,146,147,148,149,150,153,166,172,173,174,177,178,183,184,186,188,190,191,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,254,256,257,259,260,261,262,263,264,265,266,267,269,275,278,279,280,281,282,284,285,286,287,288,289,290,292,293,296,298,300,302,303,304,308,310,314,315,316,317,319,320,323,328,347,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-40,-41,-95,91,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,106,164,-83,106,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,106,184,106,-156,200,200,204,-190,-191,200,-188,-189,-155,-157,-154,-139,-140,-141,-142,-143,-144,226,-84,-96,-98,-94,-103,106,-156,106,-127,-129,-131,-156,106,106,-5,106,106,-5,-5,-5,-5,106,-5,-5,-5,-5,-5,-5,-95,-5,-5,296,106,-5,-5,-5,106,-93,-101,200,204,204,-114,-120,-119,-126,-128,-130,-151,-149,-150,204,-5,-229,-230,-231,-232,-233,-234,-235,204,204,204,-148,204,-147,204,204,204,204,204,204,204,106,204,204,106,106,-153,204,204,204,-95,354,106,-118,106,-145,106,204,200,-146,-152,106,106,106,-115,-122,106,106,-121,106,-113,-117,-109,106,-111,-117,-110,]),')':([26,42,64,65,66,67,68,69,70,71,72,86,90,91,104,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,164,166,167,168,170,179,180,181,182,183,191,196,199,201,202,203,206,207,208,226,232,237,241,244,245,250,254,255,256,257,270,271,272,273,274,276,277,279,281,294,295,296,297,299,300,301,309,311,312,313,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,344,345,347,349,350,351,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,388,389,390,391,392,394,398,400,403,],[-40,-41,-12,-13,-14,-15,-16,-17,-18,-19,-20,-83,-176,169,-108,-236,-226,-5,-224,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,233,-84,-177,235,-80,241,242,243,-196,-132,-132,-192,-1,-1,-184,-5,-2,-2,-187,300,305,-82,-137,-197,-198,-124,-151,-161,-149,-150,-182,322,-183,-192,323,-180,-181,-148,-147,-171,-172,345,-173,347,-153,-158,-81,-195,-193,-194,-145,-7,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,380,-169,-152,-6,-6,-6,-115,-122,-125,-227,-3,-225,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-159,-200,-201,-202,397,399,-121,-228,-166,-167,-116,-123,406,]),',':([26,42,82,84,85,86,90,104,112,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,156,166,167,168,170,175,176,191,196,199,201,202,203,206,207,208,231,232,237,241,247,250,254,255,256,257,270,272,273,276,277,279,281,294,295,297,299,300,301,306,307,309,311,312,313,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,347,349,350,351,352,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,391,392,393,394,395,396,400,401,],[-40,-41,159,-65,-67,-83,-176,-108,-132,-236,-226,-5,-224,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,159,-84,-177,236,-80,159,-67,-132,-192,-1,-1,-184,-5,-2,-2,-187,-66,236,-82,-137,316,-124,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,348,-153,-158,-4,-69,-81,-195,-193,-194,-145,-7,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,375,-72,-96,-6,-6,-170,-174,348,-169,-152,-6,-6,-6,-68,-125,-227,-3,-225,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-74,-165,-96,-204,-205,-168,-175,-159,-200,-201,-202,-96,375,-228,-166,-73,-167,-70,-96,316,-71,]),']':([26,42,90,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,191,196,199,201,202,203,206,207,208,241,254,255,256,257,258,270,272,273,276,277,279,281,283,294,295,297,300,311,312,313,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,346,347,349,350,351,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,391,392,394,],[-40,-41,-176,-236,-226,-5,-224,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,317,-182,-183,-192,-180,-181,-148,-147,328,-171,-172,-173,-153,-195,-193,-194,-145,-7,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,381,-152,-6,-6,-6,-227,-3,-225,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-228,-166,-167,]),':':([26,42,90,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,191,196,199,201,202,203,206,207,208,241,254,255,256,257,268,270,272,273,276,277,279,281,294,295,297,300,311,312,313,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,345,347,349,350,351,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,383,384,385,391,392,394,],[-40,-41,-176,-236,-226,-5,-224,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-177,-132,-192,-1,-1,-184,-5,-2,-2,-187,-137,-151,-161,-149,-150,320,-182,-183,-192,-180,-181,-148,-147,-171,-172,-173,-153,-195,-193,-194,-145,-7,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,-96,-6,-6,-170,-174,-169,-152,-6,-6,-6,-227,-3,-225,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-165,-96,-204,-205,-168,-175,-200,-201,-202,-228,-166,-167,]),'}':([26,29,30,39,40,42,44,45,46,47,48,50,51,52,53,54,58,74,75,76,77,78,79,87,88,90,92,93,94,95,96,98,99,101,102,103,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,155,158,160,162,163,167,172,173,174,177,186,188,190,191,196,199,201,202,203,206,207,208,221,222,230,238,239,241,251,252,253,254,255,256,257,270,272,273,276,277,279,281,290,291,294,295,297,300,307,308,311,312,313,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,347,349,350,351,353,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,391,392,393,394,395,396,401,402,404,405,407,408,409,],[-40,-21,-95,-22,46,-41,-95,75,-96,-53,-55,-58,-59,-60,-61,-62,-92,93,-96,-54,-43,-56,-57,-88,-91,-176,172,-96,-97,-99,-100,-107,-102,-104,-105,-106,-236,-226,-5,-224,-199,-185,-222,-186,-220,-178,-179,-218,-133,-216,-134,-135,-136,-214,-157,-160,-138,-211,-162,-163,-139,-140,-141,-142,-143,-144,-206,-203,-42,-87,-76,-85,-86,-177,-96,-98,-94,-103,-127,-129,-131,-132,-192,-1,-1,-184,-5,-2,-2,-187,-95,-95,-75,-93,-101,-137,-126,-128,-130,-151,-161,-149,-150,-182,-183,-192,-180,-181,-148,-147,335,338,-171,-172,-173,-153,-69,-95,-195,-193,-194,-145,-7,-6,-137,-137,-6,-6,-6,-6,-146,-6,-6,-6,-6,-6,-6,-96,374,-72,-96,377,-6,-6,-170,-174,-169,-152,-6,-6,-6,386,-227,-3,-225,-223,-221,-219,-217,-215,-212,-213,-207,-208,-209,-210,-164,-96,-74,-165,-96,-204,-205,-168,-175,-200,-201,-202,-96,396,-228,-166,-73,-167,-70,-96,-71,-113,-117,-109,-111,-117,-110,]),'DO':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,178,186,188,190,238,239,251,252,253,399,402,404,405,406,407,408,409,],[-95,105,105,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,-96,-98,-94,-103,105,-127,-129,-131,-93,-101,-126,-128,-130,105,-113,-117,-109,105,-111,-117,-110,]),'FOR':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,178,186,188,190,238,239,251,252,253,399,402,404,405,406,407,408,409,],[-95,107,107,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,-96,-98,-94,-103,107,-127,-129,-131,-93,-101,-126,-128,-130,107,-113,-117,-109,107,-111,-117,-110,]),'BREAK':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,178,186,188,190,238,239,251,252,253,399,402,404,405,406,407,408,409,],[-95,108,108,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,-96,-98,-94,-103,108,-127,-129,-131,-93,-101,-126,-128,-130,108,-113,-117,-109,108,-111,-117,-110,]),'CONTINUE':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,178,186,188,190,238,239,251,252,253,399,402,404,405,406,407,408,409,],[-95,109,109,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,-96,-98,-94,-103,109,-127,-129,-131,-93,-101,-126,-128,-130,109,-113,-117,-109,109,-111,-117,-110,]),'RETURN':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,178,186,188,190,238,239,251,252,253,399,402,404,405,406,407,408,409,],[-95,110,110,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,-96,-98,-94,-103,110,-127,-129,-131,-93,-101,-126,-128,-130,110,-113,-117,-109,110,-111,-117,-110,]),'~':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,308,314,315,316,319,320,323,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-95,130,130,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,130,130,130,130,130,-190,-191,130,-188,-189,-96,-98,-94,-103,130,130,-127,-129,-131,130,130,-5,130,130,-5,-5,-5,-5,130,-5,-5,-5,-5,-5,-5,-95,-5,-5,130,-5,-5,-5,130,-93,-101,130,130,130,-114,-120,-119,-126,-128,-130,130,-5,-229,-230,-231,-232,-233,-234,-235,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-95,130,-118,130,130,130,130,130,130,130,-115,-122,130,130,-121,130,-113,-117,-109,130,-111,-117,-110,]),'!':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,308,314,315,316,319,320,323,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-95,131,131,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,131,131,131,131,131,-190,-191,131,-188,-189,-96,-98,-94,-103,131,131,-127,-129,-131,131,131,-5,131,131,-5,-5,-5,-5,131,-5,-5,-5,-5,-5,-5,-95,-5,-5,131,-5,-5,-5,131,-93,-101,131,131,131,-114,-120,-119,-126,-128,-130,131,-5,-229,-230,-231,-232,-233,-234,-235,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-95,131,-118,131,131,131,131,131,131,131,-115,-122,131,131,-121,131,-113,-117,-109,131,-111,-117,-110,]),'THIS':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,172,173,174,177,178,184,186,188,190,194,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,308,314,315,316,319,320,323,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-95,139,139,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,139,139,139,139,139,-190,-191,139,-188,-189,-96,-98,-94,-103,139,139,-127,-129,-131,256,139,139,-5,139,139,-5,-5,-5,-5,139,-5,-5,-5,-5,-5,-5,-95,-5,-5,139,-5,-5,-5,139,-93,-101,139,139,139,-114,-120,-119,-126,-128,-130,139,-5,-229,-230,-231,-232,-233,-234,-235,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-95,139,-118,139,139,139,139,139,139,139,-115,-122,139,139,-121,139,-113,-117,-109,139,-111,-117,-110,]),'LITERAL':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,308,314,315,316,319,320,323,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-95,145,145,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,145,145,145,145,145,-190,-191,145,-188,-189,-96,-98,-94,-103,145,145,-127,-129,-131,145,145,-5,145,145,-5,-5,-5,-5,145,-5,-5,-5,-5,-5,-5,-95,-5,-5,145,-5,-5,-5,145,-93,-101,145,145,145,-114,-120,-119,-126,-128,-130,145,-5,-229,-230,-231,-232,-233,-234,-235,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,-95,145,-118,145,145,145,145,145,145,145,-115,-122,145,145,-121,145,-113,-117,-109,145,-111,-117,-110,]),'NUM_LITERAL':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,308,314,315,316,319,320,323,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-95,146,146,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,146,146,146,146,146,-190,-191,146,-188,-189,-96,-98,-94,-103,146,146,-127,-129,-131,146,146,-5,146,146,-5,-5,-5,-5,146,-5,-5,-5,-5,-5,-5,-95,-5,-5,146,-5,-5,-5,146,-93,-101,146,146,146,-114,-120,-119,-126,-128,-130,146,-5,-229,-230,-231,-232,-233,-234,-235,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,-95,146,-118,146,146,146,146,146,146,146,-115,-122,146,146,-121,146,-113,-117,-109,146,-111,-117,-110,]),'BOOLLIT':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,172,173,174,177,178,184,186,188,190,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,308,314,315,316,319,320,323,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-95,147,147,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,147,147,147,147,147,-190,-191,147,-188,-189,-96,-98,-94,-103,147,147,-127,-129,-131,147,147,-5,147,147,-5,-5,-5,-5,147,-5,-5,-5,-5,-5,-5,-95,-5,-5,147,-5,-5,-5,147,-93,-101,147,147,147,-114,-120,-119,-126,-128,-130,147,-5,-229,-230,-231,-232,-233,-234,-235,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,-95,147,-118,147,147,147,147,147,147,147,-115,-122,147,147,-121,147,-113,-117,-109,147,-111,-117,-110,]),'NEW':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,172,173,174,177,178,184,186,188,190,194,195,197,198,200,204,205,209,211,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,234,238,239,241,242,243,246,248,249,251,252,253,259,260,261,262,263,264,265,266,267,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,308,314,315,316,319,320,323,348,353,354,355,357,375,389,390,399,402,404,405,406,407,408,409,],[-95,152,152,-96,-97,-99,-100,-107,-102,-104,-105,-106,-112,152,152,152,152,152,-190,-191,152,-188,-189,-96,-98,-94,-103,152,152,-127,-129,-131,152,152,152,-5,152,152,-5,-5,-5,-5,152,-5,-5,-5,-5,-5,-5,-95,-5,-5,152,-5,-5,-5,152,-93,-101,152,152,152,-114,-120,-119,-126,-128,-130,152,-5,-229,-230,-231,-232,-233,-234,-235,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-95,152,-118,152,152,152,152,152,152,152,-115,-122,152,152,-121,152,-113,-117,-109,152,-111,-117,-110,]),'WHILE':([93,98,99,101,102,103,172,174,177,186,188,190,238,240,251,252,253,402,404,405,407,408,409,],[-96,-107,-102,-104,-105,-106,-96,-94,-103,-127,-129,-131,-93,310,-126,-128,-130,-113,-117,-109,-111,-117,-110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,20,]),'TypeDeclarations':([0,3,4,20,],[5,21,22,34,]),'ImportStatement':([0,3,4,20,],[7,7,23,23,]),'TypeDeclarationOptSemi':([0,3,4,5,20,21,22,34,],[8,8,8,24,8,24,24,24,]),'TypeDeclaration':([0,3,4,5,20,21,22,34,40,45,291,339,],[10,10,10,10,10,10,10,10,54,54,54,54,]),'ClassHeader':([0,3,4,5,20,21,22,34,40,45,291,339,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,20,21,22,34,40,45,291,339,],[12,12,12,12,12,12,12,12,55,55,55,55,]),'ClassWord':([0,3,4,5,12,20,21,22,34,40,45,55,291,339,],[13,13,13,13,31,13,13,13,13,13,13,31,13,13,]),'Modifier':([0,3,4,5,12,20,21,22,34,40,45,55,291,339,],[14,14,14,14,32,14,14,14,14,14,14,32,14,14,]),'QualifiedName':([6,9,40,45,55,74,91,92,106,110,117,118,119,126,152,164,178,184,195,197,200,204,214,226,234,236,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,314,316,319,320,323,339,348,353,354,375,389,399,406,],[25,27,63,63,63,112,63,112,183,191,191,191,191,191,63,63,191,112,191,191,191,183,191,191,191,63,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,63,191,191,191,191,191,191,191,191,191,191,191,191,63,191,191,191,191,191,191,191,]),'SemiColons':([10,25,27,43,48,],[28,35,37,73,78,]),'push':([30,44,221,222,308,],[40,74,290,291,353,]),'FieldDeclarations':([40,291,],[45,339,]),'FieldDeclarationOptSemi':([40,45,291,339,],[47,76,47,76,]),'FieldDeclaration':([40,45,291,339,],[48,48,48,48,]),'FieldVariableDeclaration':([40,45,291,339,],[49,49,49,49,]),'MethodDeclaration':([40,45,291,339,],[50,50,50,50,]),'ConstructorDeclaration':([40,45,291,339,],[51,51,51,51,]),'StaticInitializer':([40,45,291,339,],[52,52,52,52,]),'NonStaticInitializer':([40,45,291,339,],[53,53,53,53,]),'TypeSpecifier':([40,45,55,74,91,92,164,184,236,291,339,],[56,56,80,97,171,97,171,97,171,56,56,]),'ConstructorDeclarator':([40,45,55,291,339,],[57,57,81,57,57,]),'Block':([40,45,57,59,74,81,83,92,157,178,291,339,399,406,],[58,58,87,88,103,158,162,103,162,103,58,58,103,103,]),'TypeName':([40,45,55,74,91,92,152,164,184,236,291,339,],[60,60,60,60,60,60,225,60,60,60,60,60,]),'PrimitiveType':([40,45,55,74,91,92,106,110,117,118,119,126,152,164,178,184,195,197,200,204,214,226,234,236,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,291,292,293,296,298,302,303,304,314,316,319,320,323,339,348,353,354,375,389,399,406,],[62,62,62,111,62,111,182,192,192,192,192,192,62,62,192,111,192,192,192,182,192,192,192,62,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,62,192,192,192,192,192,192,192,192,192,192,192,192,62,192,192,192,192,192,192,192,]),'pop':([46,75,93,172,335,338,374,377,386,396,],[77,155,174,238,373,376,392,394,395,401,]),'VariableDeclarators':([56,80,97,],[82,156,175,]),'MethodDeclarator':([56,80,],[83,157,]),'VariableDeclarator':([56,80,97,159,],[84,84,84,231,]),'DeclaratorName':([56,80,97,159,171,],[85,85,176,176,237,]),'Dims':([60,182,183,225,294,],[89,244,245,295,342,]),'LocalVariableDeclarationsAndStatements':([74,],[92,]),'LocalVariableDeclarationOrStatement':([74,92,],[94,173,]),'LocalVariableDeclarationStatement':([74,92,184,],[95,95,249,]),'Statement':([74,92,178,399,406,],[96,96,240,404,408,]),'EmptyStatement':([74,92,178,399,406,],[99,99,99,99,99,]),'ExpressionStatement':([74,92,178,184,316,389,399,406,],[100,100,100,250,358,250,100,100,]),'IterationStatement':([74,92,178,399,406,],[101,101,101,101,101,]),'JumpStatement':([74,92,178,399,406,],[102,102,102,102,102,]),'Expression':([74,92,106,110,178,184,195,197,200,204,214,226,234,290,296,298,314,316,348,353,354,375,389,399,406,],[104,104,179,189,104,104,258,268,271,274,283,301,307,307,301,346,356,104,382,307,388,307,104,104,104,]),'AssignmentExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,290,296,298,314,316,319,348,353,354,375,389,399,406,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,360,113,113,113,113,113,113,113,]),'ConditionalExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[114,114,114,114,114,114,114,114,114,114,114,114,114,318,114,114,114,114,114,114,361,114,114,114,114,114,114,114,]),'UnaryExpression':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,348,353,354,375,389,399,406,],[115,115,115,115,199,201,203,208,115,115,115,115,115,115,115,115,115,203,203,203,203,203,203,203,203,203,203,203,203,203,203,115,203,203,115,115,203,203,203,115,115,115,203,115,115,115,115,115,115,115,]),'ConditionalOrExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ArithmeticUnaryOperator':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,348,353,354,375,389,399,406,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'CastExpression':([74,92,106,110,119,178,184,195,197,200,204,214,226,234,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,348,353,354,375,389,399,406,],[120,120,120,120,202,120,120,120,120,120,120,120,120,120,312,313,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,349,350,351,120,120,120,120,120,120,120,120,120,120,120,]),'LogicalUnaryExpression':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,311,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,311,121,121,121,121,121,121,121,]),'ConditionalAndExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,321,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'PostfixExpression':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'LogicalUnaryOperator':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'InclusiveOrExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,275,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,324,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'PrimaryExpression':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'RealPostfixExpression':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'ExclusiveOrExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,275,278,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,325,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'NotJustName':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'AndExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,275,278,280,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,326,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'SpecialName':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'NewAllocationExpression':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'ComplexPrimary':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'EqualityExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,275,278,280,282,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,327,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'PlainNewAllocationExpression':([74,92,106,110,117,118,119,126,178,184,194,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[140,140,140,140,140,140,140,140,140,140,255,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'ComplexPrimaryNoParenthesis':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'RelationalExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,275,278,280,282,284,285,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,329,330,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'ArrayAllocationExpression':([74,92,106,110,117,118,119,126,178,184,194,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'ClassAllocationExpression':([74,92,106,110,117,118,119,126,178,184,194,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'ArrayAccess':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'FieldAccess':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'MethodCall':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'AdditiveExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,275,278,280,282,284,285,286,287,288,289,290,296,298,314,316,319,320,348,353,354,375,389,399,406,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,331,332,333,334,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'MethodAccess':([74,92,106,110,117,118,119,126,178,184,195,197,200,204,214,226,234,241,242,243,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,302,303,304,314,316,319,320,323,348,353,354,375,389,399,406,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'MultiplicativeExpression':([74,92,106,110,178,184,195,197,200,204,214,226,234,259,269,275,278,280,282,284,285,286,287,288,289,290,292,293,296,298,314,316,319,320,348,353,354,375,389,399,406,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,340,341,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'MethodBody':([83,157,],[160,230,]),'push_icg':([85,115,176,198,203,205,209,211,213,215,216,217,218,219,220,223,224,227,228,229,260,],[165,196,165,269,273,275,278,280,282,284,285,286,287,288,289,292,293,302,303,304,319,]),'ParameterList':([91,164,],[168,232,]),'Parameter':([91,164,236,],[170,170,309,]),'codegen_do_init':([105,],[178,]),'PrimitiveTypeExpression':([106,204,],[180,180,]),'ClassTypeExpression':([106,204,],[181,181,]),'ForInit':([184,],[246,]),'ExpressionStatements':([184,389,],[247,400,]),'AssignmentOperator':([196,],[260,]),'codegen_prefix':([199,201,],[270,272,]),'codegen_postfix':([206,207,],[276,277,]),'DimExprs':([225,],[294,]),'DimExpr':([225,294,],[297,343,]),'ArgumentList':([226,296,],[299,344,]),'VariableInitializer':([234,290,353,375,],[306,337,337,393,]),'codegen_for_init':([246,],[314,]),'ArrayInitializers':([290,353,],[336,387,]),'codegen_declarator':([306,],[352,]),'ForExpr':([314,],[355,]),'codegen_assign':([318,],[359,]),'codegen_binop':([321,324,325,326,327,329,330,331,332,333,334,340,341,349,350,351,],[362,363,364,365,366,367,368,369,370,371,372,378,379,383,384,385,]),'codegen_for_expr':([355,],[389,]),'codegen_shorthand':([360,],[391,]),'ForIncr':([389,],[398,]),'codegen_for_inc':([398,],[403,]),'codegen_do_final':([402,],[405,]),'codegen_for':([404,408,],[407,409,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('codegen_prefix -> <empty>','codegen_prefix',0,'p_CodegenPrefix','icg.py',120),
  ('codegen_postfix -> <empty>','codegen_postfix',0,'p_CodegenPostfix','icg.py',138),
  ('codegen_shorthand -> <empty>','codegen_shorthand',0,'p_CodegenShorthand','icg.py',156),
  ('codegen_declarator -> <empty>','codegen_declarator',0,'p_CodegenDeclarator','icg.py',178),
  ('push_icg -> <empty>','push_icg',0,'p_push_icg','icg.py',188),
  ('codegen_binop -> <empty>','codegen_binop',0,'p_CodegenBinop','icg.py',195),
  ('codegen_assign -> <empty>','codegen_assign',0,'p_CodegenAssign','icg.py',218),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','icg.py',237),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','icg.py',238),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','icg.py',246),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','icg.py',247),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','icg.py',252),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','icg.py',253),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','icg.py',254),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','icg.py',255),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','icg.py',256),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','icg.py',257),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','icg.py',258),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','icg.py',259),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','icg.py',260),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','icg.py',265),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','icg.py',266),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','icg.py',274),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','icg.py',414),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','icg.py',415),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','icg.py',416),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','icg.py',417),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','icg.py',418),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','icg.py',419),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','icg.py',420),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','icg.py',428),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','icg.py',433),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','icg.py',434),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','icg.py',442),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','icg.py',443),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','icg.py',448),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','icg.py',449),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','icg.py',457),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','icg.py',458),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','icg.py',463),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','icg.py',464),
  ('TypeDeclaration -> ClassHeader { push FieldDeclarations } pop','TypeDeclaration',6,'p_TypeDeclaration','icg.py',472),
  ('TypeDeclaration -> ClassHeader { push } pop','TypeDeclaration',5,'p_TypeDeclaration','icg.py',473),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','icg.py',478),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','icg.py',479),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','icg.py',491),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','icg.py',492),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','icg.py',500),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','icg.py',501),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','icg.py',502),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','icg.py',503),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','icg.py',508),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','icg.py',512),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','icg.py',513),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','icg.py',521),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','icg.py',522),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','icg.py',530),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',531),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',532),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','icg.py',533),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','icg.py',534),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',535),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','icg.py',543),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','icg.py',544),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','icg.py',566),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','icg.py',567),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','icg.py',576),
  ('VariableDeclarator -> DeclaratorName push_icg = VariableInitializer codegen_declarator','VariableDeclarator',5,'p_VariableDeclarator','icg.py',577),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','icg.py',589),
  ('VariableInitializer -> { push } pop','VariableInitializer',4,'p_VariableInitializer','icg.py',590),
  ('VariableInitializer -> { push ArrayInitializers } pop','VariableInitializer',5,'p_VariableInitializer','icg.py',591),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','icg.py',599),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','icg.py',600),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','icg.py',601),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','icg.py',609),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','icg.py',610),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','icg.py',625),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','icg.py',626),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','icg.py',627),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','icg.py',640),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','icg.py',641),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','icg.py',649),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','icg.py',658),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','icg.py',659),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','icg.py',668),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','icg.py',669),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','icg.py',674),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','icg.py',675),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','icg.py',688),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','icg.py',689),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','icg.py',701),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','icg.py',706),
  ('Block -> { push LocalVariableDeclarationsAndStatements } pop','Block',5,'p_Block','icg.py',711),
  ('Block -> { push } pop','Block',4,'p_Block','icg.py',712),
  ('push -> <empty>','push',0,'p_push','icg.py',719),
  ('pop -> <empty>','pop',0,'p_pop','icg.py',729),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','icg.py',735),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','icg.py',736),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','icg.py',744),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','icg.py',745),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','icg.py',753),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','icg.py',769),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','icg.py',770),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','icg.py',771),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','icg.py',772),
  ('Statement -> Block','Statement',1,'p_Statement','icg.py',773),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','icg.py',781),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','icg.py',786),
  ('IterationStatement -> DO codegen_do_init Statement WHILE ( Expression ) ; codegen_do_final','IterationStatement',9,'p_IterationStatement','icg.py',791),
  ('IterationStatement -> FOR ( ForInit codegen_for_init ForExpr codegen_for_expr ForIncr codegen_for_inc ) Statement codegen_for','IterationStatement',11,'p_IterationStatement','icg.py',792),
  ('IterationStatement -> FOR ( ForInit codegen_for_init ForExpr codegen_for_expr ) Statement codegen_for','IterationStatement',9,'p_IterationStatement','icg.py',793),
  ('codegen_do_init -> <empty>','codegen_do_init',0,'p_CodegenDoInit','icg.py',798),
  ('codegen_do_final -> <empty>','codegen_do_final',0,'p_CodegenDoFinal','icg.py',808),
  ('codegen_for_init -> <empty>','codegen_for_init',0,'p_CodegenForInit','icg.py',827),
  ('codegen_for_expr -> <empty>','codegen_for_expr',0,'p_CodegenForExpr','icg.py',838),
  ('codegen_for_inc -> <empty>','codegen_for_inc',0,'p_CodegenForInc','icg.py',855),
  ('codegen_for -> <empty>','codegen_for',0,'p_CodegenFor','icg.py',865),
  ('ForInit -> ExpressionStatements ;','ForInit',2,'p_ForInit','icg.py',881),
  ('ForInit -> LocalVariableDeclarationStatement','ForInit',1,'p_ForInit','icg.py',882),
  ('ForInit -> ;','ForInit',1,'p_ForInit','icg.py',883),
  ('ForExpr -> Expression ;','ForExpr',2,'p_ForExpr','icg.py',891),
  ('ForExpr -> ;','ForExpr',1,'p_ForExpr','icg.py',892),
  ('ForIncr -> ExpressionStatements','ForIncr',1,'p_ForIncr','icg.py',900),
  ('ExpressionStatements -> ExpressionStatement','ExpressionStatements',1,'p_ExpressionStatements','icg.py',904),
  ('ExpressionStatements -> ExpressionStatements , ExpressionStatement','ExpressionStatements',3,'p_ExpressionStatements','icg.py',905),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','icg.py',913),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','icg.py',914),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','icg.py',915),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','icg.py',916),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','icg.py',917),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','icg.py',918),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','icg.py',923),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','icg.py',924),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','icg.py',929),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','icg.py',930),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','icg.py',931),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','icg.py',936),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','icg.py',937),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',945),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',946),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',947),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',948),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',949),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',950),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','icg.py',965),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','icg.py',966),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','icg.py',971),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','icg.py',972),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','icg.py',973),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','icg.py',974),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','icg.py',975),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','icg.py',980),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','icg.py',981),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','icg.py',986),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','icg.py',987),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','icg.py',988),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','icg.py',993),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','icg.py',998),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','icg.py',999),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','icg.py',1007),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','icg.py',1008),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','icg.py',1016),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','icg.py',1017),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { push } pop','PlainNewAllocationExpression',5,'p_PlainNewAllocationExpression','icg.py',1018),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { push } pop','PlainNewAllocationExpression',5,'p_PlainNewAllocationExpression','icg.py',1019),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { push ArrayInitializers } pop','PlainNewAllocationExpression',6,'p_PlainNewAllocationExpression','icg.py',1020),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { push FieldDeclarations } pop','PlainNewAllocationExpression',6,'p_PlainNewAllocationExpression','icg.py',1021),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','icg.py',1029),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','icg.py',1030),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','icg.py',1035),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','icg.py',1036),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','icg.py',1037),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','icg.py',1042),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','icg.py',1043),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','icg.py',1051),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','icg.py',1056),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','icg.py',1057),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','icg.py',1065),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','icg.py',1066),
  ('RealPostfixExpression -> PostfixExpression OP_INC codegen_postfix','RealPostfixExpression',3,'p_RealPostfixExpression','icg.py',1071),
  ('RealPostfixExpression -> PostfixExpression OP_DEC codegen_postfix','RealPostfixExpression',3,'p_RealPostfixExpression','icg.py',1072),
  ('UnaryExpression -> OP_INC UnaryExpression codegen_prefix','UnaryExpression',3,'p_UnaryExpression','icg.py',1077),
  ('UnaryExpression -> OP_DEC UnaryExpression codegen_prefix','UnaryExpression',3,'p_UnaryExpression','icg.py',1078),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','icg.py',1079),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','icg.py',1080),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','icg.py',1088),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','icg.py',1089),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','icg.py',1101),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','icg.py',1102),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','icg.py',1107),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','icg.py',1108),
  ('CastExpression -> UnaryExpression push_icg','CastExpression',2,'p_CastExpression','icg.py',1113),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','icg.py',1114),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','icg.py',1115),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','icg.py',1116),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','icg.py',1124),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','icg.py',1125),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','icg.py',1133),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','icg.py',1138),
  ('MultiplicativeExpression -> MultiplicativeExpression * push_icg CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',1139),
  ('MultiplicativeExpression -> MultiplicativeExpression / push_icg CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',1140),
  ('MultiplicativeExpression -> MultiplicativeExpression % push_icg CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',1141),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','icg.py',1150),
  ('AdditiveExpression -> AdditiveExpression + push_icg MultiplicativeExpression codegen_binop','AdditiveExpression',5,'p_AdditiveExpression','icg.py',1151),
  ('AdditiveExpression -> AdditiveExpression - push_icg MultiplicativeExpression codegen_binop','AdditiveExpression',5,'p_AdditiveExpression','icg.py',1152),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','icg.py',1161),
  ('RelationalExpression -> RelationalExpression < push_icg AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',1162),
  ('RelationalExpression -> RelationalExpression > push_icg AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',1163),
  ('RelationalExpression -> RelationalExpression OP_LE push_icg AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',1164),
  ('RelationalExpression -> RelationalExpression OP_GE push_icg AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',1165),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','icg.py',1174),
  ('EqualityExpression -> EqualityExpression OP_EQ push_icg RelationalExpression codegen_binop','EqualityExpression',5,'p_EqualityExpression','icg.py',1175),
  ('EqualityExpression -> EqualityExpression OP_NE push_icg RelationalExpression codegen_binop','EqualityExpression',5,'p_EqualityExpression','icg.py',1176),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','icg.py',1184),
  ('AndExpression -> AndExpression & push_icg EqualityExpression codegen_binop','AndExpression',5,'p_AndExpression','icg.py',1185),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','icg.py',1193),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ push_icg AndExpression codegen_binop','ExclusiveOrExpression',5,'p_ExclusiveOrExpression','icg.py',1194),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','icg.py',1202),
  ('InclusiveOrExpression -> InclusiveOrExpression | push_icg ExclusiveOrExpression codegen_binop','InclusiveOrExpression',5,'p_InclusiveOrExpression','icg.py',1203),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','icg.py',1211),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND push_icg InclusiveOrExpression codegen_binop','ConditionalAndExpression',5,'p_ConditionalAndExpression','icg.py',1212),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','icg.py',1220),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR push_icg ConditionalAndExpression codegen_binop','ConditionalOrExpression',5,'p_ConditionalOrExpression','icg.py',1221),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','icg.py',1229),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','icg.py',1230),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','icg.py',1238),
  ('AssignmentExpression -> UnaryExpression push_icg = ConditionalExpression codegen_assign','AssignmentExpression',5,'p_AssignmentExpression','icg.py',1239),
  ('AssignmentExpression -> UnaryExpression push_icg AssignmentOperator push_icg AssignmentExpression codegen_shorthand','AssignmentExpression',6,'p_AssignmentExpression','icg.py',1240),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1250),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1251),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1252),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1253),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1254),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1255),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','icg.py',1256),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','icg.py',1263),
]
