
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitASS_ADD ASS_AND ASS_DIV ASS_MOD ASS_MUL ASS_OR ASS_SUB BOOLEAN BOOLLIT BREAK BYTE CHAR CLASS COMMENT CONTINUE DO DOUBLE ELSE FINAL FINALLY FLOAT FOR IDENTIFIER IF IMPORT INT LITERAL LONG NEW NUM_LITERAL OP_DEC OP_DIM OP_EQ OP_GE OP_INC OP_LAND OP_LE OP_LOR OP_NE PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VAR VOID WHILETypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' FieldDeclarations '}'\n    | ClassHeader '{' '}'\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : FINAL\n    | PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n        | NonStaticInitializer\n        | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName '=' VariableInitializer\n    VariableInitializer : Expression\n    | '{' '}'\n        | '{' ArrayInitializers '}'\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    | FINAL TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' LocalVariableDeclarationsAndStatements '}'\n    | '{' '}'\n    LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n        | FINAL TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n        | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO Statement WHILE '(' Expression ')' ';'\n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n        | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName\n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' '}'\n        | ClassAllocationExpression '{' '}'\n        | ArrayAllocationExpression '{' ArrayInitializers '}'\n        | ClassAllocationExpression '{' FieldDeclarations '}'\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n        | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC\n    | PostfixExpression OP_DEC\n    UnaryExpression : OP_INC UnaryExpression\n    | OP_DEC UnaryExpression\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n        | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression\n    | MultiplicativeExpression '*' CastExpression\n    | MultiplicativeExpression '/' CastExpression\n    | MultiplicativeExpression '%' CastExpression\n    AdditiveExpression : MultiplicativeExpression\n        | AdditiveExpression '+' MultiplicativeExpression\n    | AdditiveExpression '-' MultiplicativeExpression\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' AdditiveExpression\n    | RelationalExpression '>' AdditiveExpression\n    | RelationalExpression OP_LE AdditiveExpression\n    | RelationalExpression OP_GE AdditiveExpression\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ RelationalExpression\n        | EqualityExpression OP_NE RelationalExpression\n    AndExpression : EqualityExpression\n        | AndExpression '&' EqualityExpression\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' AndExpression\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' ExclusiveOrExpression\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND InclusiveOrExpression\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR ConditionalAndExpression\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression AssignmentOperator AssignmentExpression\n    AssignmentOperator : '='\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,21,24,30,36,38,40,152,],[9,9,9,-29,9,-30,-14,-24,-31,-15,-32,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,25,29,30,31,33,35,36,38,40,42,43,44,45,47,48,49,50,51,52,55,56,74,136,137,138,139,147,148,152,153,173,174,210,220,222,224,225,275,289,],[15,15,15,15,-29,-25,-27,15,-39,-41,-42,-43,-44,-45,15,15,15,-30,-26,-28,-14,15,-40,15,-24,-31,-15,15,-36,-47,-49,-52,-53,-54,-55,-56,15,-87,-45,-89,-35,-48,-50,-51,-83,-86,-32,-88,246,249,15,-82,-70,-80,-81,15,-69,]),'FINAL':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,25,29,30,31,33,35,36,38,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,81,83,84,85,136,137,138,139,147,148,151,152,153,154,158,168,170,172,210,220,222,224,225,226,235,243,244,245,275,289,295,298,331,],[16,16,16,16,-29,-25,-27,16,-39,-41,-42,-43,-44,-45,16,16,16,-30,-26,-28,-14,16,-40,16,-24,-31,-15,80,16,-36,-47,-49,-52,-53,-54,-55,-56,16,-87,-45,80,-89,-90,-92,-93,-101,-96,-98,-99,-100,-35,-48,-50,-51,-83,-86,234,-32,-88,-91,-97,-105,-107,-109,16,-82,-70,-80,-81,234,-94,-104,-106,-108,16,-69,234,-95,-103,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,25,29,30,31,33,35,36,38,40,42,43,44,45,47,48,49,50,51,52,55,56,74,136,137,138,139,147,148,152,153,210,220,222,224,225,275,289,],[17,17,17,17,-29,-25,-27,17,-39,-41,-42,-43,-44,-45,17,17,17,-30,-26,-28,-14,17,-40,17,-24,-31,-15,17,-36,-47,-49,-52,-53,-54,-55,-56,17,-87,-45,-89,-35,-48,-50,-51,-83,-86,-32,-88,17,-82,-70,-80,-81,17,-69,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,25,29,30,31,33,35,36,38,40,42,43,44,45,47,48,49,50,51,52,55,56,74,136,137,138,139,147,148,152,153,210,220,222,224,225,275,289,],[18,18,18,18,-29,-25,-27,18,-39,-41,-42,-43,-44,-45,18,18,18,-30,-26,-28,-14,18,-40,18,-24,-31,-15,18,-36,-47,-49,-52,-53,-54,-55,-56,18,-87,-45,-89,-35,-48,-50,-51,-83,-86,-32,-88,18,-82,-70,-80,-81,18,-69,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,25,29,30,31,33,35,36,38,40,42,43,44,45,47,48,49,50,51,52,55,56,74,136,137,138,139,147,148,152,153,210,220,222,224,225,275,289,],[19,19,19,19,-29,-25,-27,19,-39,-41,-42,-43,-44,-45,19,19,19,-30,-26,-28,-14,19,-40,19,-24,-31,-15,19,-36,-47,-49,-52,-53,-54,-55,-56,19,-87,-45,-89,-35,-48,-50,-51,-83,-86,-32,-88,19,-82,-70,-80,-81,19,-69,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,25,29,30,31,33,35,36,38,40,42,43,44,45,47,48,49,50,51,52,55,56,74,136,137,138,139,147,148,152,153,210,220,222,224,225,275,289,],[20,20,20,20,-29,-25,-27,20,-39,-41,-42,-43,-44,-45,20,20,20,-30,-26,-28,-14,56,-40,20,-24,-31,-15,56,-36,-47,-49,-52,-53,-54,-55,-56,20,-87,-45,-89,-35,-48,-50,-51,-83,-86,-32,-88,56,-82,-70,-80,-81,56,-69,]),'$end':([1,2,3,4,5,7,8,10,21,22,23,24,25,29,30,35,36,38,40,43,136,152,],[0,-16,-21,-22,-23,-29,-25,-27,-18,-19,-20,-30,-26,-28,-14,-17,-24,-31,-15,-36,-35,-32,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,20,27,30,31,32,33,37,39,40,41,42,43,44,45,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,73,74,75,76,77,78,79,80,81,83,84,85,87,88,89,90,91,92,93,98,99,100,104,105,107,111,112,133,136,137,138,139,140,147,148,149,150,151,153,154,157,158,168,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,221,222,224,225,226,227,229,233,234,235,238,239,240,243,244,245,269,275,280,282,289,295,297,298,299,304,306,311,319,331,],[27,27,34,-39,-46,-41,-42,-43,-44,-45,-33,-14,58,70,-40,71,71,-15,27,58,-36,-47,-49,-52,-53,-54,-55,-56,58,146,-87,-45,-1,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,27,-89,-90,-92,-93,146,-101,27,-96,-98,-99,-100,27,27,167,169,27,-3,-4,27,27,27,-168,-169,27,-166,-167,27,-35,-48,-50,-51,146,-83,-86,-2,-154,27,-88,-91,146,-97,-105,-107,-109,71,27,27,-206,-207,-208,-209,-210,-211,-212,-213,27,27,27,27,27,27,258,27,260,27,27,27,27,27,27,27,27,27,58,27,27,27,27,27,27,-82,146,-70,-80,-81,27,27,-155,146,27,-94,27,27,27,-104,-106,-108,27,58,27,27,-69,27,146,-95,27,27,27,27,27,-103,]),';':([10,26,27,28,29,30,36,38,40,41,43,45,46,47,48,49,50,51,55,71,72,73,74,75,76,77,79,81,82,83,84,85,86,87,89,90,91,93,94,95,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,136,138,139,142,143,144,145,146,147,148,150,152,153,154,155,156,158,160,167,168,169,170,171,172,187,189,190,191,194,195,196,218,219,220,222,223,224,225,228,229,235,236,238,243,244,245,246,247,248,249,251,253,256,257,258,259,260,261,263,264,265,266,267,268,270,273,274,276,277,278,279,281,284,286,287,288,289,290,292,293,298,300,301,302,303,305,306,307,308,310,312,313,314,316,318,320,324,325,327,328,330,331,],[30,30,-33,30,40,-14,40,40,-15,79,-36,30,139,-52,-53,-54,-55,-56,-87,-34,30,79,-89,-90,-92,-93,-101,-96,158,-98,-99,-100,-102,79,168,170,172,-110,-214,-204,-170,-202,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-35,40,-51,-58,225,-59,-61,-78,-83,-86,-154,40,-88,-91,235,-61,-97,-110,243,-105,244,-107,245,-109,-160,-161,-162,-170,-158,-159,-165,-57,225,-82,-70,-73,-80,-81,-79,-155,-94,298,-115,-104,-106,-108,-129,-139,-127,-128,-205,-201,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-63,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-69,-60,-72,-62,-95,-173,-171,-172,-123,-115,-115,-124,-64,-144,-145,-148,-152,-147,-130,-71,-203,-65,-146,-153,331,-103,]),'{':([11,30,31,34,40,41,42,43,44,45,47,48,49,50,51,54,55,56,70,73,74,75,76,77,79,81,83,84,85,87,124,125,136,137,138,139,141,143,147,148,150,153,154,158,168,170,172,209,210,219,220,222,223,224,225,227,229,231,235,243,244,245,269,275,278,279,281,289,292,294,298,311,313,314,316,320,327,328,331,],[31,-14,41,-38,-15,41,41,-36,-47,-49,-52,-53,-54,-55,-56,41,-87,41,-37,41,-89,-90,-92,-93,-101,-96,-98,-99,-100,41,209,210,-35,-48,-50,-51,41,41,-83,-86,-154,-88,-91,-97,-105,-107,-109,269,41,41,-82,-70,-73,-80,-81,269,-155,-85,-94,-104,-106,-108,269,41,-149,-150,-151,-69,-72,-84,-95,269,-148,-152,-147,-71,-146,-153,-103,]),'BOOLEAN':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,61,-40,-15,61,61,-36,-47,-49,-52,-53,-54,-55,-56,61,-87,-45,61,-89,-90,-92,-93,-101,61,-96,-98,-99,-100,61,61,61,61,61,61,-168,-169,61,-166,-167,61,-35,-48,-50,-51,-83,-86,61,-88,-91,-97,-105,-107,-109,61,61,-206,-207,-208,-209,-210,-211,-212,-213,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-82,-70,-80,-81,61,61,61,-94,61,61,61,-104,-106,-108,61,61,61,61,-69,61,-95,61,61,61,61,61,-103,]),'CHAR':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,62,-40,-15,62,62,-36,-47,-49,-52,-53,-54,-55,-56,62,-87,-45,62,-89,-90,-92,-93,-101,62,-96,-98,-99,-100,62,62,62,62,62,62,-168,-169,62,-166,-167,62,-35,-48,-50,-51,-83,-86,62,-88,-91,-97,-105,-107,-109,62,62,-206,-207,-208,-209,-210,-211,-212,-213,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-82,-70,-80,-81,62,62,62,-94,62,62,62,-104,-106,-108,62,62,62,62,-69,62,-95,62,62,62,62,62,-103,]),'BYTE':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,63,-40,-15,63,63,-36,-47,-49,-52,-53,-54,-55,-56,63,-87,-45,63,-89,-90,-92,-93,-101,63,-96,-98,-99,-100,63,63,63,63,63,63,-168,-169,63,-166,-167,63,-35,-48,-50,-51,-83,-86,63,-88,-91,-97,-105,-107,-109,63,63,-206,-207,-208,-209,-210,-211,-212,-213,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-82,-70,-80,-81,63,63,63,-94,63,63,63,-104,-106,-108,63,63,63,63,-69,63,-95,63,63,63,63,63,-103,]),'SHORT':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,64,-40,-15,64,64,-36,-47,-49,-52,-53,-54,-55,-56,64,-87,-45,64,-89,-90,-92,-93,-101,64,-96,-98,-99,-100,64,64,64,64,64,64,-168,-169,64,-166,-167,64,-35,-48,-50,-51,-83,-86,64,-88,-91,-97,-105,-107,-109,64,64,-206,-207,-208,-209,-210,-211,-212,-213,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-82,-70,-80,-81,64,64,64,-94,64,64,64,-104,-106,-108,64,64,64,64,-69,64,-95,64,64,64,64,64,-103,]),'INT':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,65,-40,-15,65,65,-36,-47,-49,-52,-53,-54,-55,-56,65,-87,-45,65,-89,-90,-92,-93,-101,65,-96,-98,-99,-100,65,65,65,65,65,65,-168,-169,65,-166,-167,65,-35,-48,-50,-51,-83,-86,65,-88,-91,-97,-105,-107,-109,65,65,-206,-207,-208,-209,-210,-211,-212,-213,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-82,-70,-80,-81,65,65,65,-94,65,65,65,-104,-106,-108,65,65,65,65,-69,65,-95,65,65,65,65,65,-103,]),'LONG':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,66,-40,-15,66,66,-36,-47,-49,-52,-53,-54,-55,-56,66,-87,-45,66,-89,-90,-92,-93,-101,66,-96,-98,-99,-100,66,66,66,66,66,66,-168,-169,66,-166,-167,66,-35,-48,-50,-51,-83,-86,66,-88,-91,-97,-105,-107,-109,66,66,-206,-207,-208,-209,-210,-211,-212,-213,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-82,-70,-80,-81,66,66,66,-94,66,66,66,-104,-106,-108,66,66,66,66,-69,66,-95,66,66,66,66,66,-103,]),'FLOAT':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,67,-40,-15,67,67,-36,-47,-49,-52,-53,-54,-55,-56,67,-87,-45,67,-89,-90,-92,-93,-101,67,-96,-98,-99,-100,67,67,67,67,67,67,-168,-169,67,-166,-167,67,-35,-48,-50,-51,-83,-86,67,-88,-91,-97,-105,-107,-109,67,67,-206,-207,-208,-209,-210,-211,-212,-213,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-82,-70,-80,-81,67,67,67,-94,67,67,67,-104,-106,-108,67,67,67,67,-69,67,-95,67,67,67,67,67,-103,]),'DOUBLE':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,68,-40,-15,68,68,-36,-47,-49,-52,-53,-54,-55,-56,68,-87,-45,68,-89,-90,-92,-93,-101,68,-96,-98,-99,-100,68,68,68,68,68,68,-168,-169,68,-166,-167,68,-35,-48,-50,-51,-83,-86,68,-88,-91,-97,-105,-107,-109,68,68,-206,-207,-208,-209,-210,-211,-212,-213,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-82,-70,-80,-81,68,68,68,-94,68,68,68,-104,-106,-108,68,68,68,68,-69,68,-95,68,68,68,68,68,-103,]),'VOID':([14,16,17,18,19,20,30,31,33,40,41,42,43,44,45,47,48,49,50,51,52,55,56,73,74,75,76,77,79,80,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,133,136,137,138,139,147,148,151,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,220,222,224,225,226,227,234,235,238,239,240,243,244,245,269,275,280,282,289,295,298,299,304,306,311,319,331,],[-39,-41,-42,-43,-44,-45,-14,69,-40,-15,69,69,-36,-47,-49,-52,-53,-54,-55,-56,69,-87,-45,69,-89,-90,-92,-93,-101,69,-96,-98,-99,-100,69,69,69,69,69,69,-168,-169,69,-166,-167,69,-35,-48,-50,-51,-83,-86,69,-88,-91,-97,-105,-107,-109,69,69,-206,-207,-208,-209,-210,-211,-212,-213,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-82,-70,-80,-81,69,69,69,-94,69,69,69,-104,-106,-108,69,69,69,69,-69,69,-95,69,69,69,69,69,-103,]),'.':([26,27,28,58,60,61,62,63,64,65,66,67,68,69,71,92,93,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,161,165,166,194,195,229,238,246,247,248,249,258,260,270,274,278,279,281,284,303,305,306,307,310,312,313,314,316,318,327,328,],[37,-33,39,-33,37,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,173,174,198,200,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,174,173,173,174,-158,-159,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'[':([27,59,60,61,62,63,64,65,66,67,68,69,71,93,118,122,126,127,128,129,130,131,160,166,213,238,246,248,249,258,260,278,281,284,303,305,306,307,314,318,328,],[-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,175,202,-116,-117,-118,-119,-120,-121,-122,175,175,282,-115,-129,-127,-128,-126,-125,282,-151,-131,-123,-115,-115,-124,-152,-130,-153,]),'OP_DIM':([27,57,58,59,60,61,62,63,64,65,66,67,68,69,71,92,93,143,145,146,149,150,156,165,166,213,219,223,228,229,241,242,278,279,281,292,296,313,314,320,322,328,],[-33,150,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-3,-4,223,228,-78,229,-154,228,150,150,150,223,-73,-79,-155,229,229,150,229,-151,-72,228,229,-152,-71,228,-153,]),'OP_INC':([27,41,71,73,74,75,76,77,79,81,83,84,85,87,88,91,93,98,99,100,104,105,106,107,109,110,111,112,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,153,154,158,160,166,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,194,195,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,229,235,238,239,240,243,244,245,246,247,248,249,258,260,269,270,274,278,279,280,281,282,284,298,299,303,304,305,306,307,310,311,312,313,314,316,318,319,327,328,331,],[-33,98,-34,98,-89,-90,-92,-93,-101,-96,-98,-99,-100,98,98,98,-110,98,98,98,-168,-169,194,98,-156,-157,-166,-167,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-88,-91,-97,-110,-110,-105,-107,-109,98,98,-206,-207,-208,-209,-210,-211,-212,-213,98,98,98,98,98,-158,-159,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-155,-94,-115,98,98,-104,-106,-108,-129,-139,-127,-128,-126,-125,98,-142,-143,-149,-150,98,-151,98,-131,-95,98,-123,98,-115,-115,-124,-144,98,-145,-148,-152,-147,-130,98,-146,-153,-103,]),'OP_DEC':([27,41,71,73,74,75,76,77,79,81,83,84,85,87,88,91,93,98,99,100,104,105,106,107,109,110,111,112,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,153,154,158,160,166,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,194,195,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,229,235,238,239,240,243,244,245,246,247,248,249,258,260,269,270,274,278,279,280,281,282,284,298,299,303,304,305,306,307,310,311,312,313,314,316,318,319,327,328,331,],[-33,99,-34,99,-89,-90,-92,-93,-101,-96,-98,-99,-100,99,99,99,-110,99,99,99,-168,-169,195,99,-156,-157,-166,-167,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-88,-91,-97,-110,-110,-105,-107,-109,99,99,-206,-207,-208,-209,-210,-211,-212,-213,99,99,99,99,99,-158,-159,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-155,-94,-115,99,99,-104,-106,-108,-129,-139,-127,-128,-126,-125,99,-142,-143,-149,-150,99,-151,99,-131,-95,99,-123,99,-115,-115,-124,-144,99,-145,-148,-152,-147,-130,99,-146,-153,-103,]),'=':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,145,146,150,156,160,166,187,189,190,191,194,195,196,228,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,227,-78,-154,227,-110,-110,-160,-161,-162,-170,-158,-159,-165,-79,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'ASS_MUL':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,178,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'ASS_DIV':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,179,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'ASS_MOD':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,180,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'ASS_ADD':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,181,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'ASS_SUB':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,182,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'ASS_AND':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,183,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'ASS_OR':([27,71,93,96,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,278,279,281,284,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,184,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,-149,-150,-151,-131,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'*':([27,39,71,93,96,101,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,72,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,215,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,215,215,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'/':([27,71,93,96,101,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,216,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,216,216,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'%':([27,71,93,96,101,102,106,109,110,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,217,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,-142,-143,217,217,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'+':([27,41,71,73,74,75,76,77,79,81,83,84,85,87,88,91,93,96,98,99,100,101,102,104,105,106,107,109,110,111,112,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,135,150,153,154,158,160,166,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,229,235,238,239,240,243,244,245,246,247,248,249,258,260,265,266,267,268,269,270,274,276,277,278,279,280,281,282,284,286,287,288,298,299,300,301,302,303,304,305,306,307,310,311,312,313,314,316,318,319,327,328,331,],[-33,104,-34,104,-89,-90,-92,-93,-101,-96,-98,-99,-100,104,104,104,-110,-170,104,104,104,-177,-163,-168,-169,-164,104,-156,-157,-166,-167,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,211,-181,-154,-88,-91,-97,-110,-110,-105,-107,-109,104,104,-206,-207,-208,-209,-210,-211,-212,-213,104,104,-160,104,-161,-162,-170,104,104,-158,-159,-165,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-155,-94,-115,104,104,-104,-106,-108,-129,-139,-127,-128,-126,-125,211,211,211,211,104,-142,-143,-182,-183,-149,-150,104,-151,104,-131,-178,-179,-180,-95,104,-173,-171,-172,-123,104,-115,-115,-124,-144,104,-145,-148,-152,-147,-130,104,-146,-153,-103,]),'-':([27,41,71,73,74,75,76,77,79,81,83,84,85,87,88,91,93,96,98,99,100,101,102,104,105,106,107,109,110,111,112,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,135,150,153,154,158,160,166,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,229,235,238,239,240,243,244,245,246,247,248,249,258,260,265,266,267,268,269,270,274,276,277,278,279,280,281,282,284,286,287,288,298,299,300,301,302,303,304,305,306,307,310,311,312,313,314,316,318,319,327,328,331,],[-33,105,-34,105,-89,-90,-92,-93,-101,-96,-98,-99,-100,105,105,105,-110,-170,105,105,105,-177,-163,-168,-169,-164,105,-156,-157,-166,-167,-111,-112,-113,-114,-135,-138,-116,-140,-141,-117,-118,-119,-120,-121,-122,212,-181,-154,-88,-91,-97,-110,-110,-105,-107,-109,105,105,-206,-207,-208,-209,-210,-211,-212,-213,105,105,-160,105,-161,-162,-170,105,105,-158,-159,-165,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-155,-94,-115,105,105,-104,-106,-108,-129,-139,-127,-128,-126,-125,212,212,212,212,105,-142,-143,-182,-183,-149,-150,105,-151,105,-131,-178,-179,-180,-95,105,-173,-171,-172,-123,105,-115,-115,-124,-144,105,-145,-148,-152,-147,-130,105,-146,-153,-103,]),'<':([27,71,93,96,101,102,106,109,110,114,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,205,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,205,205,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'>':([27,71,93,96,101,102,106,109,110,114,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,206,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,206,206,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'OP_LE':([27,71,93,96,101,102,106,109,110,114,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,207,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,207,207,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'OP_GE':([27,71,93,96,101,102,106,109,110,114,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,-135,-138,-116,208,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,208,208,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'OP_EQ':([27,71,93,96,101,102,106,109,110,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,203,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,203,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'OP_NE':([27,71,93,96,101,102,106,109,110,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,-112,-113,-114,204,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,-125,204,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'&':([27,71,93,96,101,102,106,109,110,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,-111,201,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-126,201,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'^':([27,71,93,96,101,102,106,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,257,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,-156,-157,199,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,199,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'|':([27,71,93,96,101,102,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,256,257,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,-164,197,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,197,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'OP_LAND':([27,71,93,96,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,253,256,257,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,-177,-163,193,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,193,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'?':([27,71,93,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,253,256,257,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,185,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-201,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'OP_LOR':([27,71,93,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,166,187,189,190,191,194,195,196,229,238,246,247,248,249,253,256,257,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,327,328,],[-33,-34,-110,-170,186,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-201,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-146,-153,]),'(':([27,41,58,59,60,61,62,63,64,65,66,67,68,69,71,73,74,75,76,77,79,81,83,84,85,87,88,91,93,98,99,100,104,105,107,111,112,116,120,122,126,127,128,129,130,131,134,145,146,153,154,158,160,166,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,227,228,235,237,238,239,240,243,244,245,246,248,249,258,260,269,280,282,284,298,299,303,304,306,307,311,318,319,331,],[-33,88,151,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,88,-89,-90,-92,-93,-101,-96,-98,-99,-100,88,88,88,-134,188,188,192,-168,-169,188,-166,-167,-133,-135,-132,-117,-118,-119,-120,-121,-122,214,226,-78,-88,-91,-97,-134,-134,-105,-107,-109,88,88,-206,-207,-208,-209,-210,-211,-212,-213,88,192,88,88,192,192,192,192,88,192,192,192,192,192,192,88,192,192,280,88,192,192,192,88,-79,-94,299,188,192,192,-104,-106,-108,-129,-127,-128,-126,-125,88,88,88,-131,-95,88,-123,192,188,-124,88,-130,88,-103,]),')':([27,61,62,63,64,65,66,67,68,69,71,94,95,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,146,150,151,160,162,163,164,165,166,187,189,190,191,194,195,196,214,226,228,229,230,232,238,241,242,246,247,248,249,251,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,280,281,283,284,285,286,287,288,291,296,300,301,302,303,305,306,307,310,312,313,314,315,316,318,321,322,323,324,327,328,329,],[-33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-214,-204,-170,-202,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-78,-154,231,-110,238,239,240,-174,-110,-160,-161,-162,-170,-158,-159,-165,284,292,-79,-155,294,-74,-115,-175,-176,-129,-139,-127,-128,-205,-201,305,306,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,316,-151,318,-131,-136,-178,-179,-180,320,-76,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,327,-147,-130,-75,-77,330,-203,-146,-153,-137,]),']':([27,71,94,95,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,187,189,190,191,194,195,196,229,238,246,247,248,249,250,251,253,256,257,258,259,260,261,262,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,317,318,324,327,328,],[-33,-34,-214,-204,-170,-202,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,303,-205,-201,-199,-197,-126,-195,-125,-193,307,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,328,-130,-203,-146,-153,]),':':([27,71,94,95,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,150,160,187,189,190,191,194,195,196,229,238,246,247,248,249,251,252,253,256,257,258,259,260,261,263,264,265,266,267,268,270,274,276,277,278,279,281,284,286,287,288,300,301,302,303,305,306,307,310,312,313,314,316,318,324,327,328,],[-33,-34,-214,-204,-170,-202,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-154,-110,-160,-161,-162,-170,-158,-159,-165,-155,-115,-129,-139,-127,-128,-205,304,-201,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,-143,-182,-183,-149,-150,-151,-131,-178,-179,-180,-173,-171,-172,-123,-115,-115,-124,-144,-145,-148,-152,-147,-130,-203,-146,-153,]),'}':([27,30,31,40,41,42,43,44,45,47,48,49,50,51,55,71,73,74,75,76,77,79,81,83,84,85,94,95,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,136,137,138,139,147,148,150,153,154,158,160,168,170,172,187,189,190,191,194,195,196,209,210,220,222,224,225,229,235,238,243,244,245,246,247,248,249,251,253,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,286,287,288,289,298,300,301,302,303,305,306,307,308,309,310,311,312,313,314,316,318,324,325,326,327,328,331,],[-33,-14,43,-15,74,136,-36,-47,-49,-52,-53,-54,-55,-56,-87,-34,153,-89,-90,-92,-93,-101,-96,-98,-99,-100,-214,-204,-170,-202,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,-35,-48,-50,-51,-83,-86,-154,-88,-91,-97,-110,-105,-107,-109,-160,-161,-162,-170,-158,-159,-165,270,274,-82,-70,-80,-81,-155,-94,-115,-104,-106,-108,-129,-139,-127,-128,-205,-201,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,308,-142,310,-66,-63,-143,312,-182,-183,-149,-150,-151,-131,-178,-179,-180,-69,-95,-173,-171,-172,-123,-115,-115,-124,-64,325,-144,-68,-145,-148,-152,-147,-130,-203,-65,-67,-146,-153,-103,]),',':([27,71,94,95,96,97,101,102,103,106,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,142,144,145,146,150,155,156,160,187,189,190,191,194,195,196,218,228,229,230,232,236,238,246,247,248,249,251,253,256,257,258,259,260,261,263,264,265,266,267,268,270,271,272,273,274,276,277,278,279,281,283,284,285,286,287,288,290,291,293,296,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,318,321,322,324,325,326,327,328,329,],[-33,-34,-214,-204,-170,-202,-177,-163,-200,-164,-198,-156,-157,-196,-111,-194,-112,-113,-114,-192,-135,-138,-116,-189,-140,-141,-117,-118,-119,-120,-121,-122,-184,-181,221,-59,-61,-78,-154,221,-61,-110,-160,-161,-162,-170,-158,-159,-165,221,-79,-155,295,-74,221,-115,-129,-139,-127,-128,-205,-201,-199,-197,-126,-195,-125,-193,-190,-191,-185,-186,-187,-188,-142,311,-66,-63,-143,-182,-183,-149,-150,-151,319,-131,-136,-178,-179,-180,-60,295,-62,-76,-173,-171,-172,-123,-115,-115,-124,-64,311,-144,-68,-145,-148,-152,319,-147,-130,-75,-77,-203,-65,-67,-146,-153,-137,]),'DO':([41,73,74,75,76,77,79,81,83,84,85,87,153,154,158,168,170,172,235,243,244,245,298,331,],[87,87,-89,-90,-92,-93,-101,-96,-98,-99,-100,87,-88,-91,-97,-105,-107,-109,-94,-104,-106,-108,-95,-103,]),'BREAK':([41,73,74,75,76,77,79,81,83,84,85,87,153,154,158,168,170,172,235,243,244,245,298,331,],[89,89,-89,-90,-92,-93,-101,-96,-98,-99,-100,89,-88,-91,-97,-105,-107,-109,-94,-104,-106,-108,-95,-103,]),'CONTINUE':([41,73,74,75,76,77,79,81,83,84,85,87,153,154,158,168,170,172,235,243,244,245,298,331,],[90,90,-89,-90,-92,-93,-101,-96,-98,-99,-100,90,-88,-91,-97,-105,-107,-109,-94,-104,-106,-108,-95,-103,]),'RETURN':([41,73,74,75,76,77,79,81,83,84,85,87,153,154,158,168,170,172,235,243,244,245,298,331,],[91,91,-89,-90,-92,-93,-101,-96,-98,-99,-100,91,-88,-91,-97,-105,-107,-109,-94,-104,-106,-108,-95,-103,]),'~':([41,73,74,75,76,77,79,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,235,238,239,240,243,244,245,269,280,282,298,299,304,306,311,319,331,],[111,111,-89,-90,-92,-93,-101,-96,-98,-99,-100,111,111,111,111,111,111,-168,-169,111,-166,-167,-88,-91,-97,-105,-107,-109,111,111,-206,-207,-208,-209,-210,-211,-212,-213,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-94,111,111,111,-104,-106,-108,111,111,111,-95,111,111,111,111,111,-103,]),'!':([41,73,74,75,76,77,79,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,235,238,239,240,243,244,245,269,280,282,298,299,304,306,311,319,331,],[112,112,-89,-90,-92,-93,-101,-96,-98,-99,-100,112,112,112,112,112,112,-168,-169,112,-166,-167,-88,-91,-97,-105,-107,-109,112,112,-206,-207,-208,-209,-210,-211,-212,-213,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-94,112,112,112,-104,-106,-108,112,112,112,-95,112,112,112,112,112,-103,]),'THIS':([41,73,74,75,76,77,79,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,153,154,158,168,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,235,238,239,240,243,244,245,269,280,282,298,299,304,306,311,319,331,],[120,120,-89,-90,-92,-93,-101,-96,-98,-99,-100,120,120,120,120,120,120,-168,-169,120,-166,-167,-88,-91,-97,-105,-107,-109,248,120,120,-206,-207,-208,-209,-210,-211,-212,-213,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-94,120,120,120,-104,-106,-108,120,120,120,-95,120,120,120,120,120,-103,]),'LITERAL':([41,73,74,75,76,77,79,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,235,238,239,240,243,244,245,269,280,282,298,299,304,306,311,319,331,],[126,126,-89,-90,-92,-93,-101,-96,-98,-99,-100,126,126,126,126,126,126,-168,-169,126,-166,-167,-88,-91,-97,-105,-107,-109,126,126,-206,-207,-208,-209,-210,-211,-212,-213,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-94,126,126,126,-104,-106,-108,126,126,126,-95,126,126,126,126,126,-103,]),'NUM_LITERAL':([41,73,74,75,76,77,79,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,235,238,239,240,243,244,245,269,280,282,298,299,304,306,311,319,331,],[127,127,-89,-90,-92,-93,-101,-96,-98,-99,-100,127,127,127,127,127,127,-168,-169,127,-166,-167,-88,-91,-97,-105,-107,-109,127,127,-206,-207,-208,-209,-210,-211,-212,-213,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-94,127,127,127,-104,-106,-108,127,127,127,-95,127,127,127,127,127,-103,]),'BOOLLIT':([41,73,74,75,76,77,79,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,153,154,158,168,170,172,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,235,238,239,240,243,244,245,269,280,282,298,299,304,306,311,319,331,],[128,128,-89,-90,-92,-93,-101,-96,-98,-99,-100,128,128,128,128,128,128,-168,-169,128,-166,-167,-88,-91,-97,-105,-107,-109,128,128,-206,-207,-208,-209,-210,-211,-212,-213,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-94,128,128,128,-104,-106,-108,128,128,128,-95,128,128,128,128,128,-103,]),'NEW':([41,73,74,75,76,77,79,81,83,84,85,87,88,91,98,99,100,104,105,107,111,112,153,154,158,168,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,235,238,239,240,243,244,245,269,280,282,298,299,304,306,311,319,331,],[133,133,-89,-90,-92,-93,-101,-96,-98,-99,-100,133,133,133,133,133,133,-168,-169,133,-166,-167,-88,-91,-97,-105,-107,-109,133,133,133,-206,-207,-208,-209,-210,-211,-212,-213,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-94,133,133,133,-104,-106,-108,133,133,133,-95,133,133,133,133,133,-103,]),'WHILE':([74,79,81,83,84,85,153,158,159,168,170,172,243,244,245,331,],[-89,-101,-96,-98,-99,-100,-88,-97,237,-105,-107,-109,-104,-106,-108,-103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,21,]),'TypeDeclarations':([0,3,4,21,],[5,22,23,35,]),'ImportStatement':([0,3,4,21,],[7,7,24,24,]),'TypeDeclarationOptSemi':([0,3,4,5,21,22,23,35,],[8,8,8,25,8,25,25,25,]),'TypeDeclaration':([0,3,4,5,21,22,23,31,35,42,210,275,],[10,10,10,10,10,10,10,51,10,51,51,51,]),'ClassHeader':([0,3,4,5,21,22,23,31,35,42,210,275,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,21,22,23,31,35,42,210,275,],[12,12,12,12,12,12,12,52,12,52,52,52,]),'ClassWord':([0,3,4,5,12,21,22,23,31,35,42,52,210,275,],[13,13,13,13,32,13,13,13,13,13,13,32,13,13,]),'Modifier':([0,3,4,5,12,21,22,23,31,35,42,52,210,275,],[14,14,14,14,33,14,14,14,14,14,14,33,14,14,]),'QualifiedName':([6,9,31,41,42,52,73,80,87,88,91,98,99,100,107,133,151,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,226,227,234,238,239,240,269,275,280,282,295,299,304,306,311,319,],[26,28,60,93,60,60,93,60,160,166,160,160,160,160,160,60,60,160,160,160,160,160,166,160,160,160,160,160,160,160,160,160,160,160,160,60,160,160,160,160,160,160,60,160,60,160,160,160,160,60,160,160,60,160,160,160,160,160,]),'SemiColons':([10,26,28,45,72,],[29,36,38,138,152,]),'FieldDeclarations':([31,210,],[42,275,]),'FieldDeclarationOptSemi':([31,42,210,275,],[44,137,44,137,]),'FieldDeclaration':([31,42,210,275,],[45,45,45,45,]),'FieldVariableDeclaration':([31,42,210,275,],[46,46,46,46,]),'MethodDeclaration':([31,42,210,275,],[47,47,47,47,]),'ConstructorDeclaration':([31,42,210,275,],[48,48,48,48,]),'StaticInitializer':([31,42,210,275,],[49,49,49,49,]),'NonStaticInitializer':([31,42,210,275,],[50,50,50,50,]),'TypeSpecifier':([31,41,42,52,73,80,151,210,226,234,275,295,],[53,78,53,140,78,157,233,53,233,297,53,233,]),'ConstructorDeclarator':([31,42,52,210,275,],[54,54,141,54,54,]),'Block':([31,41,42,54,56,73,87,141,143,210,219,275,],[55,85,55,147,148,85,85,220,224,55,224,55,]),'TypeName':([31,41,42,52,73,80,133,151,210,226,234,275,295,],[57,57,57,57,57,57,213,57,57,57,57,57,57,]),'PrimitiveType':([31,41,42,52,73,80,87,88,91,98,99,100,107,133,151,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,226,227,234,238,239,240,269,275,280,282,295,299,304,306,311,319,],[59,92,59,59,92,59,161,165,161,161,161,161,161,59,59,161,161,161,161,161,165,161,161,161,161,161,161,161,161,161,161,161,161,59,161,161,161,161,161,161,59,161,59,161,161,161,161,59,161,161,59,161,161,161,161,161,]),'LocalVariableDeclarationsAndStatements':([41,],[73,]),'LocalVariableDeclarationOrStatement':([41,73,],[75,154,]),'LocalVariableDeclarationStatement':([41,73,],[76,76,]),'Statement':([41,73,87,],[77,77,159,]),'EmptyStatement':([41,73,87,],[81,81,81,]),'ExpressionStatement':([41,73,87,],[82,82,82,]),'IterationStatement':([41,73,87,],[83,83,83,]),'JumpStatement':([41,73,87,],[84,84,84,]),'Expression':([41,73,87,88,91,175,185,188,192,202,209,214,227,269,280,282,299,311,319,],[86,86,86,162,171,250,252,254,255,262,273,285,273,273,285,317,323,273,329,]),'AssignmentExpression':([41,73,87,88,91,175,176,185,188,192,202,209,214,227,269,280,282,299,311,319,],[94,94,94,94,94,94,251,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'ConditionalExpression':([41,73,87,88,91,175,176,185,188,192,202,209,214,227,269,280,282,299,304,311,319,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,324,95,95,]),'UnaryExpression':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,239,240,269,280,282,299,304,311,319,],[96,96,96,96,96,187,189,191,196,96,96,96,191,96,96,191,191,191,191,96,191,191,191,191,191,191,96,191,191,96,191,191,191,96,191,191,96,96,96,96,191,96,96,]),'ConditionalOrExpression':([41,73,87,88,91,175,176,185,188,192,202,209,214,227,269,280,282,299,304,311,319,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ArithmeticUnaryOperator':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,239,240,269,280,282,299,304,311,319,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'CastExpression':([41,73,87,88,91,100,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,239,240,269,280,282,299,304,311,319,],[101,101,101,101,101,190,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,286,287,288,101,301,302,101,101,101,101,101,101,101,]),'LogicalUnaryExpression':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,300,102,102,102,102,102,102,102,300,102,102,]),'ConditionalAndExpression':([41,73,87,88,91,175,176,185,186,188,192,202,209,214,227,269,280,282,299,304,311,319,],[103,103,103,103,103,103,103,103,253,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'PostfixExpression':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'LogicalUnaryOperator':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'InclusiveOrExpression':([41,73,87,88,91,175,176,185,186,188,192,193,202,209,214,227,269,280,282,299,304,311,319,],[108,108,108,108,108,108,108,108,108,108,108,256,108,108,108,108,108,108,108,108,108,108,108,]),'PrimaryExpression':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'RealPostfixExpression':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'ExclusiveOrExpression':([41,73,87,88,91,175,176,185,186,188,192,193,197,202,209,214,227,269,280,282,299,304,311,319,],[113,113,113,113,113,113,113,113,113,113,113,113,257,113,113,113,113,113,113,113,113,113,113,113,]),'NotJustName':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'AndExpression':([41,73,87,88,91,175,176,185,186,188,192,193,197,199,202,209,214,227,269,280,282,299,304,311,319,],[115,115,115,115,115,115,115,115,115,115,115,115,115,259,115,115,115,115,115,115,115,115,115,115,115,]),'SpecialName':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'NewAllocationExpression':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'ComplexPrimary':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'EqualityExpression':([41,73,87,88,91,175,176,185,186,188,192,193,197,199,201,202,209,214,227,269,280,282,299,304,311,319,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,261,119,119,119,119,119,119,119,119,119,119,119,]),'PlainNewAllocationExpression':([41,73,87,88,91,98,99,100,107,174,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[121,121,121,121,121,121,121,121,121,247,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ComplexPrimaryNoParenthesis':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'RelationalExpression':([41,73,87,88,91,175,176,185,186,188,192,193,197,199,201,202,203,204,209,214,227,269,280,282,299,304,311,319,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,263,264,123,123,123,123,123,123,123,123,123,123,]),'ArrayAllocationExpression':([41,73,87,88,91,98,99,100,107,174,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ClassAllocationExpression':([41,73,87,88,91,98,99,100,107,174,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'ArrayAccess':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'FieldAccess':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'MethodCall':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'AdditiveExpression':([41,73,87,88,91,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,214,227,269,280,282,299,304,311,319,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,265,266,267,268,132,132,132,132,132,132,132,132,132,132,]),'MethodAccess':([41,73,87,88,91,98,99,100,107,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,227,238,239,240,269,280,282,299,304,306,311,319,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'MultiplicativeExpression':([41,73,87,88,91,175,176,185,186,188,192,193,197,199,201,202,203,204,205,206,207,208,209,211,212,214,227,269,280,282,299,304,311,319,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,276,277,135,135,135,135,135,135,135,135,135,]),'VariableDeclarators':([53,78,140,157,],[142,155,218,236,]),'MethodDeclarator':([53,140,],[143,219,]),'VariableDeclarator':([53,78,140,157,221,],[144,144,144,144,290,]),'DeclaratorName':([53,78,140,157,221,233,297,],[145,156,145,156,156,296,322,]),'Dims':([57,165,166,213,278,],[149,241,242,279,313,]),'PrimitiveTypeExpression':([88,192,],[163,163,]),'ClassTypeExpression':([88,192,],[164,164,]),'AssignmentOperator':([96,],[176,]),'MethodBody':([143,219,],[222,289,]),'ParameterList':([151,226,],[230,291,]),'Parameter':([151,226,295,],[232,232,321,]),'ArrayInitializers':([209,269,],[271,309,]),'VariableInitializer':([209,227,269,311,],[272,293,272,326,]),'DimExprs':([213,],[278,]),'DimExpr':([213,278,],[281,314,]),'ArgumentList':([214,280,],[283,315,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','phase2_dowhile.py',278),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','phase2_dowhile.py',279),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','phase2_dowhile.py',284),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','phase2_dowhile.py',285),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',290),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',291),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',292),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',293),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',294),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',295),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',296),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',297),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',298),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','phase2_dowhile.py',303),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','phase2_dowhile.py',304),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','phase2_dowhile.py',309),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','phase2_dowhile.py',314),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','phase2_dowhile.py',315),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','phase2_dowhile.py',316),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','phase2_dowhile.py',317),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','phase2_dowhile.py',318),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','phase2_dowhile.py',319),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','phase2_dowhile.py',320),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','phase2_dowhile.py',325),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','phase2_dowhile.py',330),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','phase2_dowhile.py',331),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','phase2_dowhile.py',336),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','phase2_dowhile.py',337),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','phase2_dowhile.py',342),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','phase2_dowhile.py',343),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','phase2_dowhile.py',348),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','phase2_dowhile.py',349),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','phase2_dowhile.py',354),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','phase2_dowhile.py',355),
  ('TypeDeclaration -> ClassHeader { FieldDeclarations }','TypeDeclaration',4,'p_TypeDeclaration','phase2_dowhile.py',360),
  ('TypeDeclaration -> ClassHeader { }','TypeDeclaration',3,'p_TypeDeclaration','phase2_dowhile.py',361),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','phase2_dowhile.py',366),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','phase2_dowhile.py',367),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','phase2_dowhile.py',372),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','phase2_dowhile.py',373),
  ('Modifier -> FINAL','Modifier',1,'p_Modifier','phase2_dowhile.py',378),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','phase2_dowhile.py',379),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','phase2_dowhile.py',380),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','phase2_dowhile.py',381),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','phase2_dowhile.py',382),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','phase2_dowhile.py',387),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','phase2_dowhile.py',391),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','phase2_dowhile.py',392),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','phase2_dowhile.py',397),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','phase2_dowhile.py',398),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','phase2_dowhile.py',403),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',404),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',405),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',406),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',407),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',408),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','phase2_dowhile.py',413),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','phase2_dowhile.py',414),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','phase2_dowhile.py',419),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','phase2_dowhile.py',420),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','phase2_dowhile.py',425),
  ('VariableDeclarator -> DeclaratorName = VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','phase2_dowhile.py',426),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','phase2_dowhile.py',431),
  ('VariableInitializer -> { }','VariableInitializer',2,'p_VariableInitializer','phase2_dowhile.py',432),
  ('VariableInitializer -> { ArrayInitializers }','VariableInitializer',3,'p_VariableInitializer','phase2_dowhile.py',433),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','phase2_dowhile.py',438),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','phase2_dowhile.py',439),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','phase2_dowhile.py',440),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','phase2_dowhile.py',445),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','phase2_dowhile.py',446),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','phase2_dowhile.py',451),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','phase2_dowhile.py',452),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','phase2_dowhile.py',453),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','phase2_dowhile.py',458),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','phase2_dowhile.py',459),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','phase2_dowhile.py',464),
  ('Parameter -> FINAL TypeSpecifier DeclaratorName','Parameter',3,'p_Parameter','phase2_dowhile.py',465),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','phase2_dowhile.py',470),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','phase2_dowhile.py',471),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','phase2_dowhile.py',476),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','phase2_dowhile.py',477),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','phase2_dowhile.py',482),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','phase2_dowhile.py',483),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','phase2_dowhile.py',488),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','phase2_dowhile.py',489),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','phase2_dowhile.py',494),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','phase2_dowhile.py',499),
  ('Block -> { LocalVariableDeclarationsAndStatements }','Block',3,'p_Block','phase2_dowhile.py',504),
  ('Block -> { }','Block',2,'p_Block','phase2_dowhile.py',505),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','phase2_dowhile.py',510),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','phase2_dowhile.py',511),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','phase2_dowhile.py',516),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','phase2_dowhile.py',517),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','phase2_dowhile.py',522),
  ('LocalVariableDeclarationStatement -> FINAL TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',4,'p_LocalVariableDeclarationStatement','phase2_dowhile.py',523),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','phase2_dowhile.py',528),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','phase2_dowhile.py',529),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','phase2_dowhile.py',530),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','phase2_dowhile.py',531),
  ('Statement -> Block','Statement',1,'p_Statement','phase2_dowhile.py',532),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','phase2_dowhile.py',537),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','phase2_dowhile.py',542),
  ('IterationStatement -> DO Statement WHILE ( Expression ) ;','IterationStatement',7,'p_IterationStatement','phase2_dowhile.py',547),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','phase2_dowhile.py',552),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','phase2_dowhile.py',553),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','phase2_dowhile.py',554),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','phase2_dowhile.py',555),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','phase2_dowhile.py',556),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','phase2_dowhile.py',557),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','phase2_dowhile.py',562),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','phase2_dowhile.py',563),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','phase2_dowhile.py',568),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','phase2_dowhile.py',569),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','phase2_dowhile.py',570),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','phase2_dowhile.py',575),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','phase2_dowhile.py',576),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',581),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',582),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',583),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',584),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',585),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',586),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','phase2_dowhile.py',591),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','phase2_dowhile.py',592),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',597),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',598),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',599),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',600),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',601),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','phase2_dowhile.py',606),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','phase2_dowhile.py',607),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','phase2_dowhile.py',612),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','phase2_dowhile.py',613),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','phase2_dowhile.py',614),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','phase2_dowhile.py',619),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','phase2_dowhile.py',624),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','phase2_dowhile.py',625),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','phase2_dowhile.py',630),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','phase2_dowhile.py',631),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','phase2_dowhile.py',636),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','phase2_dowhile.py',637),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','phase2_dowhile.py',638),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','phase2_dowhile.py',639),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { ArrayInitializers }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','phase2_dowhile.py',640),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { FieldDeclarations }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','phase2_dowhile.py',641),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','phase2_dowhile.py',646),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','phase2_dowhile.py',647),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','phase2_dowhile.py',652),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','phase2_dowhile.py',653),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','phase2_dowhile.py',654),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','phase2_dowhile.py',659),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','phase2_dowhile.py',660),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','phase2_dowhile.py',665),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','phase2_dowhile.py',670),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','phase2_dowhile.py',671),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','phase2_dowhile.py',676),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','phase2_dowhile.py',677),
  ('RealPostfixExpression -> PostfixExpression OP_INC','RealPostfixExpression',2,'p_RealPostfixExpression','phase2_dowhile.py',682),
  ('RealPostfixExpression -> PostfixExpression OP_DEC','RealPostfixExpression',2,'p_RealPostfixExpression','phase2_dowhile.py',683),
  ('UnaryExpression -> OP_INC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','phase2_dowhile.py',688),
  ('UnaryExpression -> OP_DEC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','phase2_dowhile.py',689),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','phase2_dowhile.py',690),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','phase2_dowhile.py',691),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','phase2_dowhile.py',696),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','phase2_dowhile.py',697),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','phase2_dowhile.py',702),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','phase2_dowhile.py',703),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','phase2_dowhile.py',708),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','phase2_dowhile.py',709),
  ('CastExpression -> UnaryExpression','CastExpression',1,'p_CastExpression','phase2_dowhile.py',714),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','phase2_dowhile.py',715),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','phase2_dowhile.py',716),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','phase2_dowhile.py',717),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','phase2_dowhile.py',722),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','phase2_dowhile.py',723),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','phase2_dowhile.py',728),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','phase2_dowhile.py',733),
  ('MultiplicativeExpression -> MultiplicativeExpression * CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','phase2_dowhile.py',734),
  ('MultiplicativeExpression -> MultiplicativeExpression / CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','phase2_dowhile.py',735),
  ('MultiplicativeExpression -> MultiplicativeExpression % CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','phase2_dowhile.py',736),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','phase2_dowhile.py',741),
  ('AdditiveExpression -> AdditiveExpression + MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','phase2_dowhile.py',742),
  ('AdditiveExpression -> AdditiveExpression - MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','phase2_dowhile.py',743),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','phase2_dowhile.py',748),
  ('RelationalExpression -> RelationalExpression < AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',749),
  ('RelationalExpression -> RelationalExpression > AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',750),
  ('RelationalExpression -> RelationalExpression OP_LE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',751),
  ('RelationalExpression -> RelationalExpression OP_GE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',752),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','phase2_dowhile.py',757),
  ('EqualityExpression -> EqualityExpression OP_EQ RelationalExpression','EqualityExpression',3,'p_EqualityExpression','phase2_dowhile.py',758),
  ('EqualityExpression -> EqualityExpression OP_NE RelationalExpression','EqualityExpression',3,'p_EqualityExpression','phase2_dowhile.py',759),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','phase2_dowhile.py',764),
  ('AndExpression -> AndExpression & EqualityExpression','AndExpression',3,'p_AndExpression','phase2_dowhile.py',765),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','phase2_dowhile.py',770),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','phase2_dowhile.py',771),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','phase2_dowhile.py',776),
  ('InclusiveOrExpression -> InclusiveOrExpression | ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','phase2_dowhile.py',777),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','phase2_dowhile.py',782),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','phase2_dowhile.py',783),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','phase2_dowhile.py',788),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','phase2_dowhile.py',789),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','phase2_dowhile.py',794),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','phase2_dowhile.py',795),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','phase2_dowhile.py',800),
  ('AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression','AssignmentExpression',3,'p_AssignmentExpression','phase2_dowhile.py',801),
  ('AssignmentOperator -> =','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',806),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',807),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',808),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',809),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',810),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',811),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',812),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',813),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','phase2_dowhile.py',818),
]
