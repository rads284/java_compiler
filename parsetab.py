
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitBOOLEAN BREAK BYTE CHAR CLASS CONTINUE COMMENT DO DOUBLE FLOAT IMPORT INT LONG NEW PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VOID WHILE FOR OP_INC OP_DEC OP_DIM OP_GE OP_LE OP_EQ OP_NE OP_LAND OP_LOR ASS_MUL ASS_DIV ASS_MOD ASS_ADD ASS_SUB ASS_OR ASS_AND IDENTIFIER LITERAL BOOLLIT NUM_LITERALTypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' FieldDeclarations '}'\n    | ClassHeader '{' '}'\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n        | NonStaticInitializer\n        | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName '=' VariableInitializer\n    VariableInitializer : Expression\n    | '{' '}'\n        | '{' ArrayInitializers '}'\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    | DeclaratorName '[' NUM_LITERAL ']'\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' LocalVariableDeclarationsAndStatements '}'\n    | '{' '}'\n    LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n    | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO Statement WHILE '(' Expression ')' ';'\n    | FOR '(' ForInit ForExpr ForIncr ')' Statement\n    | FOR '(' ForInit ForExpr         ')' Statement\n    ForInit : ExpressionStatements ';'\n    | LocalVariableDeclarationStatement\n    | ';'\n    ForExpr : Expression ';'\n    | ';'\n    ForIncr : ExpressionStatements ExpressionStatements : ExpressionStatement\n    | ExpressionStatements ',' ExpressionStatement\n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n    | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName\n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' '}'\n        | ClassAllocationExpression '{' '}'\n        | ArrayAllocationExpression '{' ArrayInitializers '}'\n        | ClassAllocationExpression '{' FieldDeclarations '}'\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n    | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC\n    | PostfixExpression OP_DEC\n    UnaryExpression : OP_INC UnaryExpression\n    | OP_DEC UnaryExpression\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n    | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression\n    | MultiplicativeExpression '*' CastExpression\n    | MultiplicativeExpression '/' CastExpression\n    | MultiplicativeExpression '%' CastExpression\n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression '+' MultiplicativeExpression\n    | AdditiveExpression '-' MultiplicativeExpression\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' AdditiveExpression\n    | RelationalExpression '>' AdditiveExpression\n    | RelationalExpression OP_LE AdditiveExpression\n    | RelationalExpression OP_GE AdditiveExpression\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ RelationalExpression\n        | EqualityExpression OP_NE RelationalExpression\n    AndExpression : EqualityExpression\n        | AndExpression '&' EqualityExpression\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' AndExpression\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' ExclusiveOrExpression\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND InclusiveOrExpression\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR ConditionalAndExpression\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression AssignmentOperator AssignmentExpression\n    AssignmentOperator : '='\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,20,23,29,35,37,39,151,],[9,9,9,-29,9,-30,-14,-24,-31,-15,-32,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,172,173,209,219,221,223,224,278,292,],[15,15,15,15,-29,-25,-27,15,-39,-41,-42,-43,-44,15,15,15,-30,-26,-28,-14,15,-40,15,-24,-31,-15,15,-36,-46,-48,-51,-52,-53,-54,-55,15,-86,-44,-88,-35,-47,-49,-50,-82,-85,-32,-87,249,252,15,-81,-69,-79,-80,15,-68,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,278,292,],[16,16,16,16,-29,-25,-27,16,-39,-41,-42,-43,-44,16,16,16,-30,-26,-28,-14,16,-40,16,-24,-31,-15,16,-36,-46,-48,-51,-52,-53,-54,-55,16,-86,-44,-88,-35,-47,-49,-50,-82,-85,-32,-87,16,-81,-69,-79,-80,16,-68,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,278,292,],[17,17,17,17,-29,-25,-27,17,-39,-41,-42,-43,-44,17,17,17,-30,-26,-28,-14,17,-40,17,-24,-31,-15,17,-36,-46,-48,-51,-52,-53,-54,-55,17,-86,-44,-88,-35,-47,-49,-50,-82,-85,-32,-87,17,-81,-69,-79,-80,17,-68,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,278,292,],[18,18,18,18,-29,-25,-27,18,-39,-41,-42,-43,-44,18,18,18,-30,-26,-28,-14,18,-40,18,-24,-31,-15,18,-36,-46,-48,-51,-52,-53,-54,-55,18,-86,-44,-88,-35,-47,-49,-50,-82,-85,-32,-87,18,-81,-69,-79,-80,18,-68,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,209,219,221,223,224,278,292,],[19,19,19,19,-29,-25,-27,19,-39,-41,-42,-43,-44,19,19,19,-30,-26,-28,-14,55,-40,19,-24,-31,-15,55,-36,-46,-48,-51,-52,-53,-54,-55,19,-86,-44,-88,-35,-47,-49,-50,-82,-85,-32,-87,55,-81,-69,-79,-80,55,-68,]),'$end':([1,2,3,4,5,7,8,10,20,21,22,23,24,28,29,34,35,37,39,42,135,151,],[0,-16,-21,-22,-23,-29,-25,-27,-18,-19,-20,-30,-26,-28,-14,-17,-24,-31,-15,-36,-35,-32,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,26,29,30,31,32,36,38,39,40,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,81,82,83,85,86,88,89,90,91,92,97,98,99,103,104,106,110,111,132,135,136,137,138,139,146,147,148,149,150,152,153,156,165,167,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,220,221,223,224,225,226,229,233,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[26,26,33,-39,-45,-41,-42,-43,-44,-33,-14,57,69,-40,70,70,-15,26,57,-36,-46,-48,-51,-52,-53,-54,-55,57,145,-86,-44,-1,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,26,-88,-89,-91,-92,145,-99,-94,-96,-97,-98,26,26,166,168,26,-3,-4,26,26,26,-176,-177,26,-174,-175,26,-35,-47,-49,-50,145,-82,-85,-2,-162,26,-87,-90,-95,26,-113,-115,-117,70,26,26,-214,-215,-216,-217,-218,-219,-220,-221,26,26,26,26,26,26,261,26,263,26,26,26,26,26,26,26,26,26,57,26,26,26,26,26,26,-81,145,-69,-79,-80,26,26,-163,145,-93,26,26,26,26,-106,-105,-112,-114,-116,26,57,26,26,-68,26,26,26,-108,-104,26,26,26,26,26,26,-107,26,-103,-101,-102,]),';':([10,25,26,27,28,29,35,37,39,40,42,44,45,46,47,48,49,50,54,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,88,89,90,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,138,141,142,143,144,145,146,147,149,151,152,153,154,155,156,158,165,166,167,168,169,170,171,186,188,189,190,193,194,195,217,218,219,221,222,223,224,227,229,234,236,241,242,243,244,245,246,247,248,249,250,251,252,254,256,259,260,261,262,263,264,266,267,268,269,270,271,273,276,277,279,280,281,282,284,287,289,290,291,292,293,295,296,302,303,304,306,308,310,312,313,314,315,317,319,320,321,323,325,327,328,332,335,336,337,339,340,342,343,344,345,346,],[29,29,-33,29,39,-14,39,39,-15,78,-36,29,138,-51,-52,-53,-54,-55,-86,-34,29,78,-88,-89,-91,-92,-99,-94,156,-96,-97,-98,-100,78,167,169,171,-118,-222,-212,-178,-210,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-35,39,-50,-57,224,-58,-60,-76,-82,-85,-162,39,-87,-90,234,-60,-95,-118,243,246,-113,247,-115,248,-117,-168,-169,-170,-178,-166,-167,-173,-56,224,-81,-69,-72,-79,-80,-77,-163,-93,-123,307,308,-106,-105,-110,-112,-114,-116,-137,-147,-135,-136,-213,-209,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-62,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-68,-59,-71,-61,-181,-179,-180,334,-104,-131,-123,-123,-132,-63,-152,-153,-156,-160,-155,-138,-70,-78,78,-111,-211,-64,-154,-161,345,78,-103,-101,-102,]),'{':([11,29,30,33,39,40,41,42,43,44,46,47,48,49,50,53,54,55,69,72,73,74,75,76,78,79,81,82,83,85,123,124,135,136,137,138,140,142,146,147,149,152,153,156,167,169,171,208,209,218,219,221,222,223,224,226,229,231,234,246,247,248,272,278,281,282,284,292,295,298,318,320,321,323,327,332,339,340,343,344,345,346,],[30,-14,40,-38,-15,40,40,-36,-46,-48,-51,-52,-53,-54,-55,40,-86,40,-37,40,-88,-89,-91,-92,-99,-94,-96,-97,-98,40,208,209,-35,-47,-49,-50,40,40,-82,-85,-162,-87,-90,-95,-113,-115,-117,272,40,40,-81,-69,-72,-79,-80,272,-163,-84,-93,-112,-114,-116,272,40,-157,-158,-159,-68,-71,-83,272,-156,-160,-155,-70,40,-154,-161,40,-103,-101,-102,]),'BOOLEAN':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,60,-40,-15,60,60,-36,-46,-48,-51,-52,-53,-54,-55,60,-86,-44,60,-88,-89,-91,-92,-99,-94,-96,-97,-98,60,60,60,60,60,60,-176,-177,60,-174,-175,60,-35,-47,-49,-50,-82,-85,60,-87,-90,-95,60,-113,-115,-117,60,60,-214,-215,-216,-217,-218,-219,-220,-221,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-81,-69,-79,-80,60,60,-93,60,60,60,60,-106,-105,-112,-114,-116,60,60,60,60,-68,60,60,60,-108,-104,60,60,60,60,60,60,-107,60,-103,-101,-102,]),'CHAR':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,61,-40,-15,61,61,-36,-46,-48,-51,-52,-53,-54,-55,61,-86,-44,61,-88,-89,-91,-92,-99,-94,-96,-97,-98,61,61,61,61,61,61,-176,-177,61,-174,-175,61,-35,-47,-49,-50,-82,-85,61,-87,-90,-95,61,-113,-115,-117,61,61,-214,-215,-216,-217,-218,-219,-220,-221,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-81,-69,-79,-80,61,61,-93,61,61,61,61,-106,-105,-112,-114,-116,61,61,61,61,-68,61,61,61,-108,-104,61,61,61,61,61,61,-107,61,-103,-101,-102,]),'BYTE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,62,-40,-15,62,62,-36,-46,-48,-51,-52,-53,-54,-55,62,-86,-44,62,-88,-89,-91,-92,-99,-94,-96,-97,-98,62,62,62,62,62,62,-176,-177,62,-174,-175,62,-35,-47,-49,-50,-82,-85,62,-87,-90,-95,62,-113,-115,-117,62,62,-214,-215,-216,-217,-218,-219,-220,-221,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-81,-69,-79,-80,62,62,-93,62,62,62,62,-106,-105,-112,-114,-116,62,62,62,62,-68,62,62,62,-108,-104,62,62,62,62,62,62,-107,62,-103,-101,-102,]),'SHORT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,63,-40,-15,63,63,-36,-46,-48,-51,-52,-53,-54,-55,63,-86,-44,63,-88,-89,-91,-92,-99,-94,-96,-97,-98,63,63,63,63,63,63,-176,-177,63,-174,-175,63,-35,-47,-49,-50,-82,-85,63,-87,-90,-95,63,-113,-115,-117,63,63,-214,-215,-216,-217,-218,-219,-220,-221,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-81,-69,-79,-80,63,63,-93,63,63,63,63,-106,-105,-112,-114,-116,63,63,63,63,-68,63,63,63,-108,-104,63,63,63,63,63,63,-107,63,-103,-101,-102,]),'INT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,64,-40,-15,64,64,-36,-46,-48,-51,-52,-53,-54,-55,64,-86,-44,64,-88,-89,-91,-92,-99,-94,-96,-97,-98,64,64,64,64,64,64,-176,-177,64,-174,-175,64,-35,-47,-49,-50,-82,-85,64,-87,-90,-95,64,-113,-115,-117,64,64,-214,-215,-216,-217,-218,-219,-220,-221,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-81,-69,-79,-80,64,64,-93,64,64,64,64,-106,-105,-112,-114,-116,64,64,64,64,-68,64,64,64,-108,-104,64,64,64,64,64,64,-107,64,-103,-101,-102,]),'LONG':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,65,-40,-15,65,65,-36,-46,-48,-51,-52,-53,-54,-55,65,-86,-44,65,-88,-89,-91,-92,-99,-94,-96,-97,-98,65,65,65,65,65,65,-176,-177,65,-174,-175,65,-35,-47,-49,-50,-82,-85,65,-87,-90,-95,65,-113,-115,-117,65,65,-214,-215,-216,-217,-218,-219,-220,-221,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-81,-69,-79,-80,65,65,-93,65,65,65,65,-106,-105,-112,-114,-116,65,65,65,65,-68,65,65,65,-108,-104,65,65,65,65,65,65,-107,65,-103,-101,-102,]),'FLOAT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,66,-40,-15,66,66,-36,-46,-48,-51,-52,-53,-54,-55,66,-86,-44,66,-88,-89,-91,-92,-99,-94,-96,-97,-98,66,66,66,66,66,66,-176,-177,66,-174,-175,66,-35,-47,-49,-50,-82,-85,66,-87,-90,-95,66,-113,-115,-117,66,66,-214,-215,-216,-217,-218,-219,-220,-221,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-81,-69,-79,-80,66,66,-93,66,66,66,66,-106,-105,-112,-114,-116,66,66,66,66,-68,66,66,66,-108,-104,66,66,66,66,66,66,-107,66,-103,-101,-102,]),'DOUBLE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,67,-40,-15,67,67,-36,-46,-48,-51,-52,-53,-54,-55,67,-86,-44,67,-88,-89,-91,-92,-99,-94,-96,-97,-98,67,67,67,67,67,67,-176,-177,67,-174,-175,67,-35,-47,-49,-50,-82,-85,67,-87,-90,-95,67,-113,-115,-117,67,67,-214,-215,-216,-217,-218,-219,-220,-221,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-81,-69,-79,-80,67,67,-93,67,67,67,67,-106,-105,-112,-114,-116,67,67,67,67,-68,67,67,67,-108,-104,67,67,67,67,67,67,-107,67,-103,-101,-102,]),'VOID':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,219,221,223,224,225,226,234,236,237,238,241,243,244,246,247,248,272,278,283,285,292,299,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[-39,-41,-42,-43,-44,-14,68,-40,-15,68,68,-36,-46,-48,-51,-52,-53,-54,-55,68,-86,-44,68,-88,-89,-91,-92,-99,-94,-96,-97,-98,68,68,68,68,68,68,-176,-177,68,-174,-175,68,-35,-47,-49,-50,-82,-85,68,-87,-90,-95,68,-113,-115,-117,68,68,-214,-215,-216,-217,-218,-219,-220,-221,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-81,-69,-79,-80,68,68,-93,68,68,68,68,-106,-105,-112,-114,-116,68,68,68,68,-68,68,68,68,-108,-104,68,68,68,68,68,68,-107,68,-103,-101,-102,]),'.':([25,26,27,57,59,60,61,62,63,64,65,66,67,68,70,91,92,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,159,163,164,193,194,229,236,249,250,251,252,261,263,273,277,281,282,284,287,310,312,313,314,317,319,320,321,323,325,339,340,],[36,-33,38,-33,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,172,173,197,199,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,173,172,172,173,-166,-167,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'[':([26,58,59,60,61,62,63,64,65,66,67,68,70,92,117,121,125,126,127,128,129,130,144,145,155,158,164,212,227,236,249,251,252,261,263,281,284,287,300,310,312,313,314,321,325,328,340,],[-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,174,201,-124,-125,-126,-127,-128,-129,-130,228,-76,228,174,174,285,-77,-123,-137,-135,-136,-134,-133,285,-159,-139,228,-131,-123,-123,-132,-160,-138,-78,-161,]),'OP_DIM':([26,56,57,58,59,60,61,62,63,64,65,66,67,68,70,91,92,142,144,145,148,149,155,163,164,212,218,222,227,229,239,240,281,282,284,295,300,320,321,327,328,340,],[-33,149,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-3,-4,222,227,-76,229,-162,227,149,149,149,222,-72,-77,-163,229,229,149,229,-159,-71,227,229,-160,-70,-78,-161,]),'OP_INC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,193,194,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,229,234,236,237,238,241,243,244,246,247,248,249,250,251,252,261,263,272,273,277,281,282,283,284,285,287,301,305,307,308,309,310,311,312,313,314,317,318,319,320,321,323,325,326,332,334,339,340,343,344,345,346,],[-33,97,-34,97,-88,-89,-91,-92,-99,-94,-96,-97,-98,97,97,97,-118,97,97,97,-176,-177,193,97,-164,-165,-174,-175,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-87,-90,-95,-118,-118,97,-113,-115,-117,97,97,-214,-215,-216,-217,-218,-219,-220,-221,97,97,97,97,97,-166,-167,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-163,-93,-123,97,97,97,-106,-105,-112,-114,-116,-137,-147,-135,-136,-134,-133,97,-150,-151,-157,-158,97,-159,97,-139,97,97,-108,-104,97,-131,97,-123,-123,-132,-152,97,-153,-156,-160,-155,-138,97,97,-107,-154,-161,97,-103,-101,-102,]),'OP_DEC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,193,194,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,229,234,236,237,238,241,243,244,246,247,248,249,250,251,252,261,263,272,273,277,281,282,283,284,285,287,301,305,307,308,309,310,311,312,313,314,317,318,319,320,321,323,325,326,332,334,339,340,343,344,345,346,],[-33,98,-34,98,-88,-89,-91,-92,-99,-94,-96,-97,-98,98,98,98,-118,98,98,98,-176,-177,194,98,-164,-165,-174,-175,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-87,-90,-95,-118,-118,98,-113,-115,-117,98,98,-214,-215,-216,-217,-218,-219,-220,-221,98,98,98,98,98,-166,-167,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-163,-93,-123,98,98,98,-106,-105,-112,-114,-116,-137,-147,-135,-136,-134,-133,98,-150,-151,-157,-158,98,-159,98,-139,98,98,-108,-104,98,-131,98,-123,-123,-132,-152,98,-153,-156,-160,-155,-138,98,98,-107,-154,-161,98,-103,-101,-102,]),'=':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,144,145,149,155,158,164,186,188,189,190,193,194,195,227,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,328,339,340,],[-33,-34,-118,176,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,226,-76,-162,226,-118,-118,-168,-169,-170,-178,-166,-167,-173,-77,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-78,-154,-161,]),'ASS_MUL':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,177,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'ASS_DIV':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,178,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'ASS_MOD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,179,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'ASS_ADD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,180,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'ASS_SUB':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,181,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'ASS_AND':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,182,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'ASS_OR':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,281,282,284,287,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,183,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,-157,-158,-159,-139,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'*':([26,38,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,71,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,214,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,214,214,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'/':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,215,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,215,215,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'%':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,216,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,-150,-151,216,216,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'+':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,229,234,236,237,238,241,243,244,246,247,248,249,250,251,252,261,263,268,269,270,271,272,273,277,279,280,281,282,283,284,285,287,289,290,291,301,302,303,304,305,307,308,309,310,311,312,313,314,317,318,319,320,321,323,325,326,332,334,339,340,343,344,345,346,],[-33,103,-34,103,-88,-89,-91,-92,-99,-94,-96,-97,-98,103,103,103,-118,-178,103,103,103,-185,-171,-176,-177,-172,103,-164,-165,-174,-175,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,210,-189,-162,-87,-90,-95,-118,-118,103,-113,-115,-117,103,103,-214,-215,-216,-217,-218,-219,-220,-221,103,103,-168,103,-169,-170,-178,103,103,-166,-167,-173,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-163,-93,-123,103,103,103,-106,-105,-112,-114,-116,-137,-147,-135,-136,-134,-133,210,210,210,210,103,-150,-151,-190,-191,-157,-158,103,-159,103,-139,-186,-187,-188,103,-181,-179,-180,103,-108,-104,103,-131,103,-123,-123,-132,-152,103,-153,-156,-160,-155,-138,103,103,-107,-154,-161,103,-103,-101,-102,]),'-':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,229,234,236,237,238,241,243,244,246,247,248,249,250,251,252,261,263,268,269,270,271,272,273,277,279,280,281,282,283,284,285,287,289,290,291,301,302,303,304,305,307,308,309,310,311,312,313,314,317,318,319,320,321,323,325,326,332,334,339,340,343,344,345,346,],[-33,104,-34,104,-88,-89,-91,-92,-99,-94,-96,-97,-98,104,104,104,-118,-178,104,104,104,-185,-171,-176,-177,-172,104,-164,-165,-174,-175,-119,-120,-121,-122,-143,-146,-124,-148,-149,-125,-126,-127,-128,-129,-130,211,-189,-162,-87,-90,-95,-118,-118,104,-113,-115,-117,104,104,-214,-215,-216,-217,-218,-219,-220,-221,104,104,-168,104,-169,-170,-178,104,104,-166,-167,-173,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-163,-93,-123,104,104,104,-106,-105,-112,-114,-116,-137,-147,-135,-136,-134,-133,211,211,211,211,104,-150,-151,-190,-191,-157,-158,104,-159,104,-139,-186,-187,-188,104,-181,-179,-180,104,-108,-104,104,-131,104,-123,-123,-132,-152,104,-153,-156,-160,-155,-138,104,104,-107,-154,-161,104,-103,-101,-102,]),'<':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,204,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,204,204,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'>':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,205,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,205,205,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'OP_LE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,206,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,206,206,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'OP_GE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,-143,-146,-124,207,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,207,207,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'OP_EQ':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,202,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,202,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'OP_NE':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,-120,-121,-122,203,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,-133,203,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'&':([26,70,92,95,100,101,105,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,-119,200,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-134,200,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'^':([26,70,92,95,100,101,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,260,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,-164,-165,198,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,198,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'|':([26,70,92,95,100,101,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,259,260,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,-172,196,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,196,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'OP_LAND':([26,70,92,95,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,256,259,260,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,-185,-171,192,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,192,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'?':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,256,259,260,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,184,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-209,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'OP_LOR':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,186,188,189,190,193,194,195,229,236,249,250,251,252,256,259,260,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,339,340,],[-33,-34,-118,-178,185,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-209,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-154,-161,]),'(':([26,40,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,78,79,81,82,83,85,86,87,90,92,97,98,99,103,104,106,110,111,115,119,121,125,126,127,128,129,130,133,144,145,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,226,227,234,235,236,237,238,241,243,244,246,247,248,249,251,252,261,263,272,283,285,287,301,305,307,308,309,310,311,313,314,318,325,326,328,332,334,343,344,345,346,],[-33,86,150,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,86,-88,-89,-91,-92,-99,-94,-96,-97,-98,86,86,165,86,-142,187,187,191,-176,-177,187,-174,-175,-141,-143,-140,-125,-126,-127,-128,-129,-130,213,225,-76,-87,-90,-95,-142,-142,86,-113,-115,-117,86,86,-214,-215,-216,-217,-218,-219,-220,-221,86,191,86,86,191,191,191,191,86,191,191,191,191,191,191,86,191,191,283,86,191,191,191,86,-77,-93,301,187,191,191,86,-106,-105,-112,-114,-116,-137,-135,-136,-134,-133,86,86,86,-139,86,86,-108,-104,86,-131,191,187,-132,86,-138,86,-78,86,-107,86,-103,-101,-102,]),')':([26,60,61,62,63,64,65,66,67,68,70,84,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,145,149,150,158,160,161,162,163,164,186,188,189,190,193,194,195,213,225,227,229,230,232,236,239,240,245,249,250,251,252,254,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,283,284,286,287,288,289,290,291,294,300,302,303,304,305,307,310,312,313,314,317,319,320,321,322,323,325,328,329,330,331,333,334,335,336,339,340,341,],[-33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-100,-222,-212,-178,-210,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-76,-162,231,-118,236,237,238,-182,-118,-168,-169,-170,-178,-166,-167,-173,287,295,-77,-163,298,-73,-123,-183,-184,-110,-137,-147,-135,-136,-213,-209,312,313,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,323,-159,325,-139,-144,-186,-187,-188,327,-75,-181,-179,-180,332,-108,-131,-123,-123,-132,-152,-153,-156,-160,339,-155,-138,-78,-74,342,343,-109,-107,-111,-211,-154,-161,-145,]),',':([26,70,84,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,141,143,144,145,149,154,155,158,186,188,189,190,193,194,195,217,227,229,230,232,236,242,245,249,250,251,252,254,256,259,260,261,262,263,264,266,267,268,269,270,271,273,274,275,276,277,279,280,281,282,284,286,287,288,289,290,291,293,294,296,300,302,303,304,310,312,313,314,315,316,317,318,319,320,321,322,323,325,328,329,333,335,336,337,338,339,340,341,],[-33,-34,-100,-118,-222,-212,-178,-210,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,220,-58,-60,-76,-162,220,-60,-118,-168,-169,-170,-178,-166,-167,-173,220,-77,-163,299,-73,-123,309,-110,-137,-147,-135,-136,-213,-209,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,318,-65,-62,-151,-190,-191,-157,-158,-159,326,-139,-144,-186,-187,-188,-59,299,-61,-75,-181,-179,-180,-131,-123,-123,-132,-63,318,-152,-67,-153,-156,-160,326,-155,-138,-78,-74,309,-111,-211,-64,-66,-154,-161,-145,]),']':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,186,188,189,190,193,194,195,229,236,249,250,251,252,253,254,256,259,260,261,262,263,264,265,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,297,302,303,304,310,312,313,314,317,319,320,321,323,324,325,336,339,340,],[-33,-34,-222,-212,-178,-210,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,310,-213,-209,-207,-205,-134,-203,-133,-201,314,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,328,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,340,-138,-211,-154,-161,]),':':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,186,188,189,190,193,194,195,229,236,249,250,251,252,254,255,256,259,260,261,262,263,264,266,267,268,269,270,271,273,277,279,280,281,282,284,287,289,290,291,302,303,304,310,312,313,314,317,319,320,321,323,325,336,339,340,],[-33,-34,-222,-212,-178,-210,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-162,-118,-168,-169,-170,-178,-166,-167,-173,-163,-123,-137,-147,-135,-136,-213,311,-209,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,-150,-151,-190,-191,-157,-158,-159,-139,-186,-187,-188,-181,-179,-180,-131,-123,-123,-132,-152,-153,-156,-160,-155,-138,-211,-154,-161,]),'}':([26,29,30,39,40,41,42,43,44,46,47,48,49,50,54,70,72,73,74,75,76,78,79,81,82,83,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,146,147,149,152,153,156,158,167,169,171,186,188,189,190,193,194,195,208,209,219,221,223,224,229,234,236,246,247,248,249,250,251,252,254,256,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,289,290,291,292,302,303,304,310,312,313,314,315,316,317,318,319,320,321,323,325,336,337,338,339,340,344,345,346,],[-33,-14,42,-15,73,135,-36,-46,-48,-51,-52,-53,-54,-55,-86,-34,152,-88,-89,-91,-92,-99,-94,-96,-97,-98,-222,-212,-178,-210,-185,-171,-208,-172,-206,-164,-165,-204,-119,-202,-120,-121,-122,-200,-143,-146,-124,-197,-148,-149,-125,-126,-127,-128,-129,-130,-192,-189,-35,-47,-49,-50,-82,-85,-162,-87,-90,-95,-118,-113,-115,-117,-168,-169,-170,-178,-166,-167,-173,273,277,-81,-69,-79,-80,-163,-93,-123,-112,-114,-116,-137,-147,-135,-136,-213,-209,-207,-205,-134,-203,-133,-201,-198,-199,-193,-194,-195,-196,315,-150,317,-65,-62,-151,319,-190,-191,-157,-158,-159,-139,-186,-187,-188,-68,-181,-179,-180,-131,-123,-123,-132,-63,337,-152,-67,-153,-156,-160,-155,-138,-211,-64,-66,-154,-161,-103,-101,-102,]),'DO':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,234,246,247,248,332,343,344,345,346,],[85,85,-88,-89,-91,-92,-99,-94,-96,-97,-98,85,-87,-90,-95,-113,-115,-117,-93,-112,-114,-116,85,85,-103,-101,-102,]),'FOR':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,234,246,247,248,332,343,344,345,346,],[87,87,-88,-89,-91,-92,-99,-94,-96,-97,-98,87,-87,-90,-95,-113,-115,-117,-93,-112,-114,-116,87,87,-103,-101,-102,]),'BREAK':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,234,246,247,248,332,343,344,345,346,],[88,88,-88,-89,-91,-92,-99,-94,-96,-97,-98,88,-87,-90,-95,-113,-115,-117,-93,-112,-114,-116,88,88,-103,-101,-102,]),'CONTINUE':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,234,246,247,248,332,343,344,345,346,],[89,89,-88,-89,-91,-92,-99,-94,-96,-97,-98,89,-87,-90,-95,-113,-115,-117,-93,-112,-114,-116,89,89,-103,-101,-102,]),'RETURN':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,234,246,247,248,332,343,344,345,346,],[90,90,-88,-89,-91,-92,-99,-94,-96,-97,-98,90,-87,-90,-95,-113,-115,-117,-93,-112,-114,-116,90,90,-103,-101,-102,]),'~':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,234,236,237,238,241,243,244,246,247,248,272,283,285,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[110,110,-88,-89,-91,-92,-99,-94,-96,-97,-98,110,110,110,110,110,110,-176,-177,110,-174,-175,-87,-90,-95,110,-113,-115,-117,110,110,-214,-215,-216,-217,-218,-219,-220,-221,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-93,110,110,110,110,-106,-105,-112,-114,-116,110,110,110,110,110,-108,-104,110,110,110,110,110,110,-107,110,-103,-101,-102,]),'!':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,234,236,237,238,241,243,244,246,247,248,272,283,285,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[111,111,-88,-89,-91,-92,-99,-94,-96,-97,-98,111,111,111,111,111,111,-176,-177,111,-174,-175,-87,-90,-95,111,-113,-115,-117,111,111,-214,-215,-216,-217,-218,-219,-220,-221,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-93,111,111,111,111,-106,-105,-112,-114,-116,111,111,111,111,111,-108,-104,111,111,111,111,111,111,-107,111,-103,-101,-102,]),'THIS':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,234,236,237,238,241,243,244,246,247,248,272,283,285,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[119,119,-88,-89,-91,-92,-99,-94,-96,-97,-98,119,119,119,119,119,119,-176,-177,119,-174,-175,-87,-90,-95,119,-113,-115,-117,251,119,119,-214,-215,-216,-217,-218,-219,-220,-221,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-93,119,119,119,119,-106,-105,-112,-114,-116,119,119,119,119,119,-108,-104,119,119,119,119,119,119,-107,119,-103,-101,-102,]),'LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,234,236,237,238,241,243,244,246,247,248,272,283,285,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[125,125,-88,-89,-91,-92,-99,-94,-96,-97,-98,125,125,125,125,125,125,-176,-177,125,-174,-175,-87,-90,-95,125,-113,-115,-117,125,125,-214,-215,-216,-217,-218,-219,-220,-221,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-93,125,125,125,125,-106,-105,-112,-114,-116,125,125,125,125,125,-108,-104,125,125,125,125,125,125,-107,125,-103,-101,-102,]),'NUM_LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,228,234,236,237,238,241,243,244,246,247,248,272,283,285,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[126,126,-88,-89,-91,-92,-99,-94,-96,-97,-98,126,126,126,126,126,126,-176,-177,126,-174,-175,-87,-90,-95,126,-113,-115,-117,126,126,-214,-215,-216,-217,-218,-219,-220,-221,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,297,-93,126,126,126,126,-106,-105,-112,-114,-116,126,126,126,126,126,-108,-104,126,126,126,126,126,126,-107,126,-103,-101,-102,]),'BOOLLIT':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,234,236,237,238,241,243,244,246,247,248,272,283,285,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[127,127,-88,-89,-91,-92,-99,-94,-96,-97,-98,127,127,127,127,127,127,-176,-177,127,-174,-175,-87,-90,-95,127,-113,-115,-117,127,127,-214,-215,-216,-217,-218,-219,-220,-221,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-93,127,127,127,127,-106,-105,-112,-114,-116,127,127,127,127,127,-108,-104,127,127,127,127,127,127,-107,127,-103,-101,-102,]),'NEW':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,234,236,237,238,241,243,244,246,247,248,272,283,285,301,305,307,308,309,311,313,318,326,332,334,343,344,345,346,],[132,132,-88,-89,-91,-92,-99,-94,-96,-97,-98,132,132,132,132,132,132,-176,-177,132,-174,-175,-87,-90,-95,132,-113,-115,-117,132,132,132,-214,-215,-216,-217,-218,-219,-220,-221,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-93,132,132,132,132,-106,-105,-112,-114,-116,132,132,132,132,132,-108,-104,132,132,132,132,132,132,-107,132,-103,-101,-102,]),'WHILE':([73,78,79,81,82,83,152,156,157,167,169,171,246,247,248,344,345,346,],[-88,-99,-94,-96,-97,-98,-87,-95,235,-113,-115,-117,-112,-114,-116,-103,-101,-102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,20,]),'TypeDeclarations':([0,3,4,20,],[5,21,22,34,]),'ImportStatement':([0,3,4,20,],[7,7,23,23,]),'TypeDeclarationOptSemi':([0,3,4,5,20,21,22,34,],[8,8,8,24,8,24,24,24,]),'TypeDeclaration':([0,3,4,5,20,21,22,30,34,41,209,278,],[10,10,10,10,10,10,10,50,10,50,50,50,]),'ClassHeader':([0,3,4,5,20,21,22,30,34,41,209,278,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,20,21,22,30,34,41,209,278,],[12,12,12,12,12,12,12,51,12,51,51,51,]),'ClassWord':([0,3,4,5,12,20,21,22,30,34,41,51,209,278,],[13,13,13,13,31,13,13,13,13,13,13,31,13,13,]),'Modifier':([0,3,4,5,12,20,21,22,30,34,41,51,209,278,],[14,14,14,14,32,14,14,14,14,14,14,32,14,14,]),'QualifiedName':([6,9,30,40,41,51,72,85,86,90,97,98,99,106,132,150,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,225,226,236,237,238,241,272,278,283,285,299,301,305,309,311,313,318,326,332,343,],[25,27,59,92,59,59,92,158,164,158,158,158,158,158,59,59,92,158,158,158,158,158,164,158,158,158,158,158,158,158,158,158,158,158,158,59,158,158,158,158,158,158,59,158,158,158,158,158,158,59,158,158,59,158,158,158,158,158,158,158,158,158,]),'SemiColons':([10,25,27,44,71,],[28,35,37,137,151,]),'FieldDeclarations':([30,209,],[41,278,]),'FieldDeclarationOptSemi':([30,41,209,278,],[43,136,43,136,]),'FieldDeclaration':([30,41,209,278,],[44,44,44,44,]),'FieldVariableDeclaration':([30,41,209,278,],[45,45,45,45,]),'MethodDeclaration':([30,41,209,278,],[46,46,46,46,]),'ConstructorDeclaration':([30,41,209,278,],[47,47,47,47,]),'StaticInitializer':([30,41,209,278,],[48,48,48,48,]),'NonStaticInitializer':([30,41,209,278,],[49,49,49,49,]),'TypeSpecifier':([30,40,41,51,72,150,165,209,225,278,299,],[52,77,52,139,77,233,77,52,233,52,233,]),'ConstructorDeclarator':([30,41,51,209,278,],[53,53,140,53,53,]),'Block':([30,40,41,53,55,72,85,140,142,209,218,278,332,343,],[54,83,54,146,147,83,83,219,223,54,223,54,83,83,]),'TypeName':([30,40,41,51,72,132,150,165,209,225,278,299,],[56,56,56,56,56,212,56,56,56,56,56,56,]),'PrimitiveType':([30,40,41,51,72,85,86,90,97,98,99,106,132,150,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,225,226,236,237,238,241,272,278,283,285,299,301,305,309,311,313,318,326,332,343,],[58,91,58,58,91,159,163,159,159,159,159,159,58,58,91,159,159,159,159,159,163,159,159,159,159,159,159,159,159,159,159,159,159,58,159,159,159,159,159,159,58,159,159,159,159,159,159,58,159,159,58,159,159,159,159,159,159,159,159,159,]),'LocalVariableDeclarationsAndStatements':([40,],[72,]),'LocalVariableDeclarationOrStatement':([40,72,],[74,153,]),'LocalVariableDeclarationStatement':([40,72,165,],[75,75,244,]),'Statement':([40,72,85,332,343,],[76,76,157,344,346,]),'EmptyStatement':([40,72,85,332,343,],[79,79,79,79,79,]),'ExpressionStatement':([40,72,85,165,305,309,332,343,],[80,80,80,245,245,335,80,80,]),'IterationStatement':([40,72,85,332,343,],[81,81,81,81,81,]),'JumpStatement':([40,72,85,332,343,],[82,82,82,82,82,]),'Expression':([40,72,85,86,90,165,174,184,187,191,201,208,213,226,241,272,283,285,301,305,309,318,326,332,343,],[84,84,84,160,170,84,253,255,257,258,265,276,288,276,306,276,288,324,330,84,84,276,341,84,84,]),'AssignmentExpression':([40,72,85,86,90,165,174,175,184,187,191,201,208,213,226,241,272,283,285,301,305,309,318,326,332,343,],[93,93,93,93,93,93,93,254,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'ConditionalExpression':([40,72,85,86,90,165,174,175,184,187,191,201,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,336,94,94,94,94,]),'UnaryExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,237,238,241,272,283,285,301,305,309,311,318,326,332,343,],[95,95,95,95,95,186,188,190,195,95,95,95,95,190,95,95,190,190,190,190,95,190,190,190,190,190,190,95,190,190,95,190,190,190,95,190,190,95,95,95,95,95,95,95,190,95,95,95,95,]),'ConditionalOrExpression':([40,72,85,86,90,165,174,175,184,187,191,201,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ArithmeticUnaryOperator':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,237,238,241,272,283,285,301,305,309,311,318,326,332,343,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'CastExpression':([40,72,85,86,90,99,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,237,238,241,272,283,285,301,305,309,311,318,326,332,343,],[100,100,100,100,100,189,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,289,290,291,100,303,304,100,100,100,100,100,100,100,100,100,100,100,100,]),'LogicalUnaryExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,302,101,101,101,101,101,101,101,101,101,101,302,101,101,101,101,]),'ConditionalAndExpression':([40,72,85,86,90,165,174,175,184,185,187,191,201,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[102,102,102,102,102,102,102,102,102,256,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'PostfixExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'LogicalUnaryOperator':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'InclusiveOrExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,201,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[107,107,107,107,107,107,107,107,107,107,107,107,259,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'PrimaryExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'RealPostfixExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'ExclusiveOrExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,201,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[112,112,112,112,112,112,112,112,112,112,112,112,112,260,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'NotJustName':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'AndExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,201,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,262,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'SpecialName':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'NewAllocationExpression':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ComplexPrimary':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'EqualityExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,264,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'PlainNewAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[120,120,120,120,120,120,120,120,120,120,250,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ComplexPrimaryNoParenthesis':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'RelationalExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,202,203,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,266,267,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ArrayAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'ClassAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ArrayAccess':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'FieldAccess':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'MethodCall':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'AdditiveExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,268,269,270,271,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'MethodAccess':([40,72,85,86,90,97,98,99,106,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,214,215,216,226,236,237,238,241,272,283,285,301,305,309,311,313,318,326,332,343,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'MultiplicativeExpression':([40,72,85,86,90,165,174,175,184,185,187,191,192,196,198,200,201,202,203,204,205,206,207,208,210,211,213,226,241,272,283,285,301,305,309,311,318,326,332,343,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,279,280,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'VariableDeclarators':([52,77,139,],[141,154,217,]),'MethodDeclarator':([52,139,],[142,218,]),'VariableDeclarator':([52,77,139,220,],[143,143,143,293,]),'DeclaratorName':([52,77,139,220,233,],[144,155,144,155,300,]),'Dims':([56,163,164,212,281,],[148,239,240,282,320,]),'PrimitiveTypeExpression':([86,191,],[161,161,]),'ClassTypeExpression':([86,191,],[162,162,]),'AssignmentOperator':([95,],[175,]),'MethodBody':([142,218,],[221,292,]),'ParameterList':([150,225,],[230,294,]),'Parameter':([150,225,299,],[232,232,329,]),'ForInit':([165,],[241,]),'ExpressionStatements':([165,305,],[242,333,]),'ArrayInitializers':([208,272,],[274,316,]),'VariableInitializer':([208,226,272,318,],[275,296,275,338,]),'DimExprs':([212,],[281,]),'DimExpr':([212,281,],[284,321,]),'ArgumentList':([213,283,],[286,322,]),'ForExpr':([241,],[305,]),'ForIncr':([305,],[331,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','dowhile_yacc.py',79),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','dowhile_yacc.py',80),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','dowhile_yacc.py',90),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','dowhile_yacc.py',91),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',96),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',97),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',98),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',99),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',100),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',101),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',102),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',103),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',104),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','dowhile_yacc.py',109),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','dowhile_yacc.py',110),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','dowhile_yacc.py',118),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','dowhile_yacc.py',127),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',128),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',129),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',130),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',131),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',132),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',133),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','dowhile_yacc.py',139),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','dowhile_yacc.py',144),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','dowhile_yacc.py',145),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','dowhile_yacc.py',151),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','dowhile_yacc.py',152),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','dowhile_yacc.py',158),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','dowhile_yacc.py',159),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','dowhile_yacc.py',164),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','dowhile_yacc.py',165),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','dowhile_yacc.py',173),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','dowhile_yacc.py',174),
  ('TypeDeclaration -> ClassHeader { FieldDeclarations }','TypeDeclaration',4,'p_TypeDeclaration','dowhile_yacc.py',182),
  ('TypeDeclaration -> ClassHeader { }','TypeDeclaration',3,'p_TypeDeclaration','dowhile_yacc.py',183),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','dowhile_yacc.py',193),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','dowhile_yacc.py',194),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','dowhile_yacc.py',211),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','dowhile_yacc.py',212),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','dowhile_yacc.py',218),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','dowhile_yacc.py',219),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','dowhile_yacc.py',220),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','dowhile_yacc.py',221),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','dowhile_yacc.py',228),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','dowhile_yacc.py',234),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','dowhile_yacc.py',235),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','dowhile_yacc.py',240),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','dowhile_yacc.py',241),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','dowhile_yacc.py',247),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',248),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',249),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',250),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',251),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',252),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','dowhile_yacc.py',260),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','dowhile_yacc.py',261),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','dowhile_yacc.py',282),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','dowhile_yacc.py',283),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','dowhile_yacc.py',291),
  ('VariableDeclarator -> DeclaratorName = VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','dowhile_yacc.py',292),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','dowhile_yacc.py',302),
  ('VariableInitializer -> { }','VariableInitializer',2,'p_VariableInitializer','dowhile_yacc.py',303),
  ('VariableInitializer -> { ArrayInitializers }','VariableInitializer',3,'p_VariableInitializer','dowhile_yacc.py',304),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','dowhile_yacc.py',317),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','dowhile_yacc.py',318),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','dowhile_yacc.py',319),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','dowhile_yacc.py',329),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','dowhile_yacc.py',330),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','dowhile_yacc.py',347),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','dowhile_yacc.py',348),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','dowhile_yacc.py',349),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','dowhile_yacc.py',362),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','dowhile_yacc.py',363),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','dowhile_yacc.py',368),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','dowhile_yacc.py',376),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','dowhile_yacc.py',377),
  ('DeclaratorName -> DeclaratorName [ NUM_LITERAL ]','DeclaratorName',4,'p_DeclaratorName','dowhile_yacc.py',378),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','dowhile_yacc.py',389),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','dowhile_yacc.py',390),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','dowhile_yacc.py',397),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','dowhile_yacc.py',398),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','dowhile_yacc.py',411),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','dowhile_yacc.py',412),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','dowhile_yacc.py',424),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','dowhile_yacc.py',429),
  ('Block -> { LocalVariableDeclarationsAndStatements }','Block',3,'p_Block','dowhile_yacc.py',434),
  ('Block -> { }','Block',2,'p_Block','dowhile_yacc.py',435),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','dowhile_yacc.py',443),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','dowhile_yacc.py',444),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','dowhile_yacc.py',452),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','dowhile_yacc.py',453),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','dowhile_yacc.py',458),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','dowhile_yacc.py',469),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','dowhile_yacc.py',470),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','dowhile_yacc.py',471),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','dowhile_yacc.py',472),
  ('Statement -> Block','Statement',1,'p_Statement','dowhile_yacc.py',473),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','dowhile_yacc.py',478),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','dowhile_yacc.py',483),
  ('IterationStatement -> DO Statement WHILE ( Expression ) ;','IterationStatement',7,'p_IterationStatement','dowhile_yacc.py',488),
  ('IterationStatement -> FOR ( ForInit ForExpr ForIncr ) Statement','IterationStatement',7,'p_IterationStatement','dowhile_yacc.py',489),
  ('IterationStatement -> FOR ( ForInit ForExpr ) Statement','IterationStatement',6,'p_IterationStatement','dowhile_yacc.py',490),
  ('ForInit -> ExpressionStatements ;','ForInit',2,'p_ForInit','dowhile_yacc.py',499),
  ('ForInit -> LocalVariableDeclarationStatement','ForInit',1,'p_ForInit','dowhile_yacc.py',500),
  ('ForInit -> ;','ForInit',1,'p_ForInit','dowhile_yacc.py',501),
  ('ForExpr -> Expression ;','ForExpr',2,'p_ForExpr','dowhile_yacc.py',511),
  ('ForExpr -> ;','ForExpr',1,'p_ForExpr','dowhile_yacc.py',512),
  ('ForIncr -> ExpressionStatements','ForIncr',1,'p_ForIncr','dowhile_yacc.py',521),
  ('ExpressionStatements -> ExpressionStatement','ExpressionStatements',1,'p_ExpressionStatements','dowhile_yacc.py',525),
  ('ExpressionStatements -> ExpressionStatements , ExpressionStatement','ExpressionStatements',3,'p_ExpressionStatements','dowhile_yacc.py',526),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',534),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',535),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',536),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',537),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',538),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',539),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','dowhile_yacc.py',547),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','dowhile_yacc.py',548),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','dowhile_yacc.py',553),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','dowhile_yacc.py',554),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','dowhile_yacc.py',555),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','dowhile_yacc.py',560),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','dowhile_yacc.py',561),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',569),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',570),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',571),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',572),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',573),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',574),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','dowhile_yacc.py',589),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','dowhile_yacc.py',590),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',595),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',596),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',597),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',598),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',599),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','dowhile_yacc.py',604),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','dowhile_yacc.py',605),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',612),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',613),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',614),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','dowhile_yacc.py',619),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','dowhile_yacc.py',624),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','dowhile_yacc.py',625),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','dowhile_yacc.py',633),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','dowhile_yacc.py',634),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','dowhile_yacc.py',639),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','dowhile_yacc.py',640),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','dowhile_yacc.py',641),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','dowhile_yacc.py',642),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { ArrayInitializers }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','dowhile_yacc.py',643),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { FieldDeclarations }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','dowhile_yacc.py',644),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','dowhile_yacc.py',649),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','dowhile_yacc.py',650),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','dowhile_yacc.py',655),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','dowhile_yacc.py',656),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','dowhile_yacc.py',657),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','dowhile_yacc.py',662),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','dowhile_yacc.py',663),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','dowhile_yacc.py',671),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','dowhile_yacc.py',676),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','dowhile_yacc.py',677),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','dowhile_yacc.py',685),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','dowhile_yacc.py',686),
  ('RealPostfixExpression -> PostfixExpression OP_INC','RealPostfixExpression',2,'p_RealPostfixExpression','dowhile_yacc.py',691),
  ('RealPostfixExpression -> PostfixExpression OP_DEC','RealPostfixExpression',2,'p_RealPostfixExpression','dowhile_yacc.py',692),
  ('UnaryExpression -> OP_INC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',704),
  ('UnaryExpression -> OP_DEC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',705),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',706),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','dowhile_yacc.py',707),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','dowhile_yacc.py',726),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','dowhile_yacc.py',727),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','dowhile_yacc.py',739),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','dowhile_yacc.py',740),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','dowhile_yacc.py',745),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','dowhile_yacc.py',746),
  ('CastExpression -> UnaryExpression','CastExpression',1,'p_CastExpression','dowhile_yacc.py',751),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',752),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',753),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',754),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','dowhile_yacc.py',759),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','dowhile_yacc.py',760),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','dowhile_yacc.py',765),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','dowhile_yacc.py',770),
  ('MultiplicativeExpression -> MultiplicativeExpression * CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',771),
  ('MultiplicativeExpression -> MultiplicativeExpression / CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',772),
  ('MultiplicativeExpression -> MultiplicativeExpression % CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',773),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','dowhile_yacc.py',789),
  ('AdditiveExpression -> AdditiveExpression + MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','dowhile_yacc.py',790),
  ('AdditiveExpression -> AdditiveExpression - MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','dowhile_yacc.py',791),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','dowhile_yacc.py',804),
  ('RelationalExpression -> RelationalExpression < AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',805),
  ('RelationalExpression -> RelationalExpression > AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',806),
  ('RelationalExpression -> RelationalExpression OP_LE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',807),
  ('RelationalExpression -> RelationalExpression OP_GE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',808),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','dowhile_yacc.py',826),
  ('EqualityExpression -> EqualityExpression OP_EQ RelationalExpression','EqualityExpression',3,'p_EqualityExpression','dowhile_yacc.py',827),
  ('EqualityExpression -> EqualityExpression OP_NE RelationalExpression','EqualityExpression',3,'p_EqualityExpression','dowhile_yacc.py',828),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','dowhile_yacc.py',842),
  ('AndExpression -> AndExpression & EqualityExpression','AndExpression',3,'p_AndExpression','dowhile_yacc.py',843),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','dowhile_yacc.py',854),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','dowhile_yacc.py',855),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','dowhile_yacc.py',866),
  ('InclusiveOrExpression -> InclusiveOrExpression | ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','dowhile_yacc.py',867),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','dowhile_yacc.py',878),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','dowhile_yacc.py',879),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','dowhile_yacc.py',890),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','dowhile_yacc.py',891),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','dowhile_yacc.py',902),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','dowhile_yacc.py',903),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','dowhile_yacc.py',911),
  ('AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression','AssignmentExpression',3,'p_AssignmentExpression','dowhile_yacc.py',912),
  ('AssignmentOperator -> =','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',940),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',941),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',942),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',943),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',944),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',945),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',946),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',947),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','dowhile_yacc.py',954),
]
