
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitBOOLEAN BREAK BYTE CHAR CLASS CONTINUE DO DOUBLE FLOAT IMPORT INT LONG NEW PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VOID WHILE OP_INC OP_DEC OP_DIM OP_GE OP_LE OP_EQ OP_NE OP_LAND OP_LOR ASS_MUL ASS_DIV ASS_MOD ASS_ADD ASS_SUB ASS_OR ASS_AND IDENTIFIER LITERAL BOOLLIT NUM_LITERALTypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' FieldDeclarations '}'\n    | ClassHeader '{' '}'\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n        | NonStaticInitializer\n        | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName '=' VariableInitializer\n    VariableInitializer : Expression\n    | '{' '}'\n        | '{' ArrayInitializers '}'\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' LocalVariableDeclarationsAndStatements '}'\n    | '{' '}'\n    LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n        | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO Statement WHILE '(' Expression ')' ';'\n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n        | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName\n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' '}'\n        | ClassAllocationExpression '{' '}'\n        | ArrayAllocationExpression '{' ArrayInitializers '}'\n        | ClassAllocationExpression '{' FieldDeclarations '}'\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n        | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC\n    | PostfixExpression OP_DEC\n    UnaryExpression : OP_INC UnaryExpression\n    | OP_DEC UnaryExpression\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n        | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression\n    | MultiplicativeExpression '*' CastExpression\n    | MultiplicativeExpression '/' CastExpression\n    | MultiplicativeExpression '%' CastExpression\n    AdditiveExpression : MultiplicativeExpression\n        | AdditiveExpression '+' MultiplicativeExpression\n    | AdditiveExpression '-' MultiplicativeExpression\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' AdditiveExpression\n    | RelationalExpression '>' AdditiveExpression\n    | RelationalExpression OP_LE AdditiveExpression\n    | RelationalExpression OP_GE AdditiveExpression\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ RelationalExpression\n        | EqualityExpression OP_NE RelationalExpression\n    AndExpression : EqualityExpression\n        | AndExpression '&' EqualityExpression\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' AndExpression\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' ExclusiveOrExpression\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND InclusiveOrExpression\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR ConditionalAndExpression\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression AssignmentOperator AssignmentExpression\n    AssignmentOperator : '='\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,20,23,29,35,37,39,150,],[9,9,9,-29,9,-30,-14,-24,-31,-15,-32,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,134,135,136,137,145,146,150,151,170,171,207,217,219,221,222,270,284,],[15,15,15,15,-29,-25,-27,15,-39,-41,-42,-43,-44,15,15,15,-30,-26,-28,-14,15,-40,15,-24,-31,-15,15,-36,-46,-48,-51,-52,-53,-54,-55,15,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,241,244,15,-80,-69,-78,-79,15,-68,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,134,135,136,137,145,146,150,151,207,217,219,221,222,270,284,],[16,16,16,16,-29,-25,-27,16,-39,-41,-42,-43,-44,16,16,16,-30,-26,-28,-14,16,-40,16,-24,-31,-15,16,-36,-46,-48,-51,-52,-53,-54,-55,16,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,16,-80,-69,-78,-79,16,-68,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,134,135,136,137,145,146,150,151,207,217,219,221,222,270,284,],[17,17,17,17,-29,-25,-27,17,-39,-41,-42,-43,-44,17,17,17,-30,-26,-28,-14,17,-40,17,-24,-31,-15,17,-36,-46,-48,-51,-52,-53,-54,-55,17,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,17,-80,-69,-78,-79,17,-68,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,134,135,136,137,145,146,150,151,207,217,219,221,222,270,284,],[18,18,18,18,-29,-25,-27,18,-39,-41,-42,-43,-44,18,18,18,-30,-26,-28,-14,18,-40,18,-24,-31,-15,18,-36,-46,-48,-51,-52,-53,-54,-55,18,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,18,-80,-69,-78,-79,18,-68,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,134,135,136,137,145,146,150,151,207,217,219,221,222,270,284,],[19,19,19,19,-29,-25,-27,19,-39,-41,-42,-43,-44,19,19,19,-30,-26,-28,-14,55,-40,19,-24,-31,-15,55,-36,-46,-48,-51,-52,-53,-54,-55,19,-85,-44,-87,-35,-47,-49,-50,-81,-84,-32,-86,55,-80,-69,-78,-79,55,-68,]),'$end':([1,2,3,4,5,7,8,10,20,21,22,23,24,28,29,34,35,37,39,42,134,150,],[0,-16,-21,-22,-23,-29,-25,-27,-18,-19,-20,-30,-26,-28,-14,-17,-24,-31,-15,-36,-35,-32,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,26,29,30,31,32,36,38,39,40,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,89,90,91,96,97,98,102,103,105,109,110,131,134,135,136,137,138,145,146,147,148,149,151,152,155,165,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,218,219,221,222,223,224,226,230,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[26,26,33,-39,-45,-41,-42,-43,-44,-33,-14,57,69,-40,70,70,-15,26,57,-36,-46,-48,-51,-52,-53,-54,-55,57,144,-85,-44,-1,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,26,-87,-88,-90,-91,144,-98,-93,-95,-96,-97,26,26,164,166,26,-3,-4,26,26,26,-165,-166,26,-163,-164,26,-35,-47,-49,-50,144,-81,-84,-2,-151,26,-86,-89,-94,-102,-104,-106,70,26,26,-203,-204,-205,-206,-207,-208,-209,-210,26,26,26,26,26,26,253,26,255,26,26,26,26,26,26,26,26,26,57,26,26,26,26,26,26,-80,144,-69,-78,-79,26,26,-152,144,-92,26,26,26,-101,-103,-105,26,57,26,26,-68,26,26,26,26,26,26,-100,]),';':([10,25,26,27,28,29,35,37,39,40,42,44,45,46,47,48,49,50,54,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,87,88,89,91,92,93,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,134,136,137,140,141,142,143,144,145,146,148,150,151,152,153,154,155,157,164,165,166,167,168,169,184,186,187,188,191,192,193,215,216,217,219,220,221,222,225,226,231,233,238,239,240,241,242,243,244,246,248,251,252,253,254,255,256,258,259,260,261,262,263,265,268,269,271,272,273,274,276,279,281,282,283,284,285,287,288,293,294,295,296,298,299,300,301,303,305,306,307,309,311,313,316,317,319,320,322,323,],[29,29,-33,29,39,-14,39,39,-15,78,-36,29,137,-51,-52,-53,-54,-55,-85,-34,29,78,-87,-88,-90,-91,-98,-93,155,-95,-96,-97,-99,78,165,167,169,-107,-211,-201,-167,-199,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-35,39,-50,-57,222,-58,-60,-76,-81,-84,-151,39,-86,-89,231,-60,-94,-107,238,-102,239,-104,240,-106,-157,-158,-159,-167,-155,-156,-162,-56,222,-80,-69,-72,-78,-79,-77,-152,-92,-112,-101,-103,-105,-126,-136,-124,-125,-202,-198,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-62,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-68,-59,-71,-61,-170,-168,-169,-120,-112,-112,-121,-63,-141,-142,-145,-149,-144,-127,-70,-200,-64,-143,-150,323,-100,]),'{':([11,29,30,33,39,40,41,42,43,44,46,47,48,49,50,53,54,55,69,72,73,74,75,76,78,79,81,82,83,85,122,123,134,135,136,137,139,141,145,146,148,151,152,155,165,167,169,206,207,216,217,219,220,221,222,224,226,228,231,238,239,240,264,270,273,274,276,284,287,289,304,306,307,309,313,319,320,323,],[30,-14,40,-38,-15,40,40,-36,-46,-48,-51,-52,-53,-54,-55,40,-85,40,-37,40,-87,-88,-90,-91,-98,-93,-95,-96,-97,40,206,207,-35,-47,-49,-50,40,40,-81,-84,-151,-86,-89,-94,-102,-104,-106,264,40,40,-80,-69,-72,-78,-79,264,-152,-83,-92,-101,-103,-105,264,40,-146,-147,-148,-68,-71,-82,264,-145,-149,-144,-70,-143,-150,-100,]),'BOOLEAN':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,60,-40,-15,60,60,-36,-46,-48,-51,-52,-53,-54,-55,60,-85,-44,60,-87,-88,-90,-91,-98,-93,-95,-96,-97,60,60,60,60,60,60,-165,-166,60,-163,-164,60,-35,-47,-49,-50,-81,-84,60,-86,-89,-94,-102,-104,-106,60,60,-203,-204,-205,-206,-207,-208,-209,-210,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-80,-69,-78,-79,60,60,-92,60,60,60,-101,-103,-105,60,60,60,60,-68,60,60,60,60,60,60,-100,]),'CHAR':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,61,-40,-15,61,61,-36,-46,-48,-51,-52,-53,-54,-55,61,-85,-44,61,-87,-88,-90,-91,-98,-93,-95,-96,-97,61,61,61,61,61,61,-165,-166,61,-163,-164,61,-35,-47,-49,-50,-81,-84,61,-86,-89,-94,-102,-104,-106,61,61,-203,-204,-205,-206,-207,-208,-209,-210,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-80,-69,-78,-79,61,61,-92,61,61,61,-101,-103,-105,61,61,61,61,-68,61,61,61,61,61,61,-100,]),'BYTE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,62,-40,-15,62,62,-36,-46,-48,-51,-52,-53,-54,-55,62,-85,-44,62,-87,-88,-90,-91,-98,-93,-95,-96,-97,62,62,62,62,62,62,-165,-166,62,-163,-164,62,-35,-47,-49,-50,-81,-84,62,-86,-89,-94,-102,-104,-106,62,62,-203,-204,-205,-206,-207,-208,-209,-210,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-80,-69,-78,-79,62,62,-92,62,62,62,-101,-103,-105,62,62,62,62,-68,62,62,62,62,62,62,-100,]),'SHORT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,63,-40,-15,63,63,-36,-46,-48,-51,-52,-53,-54,-55,63,-85,-44,63,-87,-88,-90,-91,-98,-93,-95,-96,-97,63,63,63,63,63,63,-165,-166,63,-163,-164,63,-35,-47,-49,-50,-81,-84,63,-86,-89,-94,-102,-104,-106,63,63,-203,-204,-205,-206,-207,-208,-209,-210,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-80,-69,-78,-79,63,63,-92,63,63,63,-101,-103,-105,63,63,63,63,-68,63,63,63,63,63,63,-100,]),'INT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,64,-40,-15,64,64,-36,-46,-48,-51,-52,-53,-54,-55,64,-85,-44,64,-87,-88,-90,-91,-98,-93,-95,-96,-97,64,64,64,64,64,64,-165,-166,64,-163,-164,64,-35,-47,-49,-50,-81,-84,64,-86,-89,-94,-102,-104,-106,64,64,-203,-204,-205,-206,-207,-208,-209,-210,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-80,-69,-78,-79,64,64,-92,64,64,64,-101,-103,-105,64,64,64,64,-68,64,64,64,64,64,64,-100,]),'LONG':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,65,-40,-15,65,65,-36,-46,-48,-51,-52,-53,-54,-55,65,-85,-44,65,-87,-88,-90,-91,-98,-93,-95,-96,-97,65,65,65,65,65,65,-165,-166,65,-163,-164,65,-35,-47,-49,-50,-81,-84,65,-86,-89,-94,-102,-104,-106,65,65,-203,-204,-205,-206,-207,-208,-209,-210,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-80,-69,-78,-79,65,65,-92,65,65,65,-101,-103,-105,65,65,65,65,-68,65,65,65,65,65,65,-100,]),'FLOAT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,66,-40,-15,66,66,-36,-46,-48,-51,-52,-53,-54,-55,66,-85,-44,66,-87,-88,-90,-91,-98,-93,-95,-96,-97,66,66,66,66,66,66,-165,-166,66,-163,-164,66,-35,-47,-49,-50,-81,-84,66,-86,-89,-94,-102,-104,-106,66,66,-203,-204,-205,-206,-207,-208,-209,-210,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-80,-69,-78,-79,66,66,-92,66,66,66,-101,-103,-105,66,66,66,66,-68,66,66,66,66,66,66,-100,]),'DOUBLE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,67,-40,-15,67,67,-36,-46,-48,-51,-52,-53,-54,-55,67,-85,-44,67,-87,-88,-90,-91,-98,-93,-95,-96,-97,67,67,67,67,67,67,-165,-166,67,-163,-164,67,-35,-47,-49,-50,-81,-84,67,-86,-89,-94,-102,-104,-106,67,67,-203,-204,-205,-206,-207,-208,-209,-210,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-80,-69,-78,-79,67,67,-92,67,67,67,-101,-103,-105,67,67,67,67,-68,67,67,67,67,67,67,-100,]),'VOID':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,131,134,135,136,137,145,146,149,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,217,219,221,222,223,224,231,233,234,235,238,239,240,264,270,275,277,284,290,292,297,299,304,312,323,],[-39,-41,-42,-43,-44,-14,68,-40,-15,68,68,-36,-46,-48,-51,-52,-53,-54,-55,68,-85,-44,68,-87,-88,-90,-91,-98,-93,-95,-96,-97,68,68,68,68,68,68,-165,-166,68,-163,-164,68,-35,-47,-49,-50,-81,-84,68,-86,-89,-94,-102,-104,-106,68,68,-203,-204,-205,-206,-207,-208,-209,-210,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-80,-69,-78,-79,68,68,-92,68,68,68,-101,-103,-105,68,68,68,68,-68,68,68,68,68,68,68,-100,]),'.':([25,26,27,57,59,60,61,62,63,64,65,66,67,68,70,90,91,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,158,162,163,191,192,226,233,241,242,243,244,253,255,265,269,273,274,276,279,296,298,299,300,303,305,306,307,309,311,319,320,],[36,-33,38,-33,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,170,171,195,197,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,171,170,170,171,-155,-156,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'[':([26,58,59,60,61,62,63,64,65,66,67,68,70,91,116,120,124,125,126,127,128,129,157,163,210,233,241,243,244,253,255,273,276,279,296,298,299,300,307,311,320,],[-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,172,199,-113,-114,-115,-116,-117,-118,-119,172,172,277,-112,-126,-124,-125,-123,-122,277,-148,-128,-120,-112,-112,-121,-149,-127,-150,]),'OP_DIM':([26,56,57,58,59,60,61,62,63,64,65,66,67,68,70,90,91,141,143,144,147,148,154,162,163,210,216,220,225,226,236,237,273,274,276,287,291,306,307,313,320,],[-33,148,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-3,-4,220,225,-76,226,-151,225,148,148,148,220,-72,-77,-152,226,226,148,226,-148,-71,225,226,-149,-70,-150,]),'OP_INC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,89,91,96,97,98,102,103,104,105,107,108,109,110,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,151,152,155,157,163,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,191,192,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,226,231,233,234,235,238,239,240,241,242,243,244,253,255,264,265,269,273,274,275,276,277,279,292,296,297,298,299,300,303,304,305,306,307,309,311,312,319,320,323,],[-33,96,-34,96,-87,-88,-90,-91,-98,-93,-95,-96,-97,96,96,96,-107,96,96,96,-165,-166,191,96,-153,-154,-163,-164,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-86,-89,-94,-107,-107,-102,-104,-106,96,96,-203,-204,-205,-206,-207,-208,-209,-210,96,96,96,96,96,-155,-156,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-152,-92,-112,96,96,-101,-103,-105,-126,-136,-124,-125,-123,-122,96,-139,-140,-146,-147,96,-148,96,-128,96,-120,96,-112,-112,-121,-141,96,-142,-145,-149,-144,-127,96,-143,-150,-100,]),'OP_DEC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,89,91,96,97,98,102,103,104,105,107,108,109,110,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,151,152,155,157,163,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,191,192,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,226,231,233,234,235,238,239,240,241,242,243,244,253,255,264,265,269,273,274,275,276,277,279,292,296,297,298,299,300,303,304,305,306,307,309,311,312,319,320,323,],[-33,97,-34,97,-87,-88,-90,-91,-98,-93,-95,-96,-97,97,97,97,-107,97,97,97,-165,-166,192,97,-153,-154,-163,-164,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-86,-89,-94,-107,-107,-102,-104,-106,97,97,-203,-204,-205,-206,-207,-208,-209,-210,97,97,97,97,97,-155,-156,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-152,-92,-112,97,97,-101,-103,-105,-126,-136,-124,-125,-123,-122,97,-139,-140,-146,-147,97,-148,97,-128,97,-120,97,-112,-112,-121,-141,97,-142,-145,-149,-144,-127,97,-143,-150,-100,]),'=':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,143,144,148,154,157,163,184,186,187,188,191,192,193,225,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,224,-76,-151,224,-107,-107,-157,-158,-159,-167,-155,-156,-162,-77,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'ASS_MUL':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,175,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'ASS_DIV':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,176,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'ASS_MOD':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,177,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'ASS_ADD':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,178,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'ASS_SUB':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,179,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'ASS_AND':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,180,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'ASS_OR':([26,70,91,94,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,273,274,276,279,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,181,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,-146,-147,-148,-128,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'*':([26,38,70,91,94,99,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,71,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,212,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,212,212,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'/':([26,70,91,94,99,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,213,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,213,213,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'%':([26,70,91,94,99,100,104,107,108,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,214,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,-139,-140,214,214,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'+':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,89,91,94,96,97,98,99,100,102,103,104,105,107,108,109,110,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,133,148,151,152,155,157,163,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,226,231,233,234,235,238,239,240,241,242,243,244,253,255,260,261,262,263,264,265,269,271,272,273,274,275,276,277,279,281,282,283,292,293,294,295,296,297,298,299,300,303,304,305,306,307,309,311,312,319,320,323,],[-33,102,-34,102,-87,-88,-90,-91,-98,-93,-95,-96,-97,102,102,102,-107,-167,102,102,102,-174,-160,-165,-166,-161,102,-153,-154,-163,-164,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,208,-178,-151,-86,-89,-94,-107,-107,-102,-104,-106,102,102,-203,-204,-205,-206,-207,-208,-209,-210,102,102,-157,102,-158,-159,-167,102,102,-155,-156,-162,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-152,-92,-112,102,102,-101,-103,-105,-126,-136,-124,-125,-123,-122,208,208,208,208,102,-139,-140,-179,-180,-146,-147,102,-148,102,-128,-175,-176,-177,102,-170,-168,-169,-120,102,-112,-112,-121,-141,102,-142,-145,-149,-144,-127,102,-143,-150,-100,]),'-':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,89,91,94,96,97,98,99,100,102,103,104,105,107,108,109,110,112,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,133,148,151,152,155,157,163,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,226,231,233,234,235,238,239,240,241,242,243,244,253,255,260,261,262,263,264,265,269,271,272,273,274,275,276,277,279,281,282,283,292,293,294,295,296,297,298,299,300,303,304,305,306,307,309,311,312,319,320,323,],[-33,103,-34,103,-87,-88,-90,-91,-98,-93,-95,-96,-97,103,103,103,-107,-167,103,103,103,-174,-160,-165,-166,-161,103,-153,-154,-163,-164,-108,-109,-110,-111,-132,-135,-113,-137,-138,-114,-115,-116,-117,-118,-119,209,-178,-151,-86,-89,-94,-107,-107,-102,-104,-106,103,103,-203,-204,-205,-206,-207,-208,-209,-210,103,103,-157,103,-158,-159,-167,103,103,-155,-156,-162,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-152,-92,-112,103,103,-101,-103,-105,-126,-136,-124,-125,-123,-122,209,209,209,209,103,-139,-140,-179,-180,-146,-147,103,-148,103,-128,-175,-176,-177,103,-170,-168,-169,-120,103,-112,-112,-121,-141,103,-142,-145,-149,-144,-127,103,-143,-150,-100,]),'<':([26,70,91,94,99,100,104,107,108,112,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,202,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,202,202,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'>':([26,70,91,94,99,100,104,107,108,112,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,203,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,203,203,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'OP_LE':([26,70,91,94,99,100,104,107,108,112,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,204,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,204,204,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'OP_GE':([26,70,91,94,99,100,104,107,108,112,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,-132,-135,-113,205,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,205,205,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'OP_EQ':([26,70,91,94,99,100,104,107,108,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,200,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,200,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'OP_NE':([26,70,91,94,99,100,104,107,108,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,-109,-110,-111,201,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,-122,201,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'&':([26,70,91,94,99,100,104,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,-108,198,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-123,198,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'^':([26,70,91,94,99,100,104,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,252,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,-153,-154,196,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,196,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'|':([26,70,91,94,99,100,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,251,252,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,-161,194,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,194,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'OP_LAND':([26,70,91,94,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,248,251,252,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,-174,-160,190,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,190,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'?':([26,70,91,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,248,251,252,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,182,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-198,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'OP_LOR':([26,70,91,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,163,184,186,187,188,191,192,193,226,233,241,242,243,244,248,251,252,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,319,320,],[-33,-34,-107,-167,183,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-198,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-143,-150,]),'(':([26,40,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,78,79,81,82,83,85,86,89,91,96,97,98,102,103,105,109,110,114,118,120,124,125,126,127,128,129,132,143,144,151,152,155,157,163,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,224,225,231,232,233,234,235,238,239,240,241,243,244,253,255,264,275,277,279,292,296,297,299,300,304,311,312,323,],[-33,86,149,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,86,-87,-88,-90,-91,-98,-93,-95,-96,-97,86,86,86,-131,185,185,189,-165,-166,185,-163,-164,-130,-132,-129,-114,-115,-116,-117,-118,-119,211,223,-76,-86,-89,-94,-131,-131,-102,-104,-106,86,86,-203,-204,-205,-206,-207,-208,-209,-210,86,189,86,86,189,189,189,189,86,189,189,189,189,189,189,86,189,189,275,86,189,189,189,86,-77,-92,292,185,189,189,-101,-103,-105,-126,-124,-125,-123,-122,86,86,86,-128,86,-120,189,185,-121,86,-127,86,-100,]),')':([26,60,61,62,63,64,65,66,67,68,70,92,93,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,144,148,149,157,159,160,161,162,163,184,186,187,188,191,192,193,211,223,225,226,227,229,233,236,237,241,242,243,244,246,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,275,276,278,279,280,281,282,283,286,291,293,294,295,296,298,299,300,303,305,306,307,308,309,311,314,315,316,319,320,321,],[-33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-34,-211,-201,-167,-199,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-76,-151,228,-107,233,234,235,-171,-107,-157,-158,-159,-167,-155,-156,-162,279,287,-77,-152,289,-73,-112,-172,-173,-126,-136,-124,-125,-202,-198,298,299,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,309,-148,311,-128,-133,-175,-176,-177,313,-75,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,319,-144,-127,-74,322,-200,-143,-150,-134,]),']':([26,70,92,93,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,184,186,187,188,191,192,193,226,233,241,242,243,244,245,246,248,251,252,253,254,255,256,257,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,310,311,316,319,320,],[-33,-34,-211,-201,-167,-199,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,296,-202,-198,-196,-194,-123,-192,-122,-190,300,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,320,-127,-200,-143,-150,]),':':([26,70,92,93,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,148,157,184,186,187,188,191,192,193,226,233,241,242,243,244,246,247,248,251,252,253,254,255,256,258,259,260,261,262,263,265,269,271,272,273,274,276,279,281,282,283,293,294,295,296,298,299,300,303,305,306,307,309,311,316,319,320,],[-33,-34,-211,-201,-167,-199,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-151,-107,-157,-158,-159,-167,-155,-156,-162,-152,-112,-126,-136,-124,-125,-202,297,-198,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,-140,-179,-180,-146,-147,-148,-128,-175,-176,-177,-170,-168,-169,-120,-112,-112,-121,-141,-142,-145,-149,-144,-127,-200,-143,-150,]),'}':([26,29,30,39,40,41,42,43,44,46,47,48,49,50,54,70,72,73,74,75,76,78,79,81,82,83,92,93,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,134,135,136,137,145,146,148,151,152,155,157,165,167,169,184,186,187,188,191,192,193,206,207,217,219,221,222,226,231,233,238,239,240,241,242,243,244,246,248,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,279,281,282,283,284,293,294,295,296,298,299,300,301,302,303,304,305,306,307,309,311,316,317,318,319,320,323,],[-33,-14,42,-15,73,134,-36,-46,-48,-51,-52,-53,-54,-55,-85,-34,151,-87,-88,-90,-91,-98,-93,-95,-96,-97,-211,-201,-167,-199,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,-35,-47,-49,-50,-81,-84,-151,-86,-89,-94,-107,-102,-104,-106,-157,-158,-159,-167,-155,-156,-162,265,269,-80,-69,-78,-79,-152,-92,-112,-101,-103,-105,-126,-136,-124,-125,-202,-198,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,301,-139,303,-65,-62,-140,305,-179,-180,-146,-147,-148,-128,-175,-176,-177,-68,-170,-168,-169,-120,-112,-112,-121,-63,317,-141,-67,-142,-145,-149,-144,-127,-200,-64,-66,-143,-150,-100,]),',':([26,70,92,93,94,95,99,100,101,104,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,140,142,143,144,148,153,154,157,184,186,187,188,191,192,193,215,225,226,227,229,233,241,242,243,244,246,248,251,252,253,254,255,256,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,276,278,279,280,281,282,283,285,286,288,291,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,311,314,316,317,318,319,320,321,],[-33,-34,-211,-201,-167,-199,-174,-160,-197,-161,-195,-153,-154,-193,-108,-191,-109,-110,-111,-189,-132,-135,-113,-186,-137,-138,-114,-115,-116,-117,-118,-119,-181,-178,218,-58,-60,-76,-151,218,-60,-107,-157,-158,-159,-167,-155,-156,-162,218,-77,-152,290,-73,-112,-126,-136,-124,-125,-202,-198,-196,-194,-123,-192,-122,-190,-187,-188,-182,-183,-184,-185,-139,304,-65,-62,-140,-179,-180,-146,-147,-148,312,-128,-133,-175,-176,-177,-59,290,-61,-75,-170,-168,-169,-120,-112,-112,-121,-63,304,-141,-67,-142,-145,-149,312,-144,-127,-74,-200,-64,-66,-143,-150,-134,]),'DO':([40,72,73,74,75,76,78,79,81,82,83,85,151,152,155,165,167,169,231,238,239,240,323,],[85,85,-87,-88,-90,-91,-98,-93,-95,-96,-97,85,-86,-89,-94,-102,-104,-106,-92,-101,-103,-105,-100,]),'BREAK':([40,72,73,74,75,76,78,79,81,82,83,85,151,152,155,165,167,169,231,238,239,240,323,],[87,87,-87,-88,-90,-91,-98,-93,-95,-96,-97,87,-86,-89,-94,-102,-104,-106,-92,-101,-103,-105,-100,]),'CONTINUE':([40,72,73,74,75,76,78,79,81,82,83,85,151,152,155,165,167,169,231,238,239,240,323,],[88,88,-87,-88,-90,-91,-98,-93,-95,-96,-97,88,-86,-89,-94,-102,-104,-106,-92,-101,-103,-105,-100,]),'RETURN':([40,72,73,74,75,76,78,79,81,82,83,85,151,152,155,165,167,169,231,238,239,240,323,],[89,89,-87,-88,-90,-91,-98,-93,-95,-96,-97,89,-86,-89,-94,-102,-104,-106,-92,-101,-103,-105,-100,]),'~':([40,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,231,233,234,235,238,239,240,264,275,277,292,297,299,304,312,323,],[109,109,-87,-88,-90,-91,-98,-93,-95,-96,-97,109,109,109,109,109,109,-165,-166,109,-163,-164,-86,-89,-94,-102,-104,-106,109,109,-203,-204,-205,-206,-207,-208,-209,-210,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-92,109,109,109,-101,-103,-105,109,109,109,109,109,109,109,109,-100,]),'!':([40,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,231,233,234,235,238,239,240,264,275,277,292,297,299,304,312,323,],[110,110,-87,-88,-90,-91,-98,-93,-95,-96,-97,110,110,110,110,110,110,-165,-166,110,-163,-164,-86,-89,-94,-102,-104,-106,110,110,-203,-204,-205,-206,-207,-208,-209,-210,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-92,110,110,110,-101,-103,-105,110,110,110,110,110,110,110,110,-100,]),'THIS':([40,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,151,152,155,165,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,231,233,234,235,238,239,240,264,275,277,292,297,299,304,312,323,],[118,118,-87,-88,-90,-91,-98,-93,-95,-96,-97,118,118,118,118,118,118,-165,-166,118,-163,-164,-86,-89,-94,-102,-104,-106,243,118,118,-203,-204,-205,-206,-207,-208,-209,-210,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-92,118,118,118,-101,-103,-105,118,118,118,118,118,118,118,118,-100,]),'LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,231,233,234,235,238,239,240,264,275,277,292,297,299,304,312,323,],[124,124,-87,-88,-90,-91,-98,-93,-95,-96,-97,124,124,124,124,124,124,-165,-166,124,-163,-164,-86,-89,-94,-102,-104,-106,124,124,-203,-204,-205,-206,-207,-208,-209,-210,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-92,124,124,124,-101,-103,-105,124,124,124,124,124,124,124,124,-100,]),'NUM_LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,231,233,234,235,238,239,240,264,275,277,292,297,299,304,312,323,],[125,125,-87,-88,-90,-91,-98,-93,-95,-96,-97,125,125,125,125,125,125,-165,-166,125,-163,-164,-86,-89,-94,-102,-104,-106,125,125,-203,-204,-205,-206,-207,-208,-209,-210,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-92,125,125,125,-101,-103,-105,125,125,125,125,125,125,125,125,-100,]),'BOOLLIT':([40,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,151,152,155,165,167,169,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,231,233,234,235,238,239,240,264,275,277,292,297,299,304,312,323,],[126,126,-87,-88,-90,-91,-98,-93,-95,-96,-97,126,126,126,126,126,126,-165,-166,126,-163,-164,-86,-89,-94,-102,-104,-106,126,126,-203,-204,-205,-206,-207,-208,-209,-210,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-92,126,126,126,-101,-103,-105,126,126,126,126,126,126,126,126,-100,]),'NEW':([40,72,73,74,75,76,78,79,81,82,83,85,86,89,96,97,98,102,103,105,109,110,151,152,155,165,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,231,233,234,235,238,239,240,264,275,277,292,297,299,304,312,323,],[131,131,-87,-88,-90,-91,-98,-93,-95,-96,-97,131,131,131,131,131,131,-165,-166,131,-163,-164,-86,-89,-94,-102,-104,-106,131,131,131,-203,-204,-205,-206,-207,-208,-209,-210,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-92,131,131,131,-101,-103,-105,131,131,131,131,131,131,131,131,-100,]),'WHILE':([73,78,79,81,82,83,151,155,156,165,167,169,238,239,240,323,],[-87,-98,-93,-95,-96,-97,-86,-94,232,-102,-104,-106,-101,-103,-105,-100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,20,]),'TypeDeclarations':([0,3,4,20,],[5,21,22,34,]),'ImportStatement':([0,3,4,20,],[7,7,23,23,]),'TypeDeclarationOptSemi':([0,3,4,5,20,21,22,34,],[8,8,8,24,8,24,24,24,]),'TypeDeclaration':([0,3,4,5,20,21,22,30,34,41,207,270,],[10,10,10,10,10,10,10,50,10,50,50,50,]),'ClassHeader':([0,3,4,5,20,21,22,30,34,41,207,270,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,20,21,22,30,34,41,207,270,],[12,12,12,12,12,12,12,51,12,51,51,51,]),'ClassWord':([0,3,4,5,12,20,21,22,30,34,41,51,207,270,],[13,13,13,13,31,13,13,13,13,13,13,31,13,13,]),'Modifier':([0,3,4,5,12,20,21,22,30,34,41,51,207,270,],[14,14,14,14,32,14,14,14,14,14,14,32,14,14,]),'QualifiedName':([6,9,30,40,41,51,72,85,86,89,96,97,98,105,131,149,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,223,224,233,234,235,264,270,275,277,290,292,297,299,304,312,],[25,27,59,91,59,59,91,157,163,157,157,157,157,157,59,59,157,157,157,157,157,163,157,157,157,157,157,157,157,157,157,157,157,157,59,157,157,157,157,157,157,59,157,157,157,157,157,59,157,157,59,157,157,157,157,157,]),'SemiColons':([10,25,27,44,71,],[28,35,37,136,150,]),'FieldDeclarations':([30,207,],[41,270,]),'FieldDeclarationOptSemi':([30,41,207,270,],[43,135,43,135,]),'FieldDeclaration':([30,41,207,270,],[44,44,44,44,]),'FieldVariableDeclaration':([30,41,207,270,],[45,45,45,45,]),'MethodDeclaration':([30,41,207,270,],[46,46,46,46,]),'ConstructorDeclaration':([30,41,207,270,],[47,47,47,47,]),'StaticInitializer':([30,41,207,270,],[48,48,48,48,]),'NonStaticInitializer':([30,41,207,270,],[49,49,49,49,]),'TypeSpecifier':([30,40,41,51,72,149,207,223,270,290,],[52,77,52,138,77,230,52,230,52,230,]),'ConstructorDeclarator':([30,41,51,207,270,],[53,53,139,53,53,]),'Block':([30,40,41,53,55,72,85,139,141,207,216,270,],[54,83,54,145,146,83,83,217,221,54,221,54,]),'TypeName':([30,40,41,51,72,131,149,207,223,270,290,],[56,56,56,56,56,210,56,56,56,56,56,]),'PrimitiveType':([30,40,41,51,72,85,86,89,96,97,98,105,131,149,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,207,208,209,211,212,213,214,223,224,233,234,235,264,270,275,277,290,292,297,299,304,312,],[58,90,58,58,90,158,162,158,158,158,158,158,58,58,158,158,158,158,158,162,158,158,158,158,158,158,158,158,158,158,158,158,58,158,158,158,158,158,158,58,158,158,158,158,158,58,158,158,58,158,158,158,158,158,]),'LocalVariableDeclarationsAndStatements':([40,],[72,]),'LocalVariableDeclarationOrStatement':([40,72,],[74,152,]),'LocalVariableDeclarationStatement':([40,72,],[75,75,]),'Statement':([40,72,85,],[76,76,156,]),'EmptyStatement':([40,72,85,],[79,79,79,]),'ExpressionStatement':([40,72,85,],[80,80,80,]),'IterationStatement':([40,72,85,],[81,81,81,]),'JumpStatement':([40,72,85,],[82,82,82,]),'Expression':([40,72,85,86,89,172,182,185,189,199,206,211,224,264,275,277,292,304,312,],[84,84,84,159,168,245,247,249,250,257,268,280,268,268,280,310,315,268,321,]),'AssignmentExpression':([40,72,85,86,89,172,173,182,185,189,199,206,211,224,264,275,277,292,304,312,],[92,92,92,92,92,92,246,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'ConditionalExpression':([40,72,85,86,89,172,173,182,185,189,199,206,211,224,264,275,277,292,297,304,312,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,316,93,93,]),'UnaryExpression':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,234,235,264,275,277,292,297,304,312,],[94,94,94,94,94,184,186,188,193,94,94,94,188,94,94,188,188,188,188,94,188,188,188,188,188,188,94,188,188,94,188,188,188,94,188,188,94,94,94,94,188,94,94,]),'ConditionalOrExpression':([40,72,85,86,89,172,173,182,185,189,199,206,211,224,264,275,277,292,297,304,312,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'ArithmeticUnaryOperator':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,234,235,264,275,277,292,297,304,312,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'CastExpression':([40,72,85,86,89,98,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,234,235,264,275,277,292,297,304,312,],[99,99,99,99,99,187,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,281,282,283,99,294,295,99,99,99,99,99,99,99,]),'LogicalUnaryExpression':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,293,100,100,100,100,100,100,100,293,100,100,]),'ConditionalAndExpression':([40,72,85,86,89,172,173,182,183,185,189,199,206,211,224,264,275,277,292,297,304,312,],[101,101,101,101,101,101,101,101,248,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'PostfixExpression':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'LogicalUnaryOperator':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'InclusiveOrExpression':([40,72,85,86,89,172,173,182,183,185,189,190,199,206,211,224,264,275,277,292,297,304,312,],[106,106,106,106,106,106,106,106,106,106,106,251,106,106,106,106,106,106,106,106,106,106,106,]),'PrimaryExpression':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'RealPostfixExpression':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'ExclusiveOrExpression':([40,72,85,86,89,172,173,182,183,185,189,190,194,199,206,211,224,264,275,277,292,297,304,312,],[111,111,111,111,111,111,111,111,111,111,111,111,252,111,111,111,111,111,111,111,111,111,111,111,]),'NotJustName':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'AndExpression':([40,72,85,86,89,172,173,182,183,185,189,190,194,196,199,206,211,224,264,275,277,292,297,304,312,],[113,113,113,113,113,113,113,113,113,113,113,113,113,254,113,113,113,113,113,113,113,113,113,113,113,]),'SpecialName':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'NewAllocationExpression':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'ComplexPrimary':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'EqualityExpression':([40,72,85,86,89,172,173,182,183,185,189,190,194,196,198,199,206,211,224,264,275,277,292,297,304,312,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,256,117,117,117,117,117,117,117,117,117,117,117,]),'PlainNewAllocationExpression':([40,72,85,86,89,96,97,98,105,171,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[119,119,119,119,119,119,119,119,119,242,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'ComplexPrimaryNoParenthesis':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'RelationalExpression':([40,72,85,86,89,172,173,182,183,185,189,190,194,196,198,199,200,201,206,211,224,264,275,277,292,297,304,312,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,258,259,121,121,121,121,121,121,121,121,121,121,]),'ArrayAllocationExpression':([40,72,85,86,89,96,97,98,105,171,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ClassAllocationExpression':([40,72,85,86,89,96,97,98,105,171,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'ArrayAccess':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'FieldAccess':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'MethodCall':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'AdditiveExpression':([40,72,85,86,89,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,211,224,264,275,277,292,297,304,312,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,260,261,262,263,130,130,130,130,130,130,130,130,130,130,]),'MethodAccess':([40,72,85,86,89,96,97,98,105,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,212,213,214,224,233,234,235,264,275,277,292,297,299,304,312,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'MultiplicativeExpression':([40,72,85,86,89,172,173,182,183,185,189,190,194,196,198,199,200,201,202,203,204,205,206,208,209,211,224,264,275,277,292,297,304,312,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,271,272,133,133,133,133,133,133,133,133,133,]),'VariableDeclarators':([52,77,138,],[140,153,215,]),'MethodDeclarator':([52,138,],[141,216,]),'VariableDeclarator':([52,77,138,218,],[142,142,142,285,]),'DeclaratorName':([52,77,138,218,230,],[143,154,143,154,291,]),'Dims':([56,162,163,210,273,],[147,236,237,274,306,]),'PrimitiveTypeExpression':([86,189,],[160,160,]),'ClassTypeExpression':([86,189,],[161,161,]),'AssignmentOperator':([94,],[173,]),'MethodBody':([141,216,],[219,284,]),'ParameterList':([149,223,],[227,286,]),'Parameter':([149,223,290,],[229,229,314,]),'ArrayInitializers':([206,264,],[266,302,]),'VariableInitializer':([206,224,264,304,],[267,288,267,318,]),'DimExprs':([210,],[273,]),'DimExpr':([210,273,],[276,307,]),'ArgumentList':([211,275,],[278,308,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','phase2_dowhile.py',290),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','phase2_dowhile.py',291),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','phase2_dowhile.py',296),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','phase2_dowhile.py',297),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',302),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',303),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',304),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',305),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',306),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',307),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',308),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',309),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','phase2_dowhile.py',310),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','phase2_dowhile.py',315),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','phase2_dowhile.py',316),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','phase2_dowhile.py',321),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','phase2_dowhile.py',326),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','phase2_dowhile.py',327),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','phase2_dowhile.py',328),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','phase2_dowhile.py',329),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','phase2_dowhile.py',330),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','phase2_dowhile.py',331),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','phase2_dowhile.py',332),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','phase2_dowhile.py',337),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','phase2_dowhile.py',342),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','phase2_dowhile.py',343),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','phase2_dowhile.py',348),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','phase2_dowhile.py',349),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','phase2_dowhile.py',354),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','phase2_dowhile.py',355),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','phase2_dowhile.py',360),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','phase2_dowhile.py',361),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','phase2_dowhile.py',366),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','phase2_dowhile.py',367),
  ('TypeDeclaration -> ClassHeader { FieldDeclarations }','TypeDeclaration',4,'p_TypeDeclaration','phase2_dowhile.py',372),
  ('TypeDeclaration -> ClassHeader { }','TypeDeclaration',3,'p_TypeDeclaration','phase2_dowhile.py',373),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','phase2_dowhile.py',378),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','phase2_dowhile.py',379),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','phase2_dowhile.py',389),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','phase2_dowhile.py',390),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','phase2_dowhile.py',395),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','phase2_dowhile.py',396),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','phase2_dowhile.py',397),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','phase2_dowhile.py',398),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','phase2_dowhile.py',403),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','phase2_dowhile.py',407),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','phase2_dowhile.py',408),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','phase2_dowhile.py',413),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','phase2_dowhile.py',414),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','phase2_dowhile.py',419),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',420),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',421),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',422),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',423),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','phase2_dowhile.py',424),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','phase2_dowhile.py',429),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','phase2_dowhile.py',430),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','phase2_dowhile.py',452),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','phase2_dowhile.py',453),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','phase2_dowhile.py',459),
  ('VariableDeclarator -> DeclaratorName = VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','phase2_dowhile.py',460),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','phase2_dowhile.py',468),
  ('VariableInitializer -> { }','VariableInitializer',2,'p_VariableInitializer','phase2_dowhile.py',469),
  ('VariableInitializer -> { ArrayInitializers }','VariableInitializer',3,'p_VariableInitializer','phase2_dowhile.py',470),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','phase2_dowhile.py',475),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','phase2_dowhile.py',476),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','phase2_dowhile.py',477),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','phase2_dowhile.py',482),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','phase2_dowhile.py',483),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','phase2_dowhile.py',494),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','phase2_dowhile.py',495),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','phase2_dowhile.py',496),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','phase2_dowhile.py',502),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','phase2_dowhile.py',503),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','phase2_dowhile.py',508),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','phase2_dowhile.py',513),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','phase2_dowhile.py',514),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','phase2_dowhile.py',521),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','phase2_dowhile.py',522),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','phase2_dowhile.py',527),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','phase2_dowhile.py',528),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','phase2_dowhile.py',533),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','phase2_dowhile.py',534),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','phase2_dowhile.py',539),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','phase2_dowhile.py',544),
  ('Block -> { LocalVariableDeclarationsAndStatements }','Block',3,'p_Block','phase2_dowhile.py',549),
  ('Block -> { }','Block',2,'p_Block','phase2_dowhile.py',550),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','phase2_dowhile.py',555),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','phase2_dowhile.py',556),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','phase2_dowhile.py',561),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','phase2_dowhile.py',562),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','phase2_dowhile.py',567),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','phase2_dowhile.py',579),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','phase2_dowhile.py',580),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','phase2_dowhile.py',581),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','phase2_dowhile.py',582),
  ('Statement -> Block','Statement',1,'p_Statement','phase2_dowhile.py',583),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','phase2_dowhile.py',588),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','phase2_dowhile.py',593),
  ('IterationStatement -> DO Statement WHILE ( Expression ) ;','IterationStatement',7,'p_IterationStatement','phase2_dowhile.py',598),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','phase2_dowhile.py',603),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','phase2_dowhile.py',604),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','phase2_dowhile.py',605),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','phase2_dowhile.py',606),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','phase2_dowhile.py',607),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','phase2_dowhile.py',608),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','phase2_dowhile.py',613),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','phase2_dowhile.py',614),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','phase2_dowhile.py',619),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','phase2_dowhile.py',620),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','phase2_dowhile.py',621),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','phase2_dowhile.py',626),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','phase2_dowhile.py',627),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',632),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',633),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',634),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',635),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',636),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','phase2_dowhile.py',637),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','phase2_dowhile.py',642),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','phase2_dowhile.py',643),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',648),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',649),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',650),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',651),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','phase2_dowhile.py',652),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','phase2_dowhile.py',657),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','phase2_dowhile.py',658),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','phase2_dowhile.py',663),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','phase2_dowhile.py',664),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','phase2_dowhile.py',665),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','phase2_dowhile.py',670),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','phase2_dowhile.py',675),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','phase2_dowhile.py',676),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','phase2_dowhile.py',681),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','phase2_dowhile.py',682),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','phase2_dowhile.py',687),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','phase2_dowhile.py',688),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','phase2_dowhile.py',689),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','phase2_dowhile.py',690),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { ArrayInitializers }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','phase2_dowhile.py',691),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { FieldDeclarations }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','phase2_dowhile.py',692),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','phase2_dowhile.py',697),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','phase2_dowhile.py',698),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','phase2_dowhile.py',703),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','phase2_dowhile.py',704),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','phase2_dowhile.py',705),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','phase2_dowhile.py',710),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','phase2_dowhile.py',711),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','phase2_dowhile.py',716),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','phase2_dowhile.py',721),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','phase2_dowhile.py',722),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','phase2_dowhile.py',727),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','phase2_dowhile.py',728),
  ('RealPostfixExpression -> PostfixExpression OP_INC','RealPostfixExpression',2,'p_RealPostfixExpression','phase2_dowhile.py',733),
  ('RealPostfixExpression -> PostfixExpression OP_DEC','RealPostfixExpression',2,'p_RealPostfixExpression','phase2_dowhile.py',734),
  ('UnaryExpression -> OP_INC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','phase2_dowhile.py',739),
  ('UnaryExpression -> OP_DEC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','phase2_dowhile.py',740),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','phase2_dowhile.py',741),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','phase2_dowhile.py',742),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','phase2_dowhile.py',747),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','phase2_dowhile.py',748),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','phase2_dowhile.py',753),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','phase2_dowhile.py',754),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','phase2_dowhile.py',759),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','phase2_dowhile.py',760),
  ('CastExpression -> UnaryExpression','CastExpression',1,'p_CastExpression','phase2_dowhile.py',765),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','phase2_dowhile.py',766),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','phase2_dowhile.py',767),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','phase2_dowhile.py',768),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','phase2_dowhile.py',773),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','phase2_dowhile.py',774),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','phase2_dowhile.py',779),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','phase2_dowhile.py',784),
  ('MultiplicativeExpression -> MultiplicativeExpression * CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','phase2_dowhile.py',785),
  ('MultiplicativeExpression -> MultiplicativeExpression / CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','phase2_dowhile.py',786),
  ('MultiplicativeExpression -> MultiplicativeExpression % CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','phase2_dowhile.py',787),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','phase2_dowhile.py',792),
  ('AdditiveExpression -> AdditiveExpression + MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','phase2_dowhile.py',793),
  ('AdditiveExpression -> AdditiveExpression - MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','phase2_dowhile.py',794),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','phase2_dowhile.py',799),
  ('RelationalExpression -> RelationalExpression < AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',800),
  ('RelationalExpression -> RelationalExpression > AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',801),
  ('RelationalExpression -> RelationalExpression OP_LE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',802),
  ('RelationalExpression -> RelationalExpression OP_GE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','phase2_dowhile.py',803),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','phase2_dowhile.py',808),
  ('EqualityExpression -> EqualityExpression OP_EQ RelationalExpression','EqualityExpression',3,'p_EqualityExpression','phase2_dowhile.py',809),
  ('EqualityExpression -> EqualityExpression OP_NE RelationalExpression','EqualityExpression',3,'p_EqualityExpression','phase2_dowhile.py',810),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','phase2_dowhile.py',815),
  ('AndExpression -> AndExpression & EqualityExpression','AndExpression',3,'p_AndExpression','phase2_dowhile.py',816),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','phase2_dowhile.py',821),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','phase2_dowhile.py',822),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','phase2_dowhile.py',827),
  ('InclusiveOrExpression -> InclusiveOrExpression | ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','phase2_dowhile.py',828),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','phase2_dowhile.py',833),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','phase2_dowhile.py',834),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','phase2_dowhile.py',839),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','phase2_dowhile.py',840),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','phase2_dowhile.py',845),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','phase2_dowhile.py',846),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','phase2_dowhile.py',851),
  ('AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression','AssignmentExpression',3,'p_AssignmentExpression','phase2_dowhile.py',852),
  ('AssignmentOperator -> =','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',857),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',858),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',859),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',860),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',861),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',862),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',863),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','phase2_dowhile.py',864),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','phase2_dowhile.py',870),
]
