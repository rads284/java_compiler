
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitBOOLEAN BREAK BYTE CHAR CLASS CONTINUE DO DOUBLE FLOAT IMPORT INT LONG NEW PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VOID WHILE FOR OP_INC OP_DEC OP_DIM OP_GE OP_LE OP_EQ OP_NE OP_LAND OP_LOR ASS_MUL ASS_DIV ASS_MOD ASS_ADD ASS_SUB ASS_OR ASS_AND IDENTIFIER LITERAL BOOLLIT NUM_LITERALcodegen_prefix :codegen_postfix :codegen_shorthand :codegen_declarator :push :codegen_binop :codegen_assign :TypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' FieldDeclarations '}'\n    | ClassHeader '{' '}'\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    | NonStaticInitializer\n    | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName push '=' VariableInitializer codegen_declarator\n    VariableInitializer : Expression\n    | '{' '}'\n        | '{' ArrayInitializers '}'\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' LocalVariableDeclarationsAndStatements '}'\n    | '{' '}'\n    LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n    | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO Statement WHILE '(' Expression ')' ';'\n    | FOR '(' ForInit codegen_for_init ForExpr codegen_for_expr ForIncr codegen_for_inc ')' Statement codegen_for\n    | FOR '(' ForInit codegen_for_init ForExpr codegen_for_expr ')' Statement codegen_for\n    codegen_for_init :codegen_for_expr :codegen_for_inc :codegen_for :ForInit : ExpressionStatements ';'\n    | LocalVariableDeclarationStatement\n    | ';'\n    ForExpr : Expression ';'\n    | ';'\n    ForIncr : ExpressionStatements ExpressionStatements : ExpressionStatement\n    | ExpressionStatements ',' ExpressionStatement \n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n    | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName \n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' '}'\n        | ClassAllocationExpression '{' '}'\n        | ArrayAllocationExpression '{' ArrayInitializers '}'\n        | ClassAllocationExpression '{' FieldDeclarations '}'\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n    | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC codegen_postfix\n    | PostfixExpression OP_DEC codegen_postfix\n    UnaryExpression : OP_INC UnaryExpression codegen_prefix\n    | OP_DEC UnaryExpression codegen_prefix\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression push\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n        | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression \n    | MultiplicativeExpression '*' push  CastExpression codegen_binop\n    | MultiplicativeExpression '/' push CastExpression codegen_binop\n    | MultiplicativeExpression '%' push CastExpression codegen_binop\n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression '+' push MultiplicativeExpression codegen_binop\n    | AdditiveExpression '-' push MultiplicativeExpression codegen_binop\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' push AdditiveExpression codegen_binop\n    | RelationalExpression '>' push AdditiveExpression codegen_binop\n    | RelationalExpression OP_LE push AdditiveExpression codegen_binop\n    | RelationalExpression OP_GE push AdditiveExpression codegen_binop\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ push RelationalExpression codegen_binop\n        | EqualityExpression OP_NE push RelationalExpression codegen_binop\n    AndExpression : EqualityExpression\n        | AndExpression '&' push EqualityExpression codegen_binop\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' push AndExpression codegen_binop\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' push ExclusiveOrExpression codegen_binop\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND push InclusiveOrExpression codegen_binop\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR push ConditionalAndExpression codegen_binop\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression push '=' ConditionalExpression codegen_assign\n    | UnaryExpression push  AssignmentOperator push AssignmentExpression codegen_shorthand\n    AssignmentOperator : ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,20,23,29,35,37,39,151,],[9,9,9,-36,9,-37,-21,-31,-38,-22,-39,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,172,173,201,211,213,215,216,282,296,],[15,15,15,15,-36,-32,-34,15,-46,-48,-49,-50,-51,15,15,15,-37,-33,-35,-21,15,-47,15,-31,-38,-22,15,-43,-53,-55,-58,-59,-60,-61,-62,15,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,240,243,15,-87,-76,-85,-86,15,-75,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[16,16,16,16,-36,-32,-34,16,-46,-48,-49,-50,-51,16,16,16,-37,-33,-35,-21,16,-47,16,-31,-38,-22,16,-43,-53,-55,-58,-59,-60,-61,-62,16,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,16,-87,-76,-85,-86,16,-75,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[17,17,17,17,-36,-32,-34,17,-46,-48,-49,-50,-51,17,17,17,-37,-33,-35,-21,17,-47,17,-31,-38,-22,17,-43,-53,-55,-58,-59,-60,-61,-62,17,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,17,-87,-76,-85,-86,17,-75,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[18,18,18,18,-36,-32,-34,18,-46,-48,-49,-50,-51,18,18,18,-37,-33,-35,-21,18,-47,18,-31,-38,-22,18,-43,-53,-55,-58,-59,-60,-61,-62,18,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,18,-87,-76,-85,-86,18,-75,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,41,42,43,44,46,47,48,49,50,51,54,55,73,135,136,137,138,146,147,151,152,201,211,213,215,216,282,296,],[19,19,19,19,-36,-32,-34,19,-46,-48,-49,-50,-51,19,19,19,-37,-33,-35,-21,55,-47,19,-31,-38,-22,55,-43,-53,-55,-58,-59,-60,-61,-62,19,-92,-51,-94,-42,-54,-56,-57,-88,-91,-39,-93,55,-87,-76,-85,-86,55,-75,]),'$end':([1,2,3,4,5,7,8,10,20,21,22,23,24,28,29,34,35,37,39,42,135,151,],[0,-23,-28,-29,-30,-36,-32,-34,-25,-26,-27,-37,-33,-35,-21,-24,-31,-38,-22,-43,-42,-39,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,26,29,30,31,32,36,38,39,40,41,42,43,44,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,77,78,79,81,82,83,85,86,88,89,90,91,92,97,98,99,103,104,106,110,111,132,135,136,137,138,139,146,147,148,149,150,152,153,156,165,167,169,171,173,174,176,177,179,183,184,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,212,213,215,216,217,220,224,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[26,26,33,-46,-52,-48,-49,-50,-51,-40,-21,57,69,-47,70,70,-22,26,57,-43,-53,-55,-58,-59,-60,-61,-62,57,145,-92,-51,-8,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,26,-94,-95,-97,-98,145,-105,-100,-102,-103,-104,26,26,166,168,26,-10,-11,26,26,26,-186,-187,26,-184,-185,26,-42,-54,-56,-57,145,-88,-91,-9,-172,26,-93,-96,-101,26,-123,-125,-127,70,26,26,-5,26,26,-5,-5,265,-5,267,-5,26,-5,-5,-5,-5,-5,-5,26,57,-5,-5,26,-5,-5,-5,-87,145,-76,-85,-86,26,-173,145,-99,26,26,26,-110,-116,-115,-122,-124,-126,26,-5,-225,-226,-227,-228,-229,-230,-231,26,26,26,26,26,26,26,26,26,26,26,26,57,26,26,26,26,26,26,26,-75,26,26,26,26,-114,26,26,26,26,26,26,-111,-118,26,-117,-107,26,-113,26,-109,-113,-108,]),';':([10,25,26,27,28,29,35,37,39,40,42,44,45,46,47,48,49,50,54,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,88,89,90,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,138,141,142,143,144,145,146,147,149,151,152,153,154,155,156,158,165,166,167,168,169,170,171,175,178,180,181,182,185,186,187,209,210,211,213,214,215,216,219,220,225,227,232,233,234,235,236,237,238,239,240,241,242,243,256,258,259,262,263,265,267,277,280,281,285,286,288,291,296,297,299,305,306,307,308,309,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,333,334,335,336,337,339,341,343,344,345,346,347,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,375,376,377,378,379,382,383,385,388,389,390,391,392,],[29,29,-40,29,39,-21,39,39,-22,78,-43,29,138,-58,-59,-60,-61,-62,-92,-41,29,78,-94,-95,-97,-98,-105,-100,156,-102,-103,-104,-106,78,167,169,171,-128,-232,-222,-5,-220,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-42,39,-57,-64,216,-65,-67,-83,-88,-91,-172,39,-93,-96,225,-67,-101,-128,234,237,-123,238,-125,239,-127,-188,-1,-1,-180,-5,-2,-2,-183,-63,216,-87,-76,-79,-85,-86,-84,-173,-99,-133,-110,309,-116,-115,-120,-122,-124,-126,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-69,-161,-167,-168,-169,-149,-75,-66,-78,-191,-189,-190,352,-114,-141,-7,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-70,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-77,-4,381,-121,-223,-3,-221,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-71,-200,-201,-164,-171,-196,-197,-198,-68,383,-224,-107,78,-113,78,-109,-113,-108,]),'{':([11,29,30,33,39,40,41,42,43,44,46,47,48,49,50,53,54,55,69,72,73,74,75,76,78,79,81,82,83,85,123,124,135,136,137,138,140,142,146,147,149,152,153,156,167,169,171,200,201,210,211,213,214,215,216,220,222,225,237,238,239,276,282,285,286,288,296,299,300,301,332,336,337,339,346,372,373,383,385,388,389,390,391,392,],[30,-21,40,-45,-22,40,40,-43,-53,-55,-58,-59,-60,-61,-62,40,-92,40,-44,40,-94,-95,-97,-98,-105,-100,-102,-103,-104,40,200,201,-42,-54,-56,-57,40,40,-88,-91,-172,-93,-96,-101,-123,-125,-127,276,40,40,-87,-76,-79,-85,-86,-173,-90,-99,-122,-124,-126,276,40,-167,-168,-169,-75,-78,276,-89,276,-166,-170,-165,-77,-164,-171,-107,40,-113,40,-109,-113,-108,]),'BOOLEAN':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,60,-47,-22,60,60,-43,-53,-55,-58,-59,-60,-61,-62,60,-92,-51,60,-94,-95,-97,-98,-105,-100,-102,-103,-104,60,60,60,60,60,60,-186,-187,60,-184,-185,60,-42,-54,-56,-57,-88,-91,60,-93,-96,-101,60,-123,-125,-127,60,60,-5,60,60,-5,-5,-5,-5,60,-5,-5,-5,-5,-5,-5,60,60,-5,-5,60,-5,-5,-5,-87,-76,-85,-86,60,-99,60,60,60,-110,-116,-115,-122,-124,-126,60,-5,-225,-226,-227,-228,-229,-230,-231,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-75,60,60,60,60,-114,60,60,60,60,60,60,-111,-118,60,-117,-107,60,-113,60,-109,-113,-108,]),'CHAR':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,61,-47,-22,61,61,-43,-53,-55,-58,-59,-60,-61,-62,61,-92,-51,61,-94,-95,-97,-98,-105,-100,-102,-103,-104,61,61,61,61,61,61,-186,-187,61,-184,-185,61,-42,-54,-56,-57,-88,-91,61,-93,-96,-101,61,-123,-125,-127,61,61,-5,61,61,-5,-5,-5,-5,61,-5,-5,-5,-5,-5,-5,61,61,-5,-5,61,-5,-5,-5,-87,-76,-85,-86,61,-99,61,61,61,-110,-116,-115,-122,-124,-126,61,-5,-225,-226,-227,-228,-229,-230,-231,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-75,61,61,61,61,-114,61,61,61,61,61,61,-111,-118,61,-117,-107,61,-113,61,-109,-113,-108,]),'BYTE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,62,-47,-22,62,62,-43,-53,-55,-58,-59,-60,-61,-62,62,-92,-51,62,-94,-95,-97,-98,-105,-100,-102,-103,-104,62,62,62,62,62,62,-186,-187,62,-184,-185,62,-42,-54,-56,-57,-88,-91,62,-93,-96,-101,62,-123,-125,-127,62,62,-5,62,62,-5,-5,-5,-5,62,-5,-5,-5,-5,-5,-5,62,62,-5,-5,62,-5,-5,-5,-87,-76,-85,-86,62,-99,62,62,62,-110,-116,-115,-122,-124,-126,62,-5,-225,-226,-227,-228,-229,-230,-231,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-75,62,62,62,62,-114,62,62,62,62,62,62,-111,-118,62,-117,-107,62,-113,62,-109,-113,-108,]),'SHORT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,63,-47,-22,63,63,-43,-53,-55,-58,-59,-60,-61,-62,63,-92,-51,63,-94,-95,-97,-98,-105,-100,-102,-103,-104,63,63,63,63,63,63,-186,-187,63,-184,-185,63,-42,-54,-56,-57,-88,-91,63,-93,-96,-101,63,-123,-125,-127,63,63,-5,63,63,-5,-5,-5,-5,63,-5,-5,-5,-5,-5,-5,63,63,-5,-5,63,-5,-5,-5,-87,-76,-85,-86,63,-99,63,63,63,-110,-116,-115,-122,-124,-126,63,-5,-225,-226,-227,-228,-229,-230,-231,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-75,63,63,63,63,-114,63,63,63,63,63,63,-111,-118,63,-117,-107,63,-113,63,-109,-113,-108,]),'INT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,64,-47,-22,64,64,-43,-53,-55,-58,-59,-60,-61,-62,64,-92,-51,64,-94,-95,-97,-98,-105,-100,-102,-103,-104,64,64,64,64,64,64,-186,-187,64,-184,-185,64,-42,-54,-56,-57,-88,-91,64,-93,-96,-101,64,-123,-125,-127,64,64,-5,64,64,-5,-5,-5,-5,64,-5,-5,-5,-5,-5,-5,64,64,-5,-5,64,-5,-5,-5,-87,-76,-85,-86,64,-99,64,64,64,-110,-116,-115,-122,-124,-126,64,-5,-225,-226,-227,-228,-229,-230,-231,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-75,64,64,64,64,-114,64,64,64,64,64,64,-111,-118,64,-117,-107,64,-113,64,-109,-113,-108,]),'LONG':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,65,-47,-22,65,65,-43,-53,-55,-58,-59,-60,-61,-62,65,-92,-51,65,-94,-95,-97,-98,-105,-100,-102,-103,-104,65,65,65,65,65,65,-186,-187,65,-184,-185,65,-42,-54,-56,-57,-88,-91,65,-93,-96,-101,65,-123,-125,-127,65,65,-5,65,65,-5,-5,-5,-5,65,-5,-5,-5,-5,-5,-5,65,65,-5,-5,65,-5,-5,-5,-87,-76,-85,-86,65,-99,65,65,65,-110,-116,-115,-122,-124,-126,65,-5,-225,-226,-227,-228,-229,-230,-231,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-75,65,65,65,65,-114,65,65,65,65,65,65,-111,-118,65,-117,-107,65,-113,65,-109,-113,-108,]),'FLOAT':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,66,-47,-22,66,66,-43,-53,-55,-58,-59,-60,-61,-62,66,-92,-51,66,-94,-95,-97,-98,-105,-100,-102,-103,-104,66,66,66,66,66,66,-186,-187,66,-184,-185,66,-42,-54,-56,-57,-88,-91,66,-93,-96,-101,66,-123,-125,-127,66,66,-5,66,66,-5,-5,-5,-5,66,-5,-5,-5,-5,-5,-5,66,66,-5,-5,66,-5,-5,-5,-87,-76,-85,-86,66,-99,66,66,66,-110,-116,-115,-122,-124,-126,66,-5,-225,-226,-227,-228,-229,-230,-231,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-75,66,66,66,66,-114,66,66,66,66,66,66,-111,-118,66,-117,-107,66,-113,66,-109,-113,-108,]),'DOUBLE':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,67,-47,-22,67,67,-43,-53,-55,-58,-59,-60,-61,-62,67,-92,-51,67,-94,-95,-97,-98,-105,-100,-102,-103,-104,67,67,67,67,67,67,-186,-187,67,-184,-185,67,-42,-54,-56,-57,-88,-91,67,-93,-96,-101,67,-123,-125,-127,67,67,-5,67,67,-5,-5,-5,-5,67,-5,-5,-5,-5,-5,-5,67,67,-5,-5,67,-5,-5,-5,-87,-76,-85,-86,67,-99,67,67,67,-110,-116,-115,-122,-124,-126,67,-5,-225,-226,-227,-228,-229,-230,-231,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-75,67,67,67,67,-114,67,67,67,67,67,67,-111,-118,67,-117,-107,67,-113,67,-109,-113,-108,]),'VOID':([14,16,17,18,19,29,30,32,39,40,41,42,43,44,46,47,48,49,50,51,54,55,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,132,135,136,137,138,146,147,150,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,211,213,215,216,217,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,296,300,302,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[-46,-48,-49,-50,-51,-21,68,-47,-22,68,68,-43,-53,-55,-58,-59,-60,-61,-62,68,-92,-51,68,-94,-95,-97,-98,-105,-100,-102,-103,-104,68,68,68,68,68,68,-186,-187,68,-184,-185,68,-42,-54,-56,-57,-88,-91,68,-93,-96,-101,68,-123,-125,-127,68,68,-5,68,68,-5,-5,-5,-5,68,-5,-5,-5,-5,-5,-5,68,68,-5,-5,68,-5,-5,-5,-87,-76,-85,-86,68,-99,68,68,68,-110,-116,-115,-122,-124,-126,68,-5,-225,-226,-227,-228,-229,-230,-231,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-75,68,68,68,68,-114,68,68,68,68,68,68,-111,-118,68,-117,-107,68,-113,68,-109,-113,-108,]),'.':([25,26,27,57,59,60,61,62,63,64,65,66,67,68,70,91,92,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,159,163,164,185,186,220,227,240,241,242,243,262,263,265,267,277,281,285,286,288,291,311,316,317,322,331,333,336,337,339,341,372,373,],[36,-40,38,-40,36,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,172,173,189,191,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,173,172,172,173,-2,-2,-173,-133,-147,-157,-145,-146,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'[':([26,58,59,60,61,62,63,64,65,66,67,68,70,92,117,121,125,126,127,128,129,130,158,164,204,227,240,242,243,265,267,285,288,291,311,316,317,322,337,341,373,],[-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,174,193,-134,-135,-136,-137,-138,-139,-140,174,174,289,-133,-147,-145,-146,-144,-143,289,-169,-149,-141,-133,-133,-142,-170,-148,-171,]),'OP_DIM':([26,56,57,58,59,60,61,62,63,64,65,66,67,68,70,91,92,142,144,145,148,149,155,163,164,204,210,214,219,220,230,231,285,286,288,299,303,336,337,346,373,],[-40,149,-40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,-10,-11,214,219,-83,220,-172,219,149,149,149,214,-79,-84,-173,220,220,149,220,-169,-78,219,220,-170,-77,-171,]),'OP_INC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,158,164,165,167,169,171,174,176,177,179,183,184,185,186,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,304,308,309,310,311,313,314,316,317,322,331,332,333,336,337,339,341,342,350,352,372,373,380,381,383,385,388,389,390,391,392,],[-40,97,-41,97,-94,-95,-97,-98,-105,-100,-102,-103,-104,97,97,97,-128,97,97,97,-186,-187,185,97,-174,-175,-184,-185,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-93,-96,-101,-128,-128,97,-123,-125,-127,97,97,-5,97,97,-5,-2,-2,-5,-5,-5,97,-5,-5,-5,-5,-5,-5,97,-5,-5,97,-5,-5,-5,-173,-99,-133,97,97,-110,-116,-115,-122,-124,-126,-147,-157,-145,-146,97,-5,-225,-226,-227,-228,-229,-230,-231,97,97,-176,-177,97,-144,97,-143,97,97,97,97,97,97,97,97,-160,-161,97,97,-167,-168,97,-169,97,-149,97,97,97,97,97,97,-114,97,-141,97,97,-133,-133,-142,-162,97,-163,-166,-170,-165,-148,97,-111,-118,-164,-171,97,-117,-107,97,-113,97,-109,-113,-108,]),'OP_DEC':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,97,98,99,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,152,153,156,158,164,165,167,169,171,174,176,177,179,183,184,185,186,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,304,308,309,310,311,313,314,316,317,322,331,332,333,336,337,339,341,342,350,352,372,373,380,381,383,385,388,389,390,391,392,],[-40,98,-41,98,-94,-95,-97,-98,-105,-100,-102,-103,-104,98,98,98,-128,98,98,98,-186,-187,186,98,-174,-175,-184,-185,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-93,-96,-101,-128,-128,98,-123,-125,-127,98,98,-5,98,98,-5,-2,-2,-5,-5,-5,98,-5,-5,-5,-5,-5,-5,98,-5,-5,98,-5,-5,-5,-173,-99,-133,98,98,-110,-116,-115,-122,-124,-126,-147,-157,-145,-146,98,-5,-225,-226,-227,-228,-229,-230,-231,98,98,-176,-177,98,-144,98,-143,98,98,98,98,98,98,98,98,-160,-161,98,98,-167,-168,98,-169,98,-149,98,98,98,98,98,98,-114,98,-141,98,98,-133,-133,-142,-162,98,-163,-166,-170,-165,-148,98,-111,-118,-164,-171,98,-117,-107,98,-113,98,-109,-113,-108,]),'=':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,144,145,149,155,158,164,175,178,180,181,182,185,186,187,218,219,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-5,-83,-172,-5,-128,-128,245,-1,-1,-180,-5,-2,-2,-183,300,-84,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'ASS_MUL':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-128,-128,247,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'ASS_DIV':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-128,-128,248,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'ASS_MOD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-128,-128,249,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'ASS_ADD':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-128,-128,250,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'ASS_SUB':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-128,-128,251,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'ASS_AND':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-128,-128,252,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'ASS_OR':([26,70,92,95,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,336,337,339,341,372,373,],[-40,-41,-128,-5,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,-172,-128,-128,253,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,-166,-170,-165,-148,-164,-171,]),'*':([26,38,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,334,335,336,337,339,341,343,344,345,372,373,375,376,377,],[-40,71,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,206,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,206,206,-166,-170,-165,-148,-6,-6,-6,-164,-171,-196,-197,-198,]),'/':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,334,335,336,337,339,341,343,344,345,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,207,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,207,207,-166,-170,-165,-148,-6,-6,-6,-164,-171,-196,-197,-198,]),'%':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,331,333,334,335,336,337,339,341,343,344,345,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,208,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,-162,-163,208,208,-166,-170,-165,-148,-6,-6,-6,-164,-171,-196,-197,-198,]),'+':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,256,258,259,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,304,305,306,307,308,309,310,311,313,314,316,317,322,325,326,327,328,331,332,333,334,335,336,337,339,341,342,343,344,345,350,352,370,371,372,373,375,376,377,380,381,383,385,388,389,390,391,392,],[-40,103,-41,103,-94,-95,-97,-98,-105,-100,-102,-103,-104,103,103,103,-128,-5,103,103,103,-195,-181,-186,-187,-182,103,-174,-175,-184,-185,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,202,-199,-172,-93,-96,-101,-128,-128,103,-123,-125,-127,103,-188,103,-5,-1,103,-1,-180,-5,103,-5,-2,-2,-183,-5,-5,-5,103,-5,-5,-5,-5,-5,-5,103,-5,-5,103,-5,-5,-5,-173,-99,-133,103,103,-110,-116,-115,-122,-124,-126,-147,-157,-145,-146,103,-5,-225,-226,-227,-228,-229,-230,-231,103,-178,-179,-188,103,-176,-177,103,-144,103,-143,103,103,103,103,103,103,103,103,-160,-161,103,103,-167,-168,103,-169,103,-149,103,103,103,103,103,-191,-189,-190,103,-114,103,-141,103,103,-133,-133,-142,202,202,202,202,-162,103,-163,-6,-6,-166,-170,-165,-148,103,-6,-6,-6,-111,-118,-200,-201,-164,-171,-196,-197,-198,103,-117,-107,103,-113,103,-109,-113,-108,]),'-':([26,40,70,72,73,74,75,76,78,79,81,82,83,85,86,90,92,95,97,98,99,100,101,103,104,105,106,108,109,110,111,113,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,134,149,152,153,156,158,164,165,167,169,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,220,225,227,228,229,232,234,235,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,255,256,258,259,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,281,283,284,285,286,287,288,289,291,293,294,295,300,304,305,306,307,308,309,310,311,313,314,316,317,322,325,326,327,328,331,332,333,334,335,336,337,339,341,342,343,344,345,350,352,370,371,372,373,375,376,377,380,381,383,385,388,389,390,391,392,],[-40,104,-41,104,-94,-95,-97,-98,-105,-100,-102,-103,-104,104,104,104,-128,-5,104,104,104,-195,-181,-186,-187,-182,104,-174,-175,-184,-185,-129,-130,-131,-132,-153,-156,-134,-158,-159,-135,-136,-137,-138,-139,-140,203,-199,-172,-93,-96,-101,-128,-128,104,-123,-125,-127,104,-188,104,-5,-1,104,-1,-180,-5,104,-5,-2,-2,-183,-5,-5,-5,104,-5,-5,-5,-5,-5,-5,104,-5,-5,104,-5,-5,-5,-173,-99,-133,104,104,-110,-116,-115,-122,-124,-126,-147,-157,-145,-146,104,-5,-225,-226,-227,-228,-229,-230,-231,104,-178,-179,-188,104,-176,-177,104,-144,104,-143,104,104,104,104,104,104,104,104,-160,-161,104,104,-167,-168,104,-169,104,-149,104,104,104,104,104,-191,-189,-190,104,-114,104,-141,104,104,-133,-133,-142,203,203,203,203,-162,104,-163,-6,-6,-166,-170,-165,-148,104,-6,-6,-6,-111,-118,-200,-201,-164,-171,-196,-197,-198,104,-117,-107,104,-113,104,-109,-113,-108,]),'<':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,196,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,196,196,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'>':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,197,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,197,197,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'OP_LE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,198,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,198,198,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'OP_GE':([26,70,92,95,100,101,105,108,109,113,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,-153,-156,-134,199,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,-142,199,199,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'OP_EQ':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,194,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,194,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'OP_NE':([26,70,92,95,100,101,105,108,109,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,-130,-131,-132,195,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,195,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'&':([26,70,92,95,100,101,105,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,-129,192,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,192,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'^':([26,70,92,95,100,101,105,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,-174,-175,190,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,190,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'|':([26,70,92,95,100,101,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,-182,188,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-133,-133,188,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-215,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'OP_LAND':([26,70,92,95,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,-195,-181,184,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,184,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'?':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,176,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'OP_LOR':([26,70,92,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,164,175,178,180,181,182,185,186,187,220,227,240,241,242,243,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,],[-40,-41,-128,-5,177,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,]),'(':([26,40,57,58,59,60,61,62,63,64,65,66,67,68,70,72,73,74,75,76,78,79,81,82,83,85,86,87,90,92,97,98,99,103,104,106,110,111,115,119,121,125,126,127,128,129,130,133,144,145,152,153,156,158,164,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,219,225,226,227,228,229,232,234,235,237,238,239,240,242,243,245,246,247,248,249,250,251,252,253,255,261,264,265,266,267,268,270,271,272,273,274,275,276,283,284,287,289,291,293,294,295,300,304,308,309,310,311,313,314,317,322,332,341,342,350,352,380,381,383,385,388,389,390,391,392,],[-40,86,150,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,86,-94,-95,-97,-98,-105,-100,-102,-103,-104,86,86,165,86,-152,179,179,183,-186,-187,179,-184,-185,-151,-153,-150,-135,-136,-137,-138,-139,-140,205,217,-83,-93,-96,-101,-152,-152,86,-123,-125,-127,86,86,-5,86,86,-5,-5,-5,-5,86,-5,-5,-5,-5,-5,-5,86,-5,-5,287,86,-5,-5,-5,-84,-99,304,179,183,183,-110,-116,-115,-122,-124,-126,-147,-145,-146,183,-5,-225,-226,-227,-228,-229,-230,-231,183,183,183,-144,183,-143,183,183,183,183,183,183,183,86,183,183,86,86,-149,183,183,183,86,86,86,-114,86,-141,86,183,179,-142,86,-148,86,-111,-118,86,-117,-107,86,-113,86,-109,-113,-108,]),')':([26,60,61,62,63,64,65,66,67,68,70,84,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,145,149,150,158,160,161,162,163,164,175,178,180,181,182,185,186,187,205,217,219,220,221,223,227,230,231,236,240,241,242,243,256,257,258,259,260,262,263,265,267,277,281,285,286,287,288,290,291,292,298,303,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,338,339,341,343,344,345,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,374,375,376,377,380,381,382,384,386,387,],[-40,-12,-13,-14,-15,-16,-17,-18,-19,-20,-41,-106,-232,-222,-5,-220,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-83,-172,222,-128,227,228,229,-192,-128,-188,-1,-1,-180,-5,-2,-2,-183,291,299,-84,-173,301,-80,-133,-193,-194,-120,-147,-157,-145,-146,-178,316,-179,-188,317,-176,-177,-144,-143,-160,-161,-167,-168,339,-169,341,-149,-154,346,-82,-191,-189,-190,-141,-7,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,372,-165,-148,-6,-6,-6,-81,379,-111,-118,-121,-223,-3,-221,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-155,-196,-197,-198,385,-117,-224,-112,-119,389,]),',':([26,70,84,92,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,141,143,144,145,149,154,155,158,175,178,180,181,182,185,186,187,209,219,220,221,223,227,233,236,240,241,242,243,256,258,259,262,263,265,267,277,278,279,280,281,285,286,288,290,291,292,297,298,303,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,343,344,345,347,348,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,382,386,],[-40,-41,-106,-128,-232,-222,-5,-220,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,212,-65,-67,-83,-172,212,-67,-128,-188,-1,-1,-180,-5,-2,-2,-183,212,-84,-173,302,-80,-133,310,-120,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,-160,332,-72,-69,-161,-167,-168,-169,342,-149,-154,-66,302,-82,-191,-189,-190,-141,-7,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-70,332,-162,-74,-163,-6,-6,-166,-170,342,-165,-148,-6,-6,-6,-4,-81,-121,-223,-3,-221,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-71,-73,-200,-201,-164,-171,-155,-196,-197,-198,-68,-224,310,]),']':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,175,178,180,181,182,185,186,187,220,227,240,241,242,243,244,256,258,259,262,263,265,267,269,277,281,285,286,288,291,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,340,341,343,344,345,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,382,],[-40,-41,-232,-222,-5,-220,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,311,-178,-179,-188,-176,-177,-144,-143,322,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-7,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,373,-148,-6,-6,-6,-223,-3,-221,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,-224,]),':':([26,70,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,149,158,175,178,180,181,182,185,186,187,220,227,240,241,242,243,254,256,258,259,262,263,265,267,277,281,285,286,288,291,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,339,341,343,344,345,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,375,376,377,382,],[-40,-41,-232,-222,-5,-220,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-172,-128,-188,-1,-1,-180,-5,-2,-2,-183,-173,-133,-147,-157,-145,-146,314,-178,-179,-188,-176,-177,-144,-143,-160,-161,-167,-168,-169,-149,-191,-189,-190,-141,-7,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-162,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-223,-3,-221,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-200,-201,-164,-171,-196,-197,-198,-224,]),'}':([26,29,30,39,40,41,42,43,44,46,47,48,49,50,54,70,72,73,74,75,76,78,79,81,82,83,93,94,95,96,100,101,102,105,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,146,147,149,152,153,156,158,167,169,171,175,178,180,181,182,185,186,187,200,201,211,213,215,216,220,225,227,237,238,239,240,241,242,243,256,258,259,262,263,265,267,276,277,278,279,280,281,282,285,286,288,291,296,305,306,307,311,312,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,341,343,344,345,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,382,383,388,390,391,392,],[-40,-21,42,-22,73,135,-43,-53,-55,-58,-59,-60,-61,-62,-92,-41,152,-94,-95,-97,-98,-105,-100,-102,-103,-104,-232,-222,-5,-220,-195,-181,-218,-182,-216,-174,-175,-214,-129,-212,-130,-131,-132,-210,-153,-156,-134,-207,-158,-159,-135,-136,-137,-138,-139,-140,-202,-199,-42,-54,-56,-57,-88,-91,-172,-93,-96,-101,-128,-123,-125,-127,-188,-1,-1,-180,-5,-2,-2,-183,277,281,-87,-76,-85,-86,-173,-99,-133,-122,-124,-126,-147,-157,-145,-146,-178,-179,-188,-176,-177,-144,-143,329,-160,331,-72,-69,-161,333,-167,-168,-169,-149,-75,-191,-189,-190,-141,-7,-6,-133,-133,-6,-6,-6,-6,-142,-6,-6,-6,-6,-6,-6,-70,368,-162,-74,-163,-6,-6,-166,-170,-165,-148,-6,-6,-6,-223,-3,-221,-219,-217,-215,-213,-211,-208,-209,-203,-204,-205,-206,-71,-73,-200,-201,-164,-171,-196,-197,-198,-224,-107,-113,-109,-113,-108,]),'DO':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,225,237,238,239,383,385,388,389,390,391,392,],[85,85,-94,-95,-97,-98,-105,-100,-102,-103,-104,85,-93,-96,-101,-123,-125,-127,-99,-122,-124,-126,-107,85,-113,85,-109,-113,-108,]),'FOR':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,225,237,238,239,383,385,388,389,390,391,392,],[87,87,-94,-95,-97,-98,-105,-100,-102,-103,-104,87,-93,-96,-101,-123,-125,-127,-99,-122,-124,-126,-107,87,-113,87,-109,-113,-108,]),'BREAK':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,225,237,238,239,383,385,388,389,390,391,392,],[88,88,-94,-95,-97,-98,-105,-100,-102,-103,-104,88,-93,-96,-101,-123,-125,-127,-99,-122,-124,-126,-107,88,-113,88,-109,-113,-108,]),'CONTINUE':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,225,237,238,239,383,385,388,389,390,391,392,],[89,89,-94,-95,-97,-98,-105,-100,-102,-103,-104,89,-93,-96,-101,-123,-125,-127,-99,-122,-124,-126,-107,89,-113,89,-109,-113,-108,]),'RETURN':([40,72,73,74,75,76,78,79,81,82,83,85,152,153,156,167,169,171,225,237,238,239,383,385,388,389,390,391,392,],[90,90,-94,-95,-97,-98,-105,-100,-102,-103,-104,90,-93,-96,-101,-123,-125,-127,-99,-122,-124,-126,-107,90,-113,90,-109,-113,-108,]),'~':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[110,110,-94,-95,-97,-98,-105,-100,-102,-103,-104,110,110,110,110,110,110,-186,-187,110,-184,-185,-93,-96,-101,110,-123,-125,-127,110,110,-5,110,110,-5,-5,-5,-5,110,-5,-5,-5,-5,-5,-5,110,-5,-5,110,-5,-5,-5,-99,110,110,110,-110,-116,-115,-122,-124,-126,110,-5,-225,-226,-227,-228,-229,-230,-231,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-114,110,110,110,110,110,110,-111,-118,110,-117,-107,110,-113,110,-109,-113,-108,]),'!':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[111,111,-94,-95,-97,-98,-105,-100,-102,-103,-104,111,111,111,111,111,111,-186,-187,111,-184,-185,-93,-96,-101,111,-123,-125,-127,111,111,-5,111,111,-5,-5,-5,-5,111,-5,-5,-5,-5,-5,-5,111,-5,-5,111,-5,-5,-5,-99,111,111,111,-110,-116,-115,-122,-124,-126,111,-5,-225,-226,-227,-228,-229,-230,-231,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-114,111,111,111,111,111,111,-111,-118,111,-117,-107,111,-113,111,-109,-113,-108,]),'THIS':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,173,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[119,119,-94,-95,-97,-98,-105,-100,-102,-103,-104,119,119,119,119,119,119,-186,-187,119,-184,-185,-93,-96,-101,119,-123,-125,-127,242,119,119,-5,119,119,-5,-5,-5,-5,119,-5,-5,-5,-5,-5,-5,119,-5,-5,119,-5,-5,-5,-99,119,119,119,-110,-116,-115,-122,-124,-126,119,-5,-225,-226,-227,-228,-229,-230,-231,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-114,119,119,119,119,119,119,-111,-118,119,-117,-107,119,-113,119,-109,-113,-108,]),'LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[125,125,-94,-95,-97,-98,-105,-100,-102,-103,-104,125,125,125,125,125,125,-186,-187,125,-184,-185,-93,-96,-101,125,-123,-125,-127,125,125,-5,125,125,-5,-5,-5,-5,125,-5,-5,-5,-5,-5,-5,125,-5,-5,125,-5,-5,-5,-99,125,125,125,-110,-116,-115,-122,-124,-126,125,-5,-225,-226,-227,-228,-229,-230,-231,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-114,125,125,125,125,125,125,-111,-118,125,-117,-107,125,-113,125,-109,-113,-108,]),'NUM_LITERAL':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[126,126,-94,-95,-97,-98,-105,-100,-102,-103,-104,126,126,126,126,126,126,-186,-187,126,-184,-185,-93,-96,-101,126,-123,-125,-127,126,126,-5,126,126,-5,-5,-5,-5,126,-5,-5,-5,-5,-5,-5,126,-5,-5,126,-5,-5,-5,-99,126,126,126,-110,-116,-115,-122,-124,-126,126,-5,-225,-226,-227,-228,-229,-230,-231,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-114,126,126,126,126,126,126,-111,-118,126,-117,-107,126,-113,126,-109,-113,-108,]),'BOOLLIT':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[127,127,-94,-95,-97,-98,-105,-100,-102,-103,-104,127,127,127,127,127,127,-186,-187,127,-184,-185,-93,-96,-101,127,-123,-125,-127,127,127,-5,127,127,-5,-5,-5,-5,127,-5,-5,-5,-5,-5,-5,127,-5,-5,127,-5,-5,-5,-99,127,127,127,-110,-116,-115,-122,-124,-126,127,-5,-225,-226,-227,-228,-229,-230,-231,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-114,127,127,127,127,127,127,-111,-118,127,-117,-107,127,-113,127,-109,-113,-108,]),'NEW':([40,72,73,74,75,76,78,79,81,82,83,85,86,90,97,98,99,103,104,106,110,111,152,153,156,165,167,169,171,173,174,176,177,179,183,184,188,190,192,193,194,195,196,197,198,199,200,202,203,205,206,207,208,225,227,228,229,232,234,235,237,238,239,245,246,247,248,249,250,251,252,253,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,309,310,313,314,317,332,342,350,352,380,381,383,385,388,389,390,391,392,],[132,132,-94,-95,-97,-98,-105,-100,-102,-103,-104,132,132,132,132,132,132,-186,-187,132,-184,-185,-93,-96,-101,132,-123,-125,-127,132,132,132,-5,132,132,-5,-5,-5,-5,132,-5,-5,-5,-5,-5,-5,132,-5,-5,132,-5,-5,-5,-99,132,132,132,-110,-116,-115,-122,-124,-126,132,-5,-225,-226,-227,-228,-229,-230,-231,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-114,132,132,132,132,132,132,-111,-118,132,-117,-107,132,-113,132,-109,-113,-108,]),'WHILE':([73,78,79,81,82,83,152,156,157,167,169,171,237,238,239,383,388,390,391,392,],[-94,-105,-100,-102,-103,-104,-93,-101,226,-123,-125,-127,-122,-124,-126,-107,-113,-109,-113,-108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,20,]),'TypeDeclarations':([0,3,4,20,],[5,21,22,34,]),'ImportStatement':([0,3,4,20,],[7,7,23,23,]),'TypeDeclarationOptSemi':([0,3,4,5,20,21,22,34,],[8,8,8,24,8,24,24,24,]),'TypeDeclaration':([0,3,4,5,20,21,22,30,34,41,201,282,],[10,10,10,10,10,10,10,50,10,50,50,50,]),'ClassHeader':([0,3,4,5,20,21,22,30,34,41,201,282,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,20,21,22,30,34,41,201,282,],[12,12,12,12,12,12,12,51,12,51,51,51,]),'ClassWord':([0,3,4,5,12,20,21,22,30,34,41,51,201,282,],[13,13,13,13,31,13,13,13,13,13,13,31,13,13,]),'Modifier':([0,3,4,5,12,20,21,22,30,34,41,51,201,282,],[14,14,14,14,32,14,14,14,14,14,14,32,14,14,]),'QualifiedName':([6,9,30,40,41,51,72,85,86,90,97,98,99,106,132,150,165,174,176,179,183,193,200,201,205,217,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,300,302,304,308,310,313,314,317,332,342,380,385,389,],[25,27,59,92,59,59,92,158,164,158,158,158,158,158,59,59,92,158,158,158,164,158,158,59,158,59,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,59,158,158,158,158,158,158,158,158,59,158,158,158,158,158,158,158,158,158,158,158,]),'SemiColons':([10,25,27,44,71,],[28,35,37,137,151,]),'FieldDeclarations':([30,201,],[41,282,]),'FieldDeclarationOptSemi':([30,41,201,282,],[43,136,43,136,]),'FieldDeclaration':([30,41,201,282,],[44,44,44,44,]),'FieldVariableDeclaration':([30,41,201,282,],[45,45,45,45,]),'MethodDeclaration':([30,41,201,282,],[46,46,46,46,]),'ConstructorDeclaration':([30,41,201,282,],[47,47,47,47,]),'StaticInitializer':([30,41,201,282,],[48,48,48,48,]),'NonStaticInitializer':([30,41,201,282,],[49,49,49,49,]),'TypeSpecifier':([30,40,41,51,72,150,165,201,217,282,302,],[52,77,52,139,77,224,77,52,224,52,224,]),'ConstructorDeclarator':([30,41,51,201,282,],[53,53,140,53,53,]),'Block':([30,40,41,53,55,72,85,140,142,201,210,282,385,389,],[54,83,54,146,147,83,83,211,215,54,215,54,83,83,]),'TypeName':([30,40,41,51,72,132,150,165,201,217,282,302,],[56,56,56,56,56,204,56,56,56,56,56,56,]),'PrimitiveType':([30,40,41,51,72,85,86,90,97,98,99,106,132,150,165,174,176,179,183,193,200,201,205,217,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,282,283,284,287,289,293,294,295,300,302,304,308,310,313,314,317,332,342,380,385,389,],[58,91,58,58,91,159,163,159,159,159,159,159,58,58,91,159,159,159,163,159,159,58,159,58,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,58,159,159,159,159,159,159,159,159,58,159,159,159,159,159,159,159,159,159,159,159,]),'LocalVariableDeclarationsAndStatements':([40,],[72,]),'LocalVariableDeclarationOrStatement':([40,72,],[74,153,]),'LocalVariableDeclarationStatement':([40,72,165,],[75,75,235,]),'Statement':([40,72,85,385,389,],[76,76,157,388,391,]),'EmptyStatement':([40,72,85,385,389,],[79,79,79,79,79,]),'ExpressionStatement':([40,72,85,165,310,380,385,389,],[80,80,80,236,353,236,80,80,]),'IterationStatement':([40,72,85,385,389,],[81,81,81,81,81,]),'JumpStatement':([40,72,85,385,389,],[82,82,82,82,82,]),'Expression':([40,72,85,86,90,165,174,176,179,183,193,200,205,276,287,289,300,304,308,310,332,342,380,385,389,],[84,84,84,160,170,84,244,254,257,260,269,280,292,280,292,340,280,349,351,84,280,374,84,84,84,]),'AssignmentExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,276,287,289,300,304,308,310,313,332,342,380,385,389,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,355,93,93,93,93,93,]),'ConditionalExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[94,94,94,94,94,94,94,94,94,94,94,94,94,312,94,94,94,94,94,94,94,94,356,94,94,94,94,94,]),'UnaryExpression':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,332,342,380,385,389,],[95,95,95,95,95,178,180,182,187,95,95,95,95,95,95,95,95,182,182,182,182,182,182,182,182,182,182,182,182,182,182,95,182,182,95,95,182,182,182,95,95,95,95,95,182,95,95,95,95,95,]),'ConditionalOrExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'ArithmeticUnaryOperator':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,332,342,380,385,389,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'CastExpression':([40,72,85,86,90,99,165,174,176,179,183,193,200,205,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,332,342,380,385,389,],[100,100,100,100,100,181,100,100,100,100,100,100,100,100,306,307,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,343,344,345,100,100,100,100,100,100,100,100,100,100,100,]),'LogicalUnaryExpression':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,305,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,305,101,101,101,101,101,]),'ConditionalAndExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,315,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'PostfixExpression':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'LogicalUnaryOperator':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'InclusiveOrExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,261,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,318,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'PrimaryExpression':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'RealPostfixExpression':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'ExclusiveOrExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,261,264,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,319,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'NotJustName':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'AndExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,261,264,266,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,320,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'SpecialName':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'NewAllocationExpression':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ComplexPrimary':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'EqualityExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,261,264,266,268,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,321,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'PlainNewAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[120,120,120,120,120,120,120,120,120,120,241,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ComplexPrimaryNoParenthesis':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'RelationalExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,261,264,266,268,270,271,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,323,324,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'ArrayAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'ClassAllocationExpression':([40,72,85,86,90,97,98,99,106,165,173,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ArrayAccess':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'FieldAccess':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'MethodCall':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'AdditiveExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,261,264,266,268,270,271,272,273,274,275,276,287,289,300,304,308,310,313,314,332,342,380,385,389,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,325,326,327,328,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'MethodAccess':([40,72,85,86,90,97,98,99,106,165,174,176,179,183,193,200,205,227,228,229,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,293,294,295,300,304,308,310,313,314,317,332,342,380,385,389,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'MultiplicativeExpression':([40,72,85,86,90,165,174,176,179,183,193,200,205,245,255,261,264,266,268,270,271,272,273,274,275,276,283,284,287,289,300,304,308,310,313,314,332,342,380,385,389,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,334,335,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'VariableDeclarators':([52,77,139,],[141,154,209,]),'MethodDeclarator':([52,139,],[142,210,]),'VariableDeclarator':([52,77,139,212,],[143,143,143,297,]),'DeclaratorName':([52,77,139,212,224,],[144,155,144,155,303,]),'Dims':([56,163,164,204,285,],[148,230,231,286,336,]),'PrimitiveTypeExpression':([86,183,],[161,161,]),'ClassTypeExpression':([86,183,],[162,162,]),'push':([95,144,155,177,182,184,188,190,192,194,195,196,197,198,199,202,203,206,207,208,246,],[175,218,218,255,259,261,264,266,268,270,271,272,273,274,275,283,284,293,294,295,313,]),'MethodBody':([142,210,],[213,296,]),'ParameterList':([150,217,],[221,298,]),'Parameter':([150,217,302,],[223,223,348,]),'ForInit':([165,],[232,]),'ExpressionStatements':([165,380,],[233,386,]),'AssignmentOperator':([175,],[246,]),'codegen_prefix':([178,180,],[256,258,]),'codegen_postfix':([185,186,],[262,263,]),'ArrayInitializers':([200,276,],[278,330,]),'VariableInitializer':([200,276,300,332,],[279,279,347,369,]),'DimExprs':([204,],[285,]),'DimExpr':([204,285,],[288,337,]),'ArgumentList':([205,287,],[290,338,]),'codegen_for_init':([232,],[308,]),'ForExpr':([308,],[350,]),'codegen_assign':([312,],[354,]),'codegen_binop':([315,318,319,320,321,323,324,325,326,327,328,334,335,343,344,345,],[357,358,359,360,361,362,363,364,365,366,367,370,371,375,376,377,]),'codegen_declarator':([347,],[378,]),'codegen_for_expr':([350,],[380,]),'codegen_shorthand':([355,],[382,]),'ForIncr':([380,],[384,]),'codegen_for_inc':([384,],[387,]),'codegen_for':([388,391,],[390,392,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('codegen_prefix -> <empty>','codegen_prefix',0,'p_CodegenPrefix','icg.py',71),
  ('codegen_postfix -> <empty>','codegen_postfix',0,'p_CodegenPostfix','icg.py',81),
  ('codegen_shorthand -> <empty>','codegen_shorthand',0,'p_CodegenShorthand','icg.py',91),
  ('codegen_declarator -> <empty>','codegen_declarator',0,'p_CodegenDeclarator','icg.py',104),
  ('push -> <empty>','push',0,'p_Push','icg.py',110),
  ('codegen_binop -> <empty>','codegen_binop',0,'p_CodegenBinop','icg.py',117),
  ('codegen_assign -> <empty>','codegen_assign',0,'p_CodegenAssign','icg.py',128),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','icg.py',146),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','icg.py',147),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','icg.py',155),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','icg.py',156),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','icg.py',161),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','icg.py',162),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','icg.py',163),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','icg.py',164),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','icg.py',165),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','icg.py',166),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','icg.py',167),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','icg.py',168),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','icg.py',169),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','icg.py',174),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','icg.py',175),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','icg.py',183),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','icg.py',188),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','icg.py',189),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','icg.py',190),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','icg.py',191),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','icg.py',192),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','icg.py',193),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','icg.py',194),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','icg.py',202),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','icg.py',207),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','icg.py',208),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','icg.py',216),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','icg.py',217),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','icg.py',222),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','icg.py',223),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','icg.py',231),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','icg.py',232),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','icg.py',237),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','icg.py',238),
  ('TypeDeclaration -> ClassHeader { FieldDeclarations }','TypeDeclaration',4,'p_TypeDeclaration','icg.py',246),
  ('TypeDeclaration -> ClassHeader { }','TypeDeclaration',3,'p_TypeDeclaration','icg.py',247),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','icg.py',252),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','icg.py',253),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','icg.py',264),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','icg.py',265),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','icg.py',273),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','icg.py',274),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','icg.py',275),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','icg.py',276),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','icg.py',281),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','icg.py',285),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','icg.py',286),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','icg.py',294),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','icg.py',295),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','icg.py',303),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',304),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',305),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','icg.py',306),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','icg.py',307),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','icg.py',308),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','icg.py',316),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','icg.py',317),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','icg.py',339),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','icg.py',340),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','icg.py',348),
  ('VariableDeclarator -> DeclaratorName push = VariableInitializer codegen_declarator','VariableDeclarator',5,'p_VariableDeclarator','icg.py',349),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','icg.py',360),
  ('VariableInitializer -> { }','VariableInitializer',2,'p_VariableInitializer','icg.py',361),
  ('VariableInitializer -> { ArrayInitializers }','VariableInitializer',3,'p_VariableInitializer','icg.py',362),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','icg.py',370),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','icg.py',371),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','icg.py',372),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','icg.py',380),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','icg.py',381),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','icg.py',396),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','icg.py',397),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','icg.py',398),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','icg.py',410),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','icg.py',411),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','icg.py',419),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','icg.py',427),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','icg.py',428),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','icg.py',437),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','icg.py',438),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','icg.py',443),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','icg.py',444),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','icg.py',457),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','icg.py',458),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','icg.py',470),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','icg.py',475),
  ('Block -> { LocalVariableDeclarationsAndStatements }','Block',3,'p_Block','icg.py',480),
  ('Block -> { }','Block',2,'p_Block','icg.py',481),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','icg.py',486),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','icg.py',487),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','icg.py',495),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','icg.py',496),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','icg.py',504),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','icg.py',515),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','icg.py',516),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','icg.py',517),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','icg.py',518),
  ('Statement -> Block','Statement',1,'p_Statement','icg.py',519),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','icg.py',527),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','icg.py',532),
  ('IterationStatement -> DO Statement WHILE ( Expression ) ;','IterationStatement',7,'p_IterationStatement','icg.py',537),
  ('IterationStatement -> FOR ( ForInit codegen_for_init ForExpr codegen_for_expr ForIncr codegen_for_inc ) Statement codegen_for','IterationStatement',11,'p_IterationStatement','icg.py',538),
  ('IterationStatement -> FOR ( ForInit codegen_for_init ForExpr codegen_for_expr ) Statement codegen_for','IterationStatement',9,'p_IterationStatement','icg.py',539),
  ('codegen_for_init -> <empty>','codegen_for_init',0,'p_CodegenForInit','icg.py',544),
  ('codegen_for_expr -> <empty>','codegen_for_expr',0,'p_CodegenForExpr','icg.py',550),
  ('codegen_for_inc -> <empty>','codegen_for_inc',0,'p_CodegenForInc','icg.py',566),
  ('codegen_for -> <empty>','codegen_for',0,'p_CodegenFor','icg.py',574),
  ('ForInit -> ExpressionStatements ;','ForInit',2,'p_ForInit','icg.py',587),
  ('ForInit -> LocalVariableDeclarationStatement','ForInit',1,'p_ForInit','icg.py',588),
  ('ForInit -> ;','ForInit',1,'p_ForInit','icg.py',589),
  ('ForExpr -> Expression ;','ForExpr',2,'p_ForExpr','icg.py',597),
  ('ForExpr -> ;','ForExpr',1,'p_ForExpr','icg.py',598),
  ('ForIncr -> ExpressionStatements','ForIncr',1,'p_ForIncr','icg.py',606),
  ('ExpressionStatements -> ExpressionStatement','ExpressionStatements',1,'p_ExpressionStatements','icg.py',610),
  ('ExpressionStatements -> ExpressionStatements , ExpressionStatement','ExpressionStatements',3,'p_ExpressionStatements','icg.py',611),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','icg.py',619),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','icg.py',620),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','icg.py',621),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','icg.py',622),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','icg.py',623),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','icg.py',624),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','icg.py',629),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','icg.py',630),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','icg.py',635),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','icg.py',636),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','icg.py',637),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','icg.py',642),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','icg.py',643),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',651),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',652),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',653),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',654),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',655),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','icg.py',656),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','icg.py',671),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','icg.py',672),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','icg.py',677),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','icg.py',678),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','icg.py',679),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','icg.py',680),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','icg.py',681),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','icg.py',686),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','icg.py',687),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','icg.py',692),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','icg.py',693),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','icg.py',694),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','icg.py',699),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','icg.py',704),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','icg.py',705),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','icg.py',713),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','icg.py',714),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','icg.py',722),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','icg.py',723),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','icg.py',724),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { }','PlainNewAllocationExpression',3,'p_PlainNewAllocationExpression','icg.py',725),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { ArrayInitializers }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','icg.py',726),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { FieldDeclarations }','PlainNewAllocationExpression',4,'p_PlainNewAllocationExpression','icg.py',727),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','icg.py',735),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','icg.py',736),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','icg.py',741),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','icg.py',742),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','icg.py',743),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','icg.py',748),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','icg.py',749),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','icg.py',757),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','icg.py',762),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','icg.py',763),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','icg.py',771),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','icg.py',772),
  ('RealPostfixExpression -> PostfixExpression OP_INC codegen_postfix','RealPostfixExpression',3,'p_RealPostfixExpression','icg.py',777),
  ('RealPostfixExpression -> PostfixExpression OP_DEC codegen_postfix','RealPostfixExpression',3,'p_RealPostfixExpression','icg.py',778),
  ('UnaryExpression -> OP_INC UnaryExpression codegen_prefix','UnaryExpression',3,'p_UnaryExpression','icg.py',783),
  ('UnaryExpression -> OP_DEC UnaryExpression codegen_prefix','UnaryExpression',3,'p_UnaryExpression','icg.py',784),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','icg.py',785),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','icg.py',786),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','icg.py',807),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','icg.py',808),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','icg.py',820),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','icg.py',821),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','icg.py',826),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','icg.py',827),
  ('CastExpression -> UnaryExpression push','CastExpression',2,'p_CastExpression','icg.py',832),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','icg.py',833),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','icg.py',834),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','icg.py',835),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','icg.py',843),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','icg.py',844),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','icg.py',852),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','icg.py',857),
  ('MultiplicativeExpression -> MultiplicativeExpression * push CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',858),
  ('MultiplicativeExpression -> MultiplicativeExpression / push CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',859),
  ('MultiplicativeExpression -> MultiplicativeExpression % push CastExpression codegen_binop','MultiplicativeExpression',5,'p_MultiplicativeExpression','icg.py',860),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','icg.py',869),
  ('AdditiveExpression -> AdditiveExpression + push MultiplicativeExpression codegen_binop','AdditiveExpression',5,'p_AdditiveExpression','icg.py',870),
  ('AdditiveExpression -> AdditiveExpression - push MultiplicativeExpression codegen_binop','AdditiveExpression',5,'p_AdditiveExpression','icg.py',871),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','icg.py',880),
  ('RelationalExpression -> RelationalExpression < push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',881),
  ('RelationalExpression -> RelationalExpression > push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',882),
  ('RelationalExpression -> RelationalExpression OP_LE push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',883),
  ('RelationalExpression -> RelationalExpression OP_GE push AdditiveExpression codegen_binop','RelationalExpression',5,'p_RelationalExpression','icg.py',884),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','icg.py',893),
  ('EqualityExpression -> EqualityExpression OP_EQ push RelationalExpression codegen_binop','EqualityExpression',5,'p_EqualityExpression','icg.py',894),
  ('EqualityExpression -> EqualityExpression OP_NE push RelationalExpression codegen_binop','EqualityExpression',5,'p_EqualityExpression','icg.py',895),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','icg.py',903),
  ('AndExpression -> AndExpression & push EqualityExpression codegen_binop','AndExpression',5,'p_AndExpression','icg.py',904),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','icg.py',912),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ push AndExpression codegen_binop','ExclusiveOrExpression',5,'p_ExclusiveOrExpression','icg.py',913),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','icg.py',921),
  ('InclusiveOrExpression -> InclusiveOrExpression | push ExclusiveOrExpression codegen_binop','InclusiveOrExpression',5,'p_InclusiveOrExpression','icg.py',922),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','icg.py',930),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND push InclusiveOrExpression codegen_binop','ConditionalAndExpression',5,'p_ConditionalAndExpression','icg.py',931),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','icg.py',939),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR push ConditionalAndExpression codegen_binop','ConditionalOrExpression',5,'p_ConditionalOrExpression','icg.py',940),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','icg.py',948),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','icg.py',949),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','icg.py',957),
  ('AssignmentExpression -> UnaryExpression push = ConditionalExpression codegen_assign','AssignmentExpression',5,'p_AssignmentExpression','icg.py',958),
  ('AssignmentExpression -> UnaryExpression push AssignmentOperator push AssignmentExpression codegen_shorthand','AssignmentExpression',6,'p_AssignmentExpression','icg.py',959),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','icg.py',971),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','icg.py',972),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','icg.py',973),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','icg.py',974),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','icg.py',975),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','icg.py',976),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','icg.py',977),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','icg.py',984),
]
