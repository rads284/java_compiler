
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitASS_ADD ASS_AND ASS_DIV ASS_MOD ASS_MUL ASS_OR ASS_SUB BOOLEAN BOOLLIT BREAK BYTE CHAR CLASS CONTINUE DO DOUBLE FLOAT FOR IDENTIFIER IMPORT INT LITERAL LONG NEW NUM_LITERAL OP_DEC OP_DIM OP_EQ OP_GE OP_INC OP_LAND OP_LE OP_LOR OP_NE PACKAGE PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC THIS VOID WHILETypeSpecifier : TypeName\n    | TypeName Dims\n    TypeName : PrimitiveType\n    | QualifiedName\n    PrimitiveType : BOOLEAN\n    | CHAR\n    | BYTE\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | VOID\n    SemiColons : ';'\n    | SemiColons ';'\n    CompilationUnit : ProgramFile\n    ProgramFile : PackageStatement ImportStatements TypeDeclarations\n    | PackageStatement ImportStatements\n    | PackageStatement                  TypeDeclarations\n    |                  ImportStatements TypeDeclarations\n    | PackageStatement\n    |                  ImportStatements\n    |                                   TypeDeclarations\n    PackageStatement : PACKAGE QualifiedName SemiColons\n    TypeDeclarations : TypeDeclarationOptSemi\n    | TypeDeclarations TypeDeclarationOptSemi\n    TypeDeclarationOptSemi : TypeDeclaration\n        | TypeDeclaration SemiColons\n    ImportStatements : ImportStatement\n    | ImportStatements ImportStatement\n    ImportStatement : IMPORT QualifiedName SemiColons\n    | IMPORT QualifiedName '.' '*' SemiColons\n    QualifiedName : IDENTIFIER\n    | QualifiedName '.' IDENTIFIER\n    TypeDeclaration : ClassHeader '{' push FieldDeclarations '}' pop\n    | ClassHeader '{' push '}' pop\n    ClassHeader : Modifiers ClassWord IDENTIFIER\n    |           ClassWord IDENTIFIER\n    Modifiers : Modifier\n    | Modifiers Modifier\n    Modifier : PUBLIC\n    | PROTECTED\n    | PRIVATE\n    | STATIC\n    ClassWord : CLASSFieldDeclarations : FieldDeclarationOptSemi\n        | FieldDeclarations FieldDeclarationOptSemi\n    FieldDeclarationOptSemi : FieldDeclaration\n        | FieldDeclaration SemiColons\n    FieldDeclaration : FieldVariableDeclaration ';'\n    | MethodDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    | NonStaticInitializer\n    | TypeDeclaration\n    FieldVariableDeclaration : Modifiers TypeSpecifier VariableDeclarators\n    |           TypeSpecifier VariableDeclarators\n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators ',' VariableDeclarator\n    VariableDeclarator : DeclaratorName\n    | DeclaratorName '=' VariableInitializer\n    VariableInitializer : Expression\n    | '{' push '}' pop\n        | '{' push ArrayInitializers '}' pop\n    ArrayInitializers : VariableInitializer\n    | ArrayInitializers ',' VariableInitializer\n    | ArrayInitializers ','\n    MethodDeclaration : Modifiers TypeSpecifier MethodDeclarator        MethodBody\n    |           TypeSpecifier MethodDeclarator        MethodBody\n    MethodDeclarator : DeclaratorName '(' ParameterList ')'\n    | DeclaratorName '(' ')'\n    | MethodDeclarator OP_DIM\n    ParameterList : Parameter\n    | ParameterList ',' Parameter\n    Parameter : TypeSpecifier DeclaratorName\n    DeclaratorName : IDENTIFIER\n    | DeclaratorName OP_DIM\n    MethodBody : Block\n    | ';'\n    ConstructorDeclaration : Modifiers ConstructorDeclarator        Block\n    |           ConstructorDeclarator        Block\n    ConstructorDeclarator : IDENTIFIER '(' ParameterList ')'\n    | IDENTIFIER '(' ')'\n    StaticInitializer : STATIC Block\n    NonStaticInitializer : Block\n    Block : '{' push LocalVariableDeclarationsAndStatements '}' pop\n    | '{' push '}' pop\n    push :pop :LocalVariableDeclarationsAndStatements : LocalVariableDeclarationOrStatement\n    | LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement\n    LocalVariableDeclarationOrStatement : LocalVariableDeclarationStatement\n    | Statement\n    LocalVariableDeclarationStatement : TypeSpecifier VariableDeclarators ';'\n    Statement : EmptyStatement\n    | ExpressionStatement ';'\n    | IterationStatement\n    | JumpStatement\n    | Block\n    EmptyStatement : ';'\n    ExpressionStatement : Expression\n    IterationStatement : DO Statement WHILE '(' Expression ')' ';'\n    | FOR '(' ForInit ForExpr ForIncr ')' Statement\n    | FOR '(' ForInit ForExpr         ')' Statement\n    ForInit : ExpressionStatements ';'\n    | LocalVariableDeclarationStatement\n    | ';'\n    ForExpr : Expression ';'\n    | ';'\n    ForIncr : ExpressionStatements ExpressionStatements : ExpressionStatement\n    | ExpressionStatements ',' ExpressionStatement\n    JumpStatement : BREAK IDENTIFIER ';'\n    | BREAK            ';'\n    | CONTINUE IDENTIFIER ';'\n    | CONTINUE            ';'\n    | RETURN Expression ';'\n    | RETURN            ';'\n    PrimaryExpression : QualifiedName\n    | NotJustName\n    NotJustName : SpecialName\n    | NewAllocationExpression\n    | ComplexPrimary\n    ComplexPrimary : '(' Expression ')'\n    | ComplexPrimaryNoParenthesis\n    ComplexPrimaryNoParenthesis : LITERAL\n    | NUM_LITERAL\n    | BOOLLIT\n    | ArrayAccess\n    | FieldAccess\n    | MethodCall\n    ArrayAccess : QualifiedName '[' Expression ']'\n    | ComplexPrimary '[' Expression ']'\n    FieldAccess : NotJustName '.' IDENTIFIER\n    | RealPostfixExpression '.' IDENTIFIER\n        | QualifiedName '.' THIS\n        | QualifiedName '.' CLASS\n        | PrimitiveType '.' CLASS\n    MethodCall : MethodAccess '(' ArgumentList ')'\n    | MethodAccess '(' ')'\n    MethodAccess : ComplexPrimaryNoParenthesis\n    | SpecialName\n    | QualifiedName\n    SpecialName : THIS\n    ArgumentList : Expression\n    | ArgumentList ',' Expression\n    NewAllocationExpression : PlainNewAllocationExpression\n        | QualifiedName '.' PlainNewAllocationExpression\n    PlainNewAllocationExpression : ArrayAllocationExpression\n        | ClassAllocationExpression\n        | ArrayAllocationExpression '{' push '}' pop\n        | ClassAllocationExpression '{' push '}' pop\n        | ArrayAllocationExpression '{' push ArrayInitializers '}' pop\n        | ClassAllocationExpression '{' push FieldDeclarations '}' pop\n    ClassAllocationExpression : NEW TypeName '(' ArgumentList ')'\n    | NEW TypeName '('              ')'\n    ArrayAllocationExpression : NEW TypeName DimExprs Dims\n    | NEW TypeName DimExprs\n    | NEW TypeName Dims\n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    DimExpr : '[' Expression ']'\n    Dims : OP_DIM\n    | Dims OP_DIM\n    PostfixExpression : PrimaryExpression\n    | RealPostfixExpression\n    RealPostfixExpression : PostfixExpression OP_INC\n    | PostfixExpression OP_DEC\n    UnaryExpression : OP_INC UnaryExpression\n    | OP_DEC UnaryExpression\n    | ArithmeticUnaryOperator CastExpression\n    | LogicalUnaryExpression\n    LogicalUnaryExpression : PostfixExpression\n    | LogicalUnaryOperator UnaryExpression\n    LogicalUnaryOperator : '~'\n    | '!'\n    ArithmeticUnaryOperator : '+'\n    | '-'\n    CastExpression : UnaryExpression\n    | '(' PrimitiveTypeExpression ')' CastExpression\n    | '(' ClassTypeExpression ')' CastExpression\n    | '(' Expression ')' LogicalUnaryExpression\n    PrimitiveTypeExpression : PrimitiveType\n        | PrimitiveType Dims\n    ClassTypeExpression : QualifiedName Dims\n    MultiplicativeExpression : CastExpression\n    | MultiplicativeExpression '*' CastExpression\n    | MultiplicativeExpression '/' CastExpression\n    | MultiplicativeExpression '%' CastExpression\n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression '+' MultiplicativeExpression\n    | AdditiveExpression '-' MultiplicativeExpression\n    RelationalExpression : AdditiveExpression\n    | RelationalExpression '<' AdditiveExpression\n    | RelationalExpression '>' AdditiveExpression\n    | RelationalExpression OP_LE AdditiveExpression\n    | RelationalExpression OP_GE AdditiveExpression\n    EqualityExpression : RelationalExpression\n        | EqualityExpression OP_EQ RelationalExpression\n        | EqualityExpression OP_NE RelationalExpression\n    AndExpression : EqualityExpression\n        | AndExpression '&' EqualityExpression\n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression '^' AndExpression\n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression '|' ExclusiveOrExpression\n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression OP_LAND InclusiveOrExpression\n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression OP_LOR ConditionalAndExpression\n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression '?' Expression ':' ConditionalExpression\n    AssignmentExpression : ConditionalExpression\n    | UnaryExpression AssignmentOperator AssignmentExpression\n    AssignmentOperator : '='\n    | ASS_MUL\n    | ASS_DIV\n    | ASS_MOD\n    | ASS_ADD\n    | ASS_SUB\n    | ASS_AND\n    | ASS_OR\n    Expression : AssignmentExpression\n    "
    
_lr_action_items = {'PACKAGE':([0,],[6,]),'IMPORT':([0,3,4,7,20,23,29,35,37,39,73,],[9,9,9,-29,9,-30,-14,-24,-31,-15,-32,]),'CLASS':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,193,194,230,238,248,288,323,],[15,15,15,15,-29,-25,-27,15,-39,-41,-42,-43,-44,15,15,15,-30,-26,-28,-14,-88,-40,15,-24,-31,-15,15,15,-89,-46,-48,-51,-52,-53,-54,-55,15,-85,-44,-32,-89,-47,-36,-49,-50,-81,-84,-89,-35,-80,-69,-78,-79,-89,-87,264,267,-88,-68,-86,15,15,]),'PUBLIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,230,238,248,288,323,],[16,16,16,16,-29,-25,-27,16,-39,-41,-42,-43,-44,16,16,16,-30,-26,-28,-14,-88,-40,16,-24,-31,-15,16,16,-89,-46,-48,-51,-52,-53,-54,-55,16,-85,-44,-32,-89,-47,-36,-49,-50,-81,-84,-89,-35,-80,-69,-78,-79,-89,-87,-88,-68,-86,16,16,]),'PROTECTED':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,230,238,248,288,323,],[17,17,17,17,-29,-25,-27,17,-39,-41,-42,-43,-44,17,17,17,-30,-26,-28,-14,-88,-40,17,-24,-31,-15,17,17,-89,-46,-48,-51,-52,-53,-54,-55,17,-85,-44,-32,-89,-47,-36,-49,-50,-81,-84,-89,-35,-80,-69,-78,-79,-89,-87,-88,-68,-86,17,17,]),'PRIVATE':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,230,238,248,288,323,],[18,18,18,18,-29,-25,-27,18,-39,-41,-42,-43,-44,18,18,18,-30,-26,-28,-14,-88,-40,18,-24,-31,-15,18,18,-89,-46,-48,-51,-52,-53,-54,-55,18,-85,-44,-32,-89,-47,-36,-49,-50,-81,-84,-89,-35,-80,-69,-78,-79,-89,-87,-88,-68,-86,18,18,]),'STATIC':([0,3,4,5,7,8,10,12,14,16,17,18,19,20,21,22,23,24,28,29,30,32,34,35,37,39,40,45,46,47,48,50,51,52,53,54,55,58,59,73,75,76,77,78,79,87,88,93,155,158,160,162,163,172,174,230,238,248,288,323,],[19,19,19,19,-29,-25,-27,19,-39,-41,-42,-43,-44,19,19,19,-30,-26,-28,-14,-88,-40,19,-24,-31,-15,59,59,-89,-46,-48,-51,-52,-53,-54,-55,19,-85,-44,-32,-89,-47,-36,-49,-50,-81,-84,-89,-35,-80,-69,-78,-79,-89,-87,-88,-68,-86,59,59,]),'$end':([1,2,3,4,5,7,8,10,20,21,22,23,24,28,29,34,35,37,39,46,73,75,77,155,],[0,-16,-21,-22,-23,-29,-25,-27,-18,-19,-20,-30,-26,-28,-14,-17,-24,-31,-15,-89,-32,-89,-36,-35,]),'IDENTIFIER':([6,9,13,14,15,16,17,18,19,26,29,30,31,32,36,38,39,40,42,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,105,106,108,109,110,111,112,117,118,119,123,124,126,130,131,152,155,158,159,160,162,163,164,165,167,171,172,173,174,177,186,188,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[26,26,33,-39,-45,-41,-42,-43,-44,-33,-14,-88,41,-40,42,42,-15,61,-34,-88,61,-89,-46,-48,-51,-52,-53,-54,-55,61,86,-85,-44,-1,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,26,-89,-47,-36,-49,-50,86,-81,-84,-2,-163,26,26,-89,-90,-92,-93,86,-100,-95,-97,-98,-99,26,26,187,189,26,-3,-4,26,26,26,-177,-178,26,-175,-176,26,-35,-80,86,-69,-78,-79,26,26,-164,86,-89,-91,-87,-96,26,-114,-116,-118,42,26,26,-215,-216,-217,-218,-219,-220,-221,-222,26,26,26,26,26,26,276,26,278,26,26,26,26,26,26,26,26,-88,-88,26,26,26,26,26,26,-68,-88,26,-86,-94,26,26,26,26,-107,-106,-113,-115,-117,26,61,26,26,26,26,26,-109,-105,26,26,26,61,26,26,-108,26,26,-104,-102,-103,]),';':([10,25,26,27,28,29,35,37,39,42,43,44,46,48,49,50,51,52,53,54,58,73,74,75,77,78,79,82,83,84,85,86,87,88,90,92,93,94,95,96,98,99,100,101,102,103,104,105,108,109,110,112,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,155,156,157,158,160,161,162,163,166,167,172,173,174,175,176,177,179,186,187,188,189,190,191,192,207,209,210,211,214,215,216,238,239,241,242,243,248,249,251,256,257,258,259,260,261,262,263,264,265,266,267,269,271,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,302,306,307,308,310,312,314,316,317,318,319,322,324,325,327,329,331,335,338,339,340,341,343,344,345,346,348,349,350,351,352,353,355,356,357,358,],[29,29,-33,29,39,-14,39,39,-15,-34,29,-88,-89,29,79,-51,-52,-53,-54,-55,-85,39,98,-89,-36,39,-50,-57,163,-58,-60,-76,-81,-84,-163,98,-89,-90,-92,-93,-100,-95,177,-97,-98,-99,-101,98,188,190,192,-119,-223,-213,-179,-211,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-35,-56,163,-80,-69,-72,-78,-79,-77,-164,-89,-91,-87,249,-60,-96,-119,258,261,-114,262,-116,263,-118,-169,-170,-171,-179,-167,-168,-174,-68,-59,-71,-61,-62,-86,-94,-124,311,312,-107,-106,-111,-113,-115,-117,-138,-148,-136,-137,-214,-210,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-70,-182,-180,-181,337,-105,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-89,98,-112,-212,-151,-89,-152,-89,-155,-162,-63,-89,357,98,-104,-153,-154,-64,-102,-103,]),'{':([11,29,30,33,39,40,41,44,45,46,47,48,50,51,52,53,54,57,58,59,74,75,76,77,78,79,81,83,87,88,90,92,93,94,95,96,98,99,101,102,103,105,143,144,155,157,158,160,161,162,163,165,167,169,172,173,174,177,188,190,192,229,230,238,241,244,245,248,249,261,262,263,287,288,291,292,294,302,303,323,324,325,327,335,342,345,346,351,352,357,358,],[30,-14,-88,-38,-15,44,-37,-88,44,-89,-46,-48,-51,-52,-53,-54,-55,44,-85,44,44,-89,-47,-36,-49,-50,44,44,-81,-84,-163,44,-89,-90,-92,-93,-100,-95,-97,-98,-99,44,229,230,-35,44,-80,-69,-72,-78,-79,244,-164,-83,-89,-91,-87,-96,-114,-116,-118,-88,-88,-68,-71,-88,-82,-86,-94,-113,-115,-117,244,44,-158,-159,-160,-70,244,44,-157,-161,-156,44,244,-155,-162,44,-104,-102,-103,]),'BOOLEAN':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,64,-88,64,-89,-46,-48,-51,-52,-53,-54,-55,64,-85,-44,64,-89,-47,-36,-49,-50,-81,-84,64,64,-89,-90,-92,-93,-100,-95,-97,-98,-99,64,64,64,64,64,64,-177,-178,64,-175,-176,64,-35,-80,-69,-78,-79,64,64,-89,-91,-87,-96,64,-114,-116,-118,64,64,-215,-216,-217,-218,-219,-220,-221,-222,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-88,-88,64,64,64,64,64,64,-68,-88,64,-86,-94,64,64,64,64,-107,-106,-113,-115,-117,64,64,64,64,64,64,64,-109,-105,64,64,64,64,64,64,-108,64,64,-104,-102,-103,]),'CHAR':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,65,-88,65,-89,-46,-48,-51,-52,-53,-54,-55,65,-85,-44,65,-89,-47,-36,-49,-50,-81,-84,65,65,-89,-90,-92,-93,-100,-95,-97,-98,-99,65,65,65,65,65,65,-177,-178,65,-175,-176,65,-35,-80,-69,-78,-79,65,65,-89,-91,-87,-96,65,-114,-116,-118,65,65,-215,-216,-217,-218,-219,-220,-221,-222,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-88,-88,65,65,65,65,65,65,-68,-88,65,-86,-94,65,65,65,65,-107,-106,-113,-115,-117,65,65,65,65,65,65,65,-109,-105,65,65,65,65,65,65,-108,65,65,-104,-102,-103,]),'BYTE':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,66,-88,66,-89,-46,-48,-51,-52,-53,-54,-55,66,-85,-44,66,-89,-47,-36,-49,-50,-81,-84,66,66,-89,-90,-92,-93,-100,-95,-97,-98,-99,66,66,66,66,66,66,-177,-178,66,-175,-176,66,-35,-80,-69,-78,-79,66,66,-89,-91,-87,-96,66,-114,-116,-118,66,66,-215,-216,-217,-218,-219,-220,-221,-222,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-88,-88,66,66,66,66,66,66,-68,-88,66,-86,-94,66,66,66,66,-107,-106,-113,-115,-117,66,66,66,66,66,66,66,-109,-105,66,66,66,66,66,66,-108,66,66,-104,-102,-103,]),'SHORT':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,67,-88,67,-89,-46,-48,-51,-52,-53,-54,-55,67,-85,-44,67,-89,-47,-36,-49,-50,-81,-84,67,67,-89,-90,-92,-93,-100,-95,-97,-98,-99,67,67,67,67,67,67,-177,-178,67,-175,-176,67,-35,-80,-69,-78,-79,67,67,-89,-91,-87,-96,67,-114,-116,-118,67,67,-215,-216,-217,-218,-219,-220,-221,-222,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-88,-88,67,67,67,67,67,67,-68,-88,67,-86,-94,67,67,67,67,-107,-106,-113,-115,-117,67,67,67,67,67,67,67,-109,-105,67,67,67,67,67,67,-108,67,67,-104,-102,-103,]),'INT':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,68,-88,68,-89,-46,-48,-51,-52,-53,-54,-55,68,-85,-44,68,-89,-47,-36,-49,-50,-81,-84,68,68,-89,-90,-92,-93,-100,-95,-97,-98,-99,68,68,68,68,68,68,-177,-178,68,-175,-176,68,-35,-80,-69,-78,-79,68,68,-89,-91,-87,-96,68,-114,-116,-118,68,68,-215,-216,-217,-218,-219,-220,-221,-222,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-88,-88,68,68,68,68,68,68,-68,-88,68,-86,-94,68,68,68,68,-107,-106,-113,-115,-117,68,68,68,68,68,68,68,-109,-105,68,68,68,68,68,68,-108,68,68,-104,-102,-103,]),'LONG':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,69,-88,69,-89,-46,-48,-51,-52,-53,-54,-55,69,-85,-44,69,-89,-47,-36,-49,-50,-81,-84,69,69,-89,-90,-92,-93,-100,-95,-97,-98,-99,69,69,69,69,69,69,-177,-178,69,-175,-176,69,-35,-80,-69,-78,-79,69,69,-89,-91,-87,-96,69,-114,-116,-118,69,69,-215,-216,-217,-218,-219,-220,-221,-222,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-88,-88,69,69,69,69,69,69,-68,-88,69,-86,-94,69,69,69,69,-107,-106,-113,-115,-117,69,69,69,69,69,69,69,-109,-105,69,69,69,69,69,69,-108,69,69,-104,-102,-103,]),'FLOAT':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,70,-88,70,-89,-46,-48,-51,-52,-53,-54,-55,70,-85,-44,70,-89,-47,-36,-49,-50,-81,-84,70,70,-89,-90,-92,-93,-100,-95,-97,-98,-99,70,70,70,70,70,70,-177,-178,70,-175,-176,70,-35,-80,-69,-78,-79,70,70,-89,-91,-87,-96,70,-114,-116,-118,70,70,-215,-216,-217,-218,-219,-220,-221,-222,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-88,-88,70,70,70,70,70,70,-68,-88,70,-86,-94,70,70,70,70,-107,-106,-113,-115,-117,70,70,70,70,70,70,70,-109,-105,70,70,70,70,70,70,-108,70,70,-104,-102,-103,]),'DOUBLE':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,71,-88,71,-89,-46,-48,-51,-52,-53,-54,-55,71,-85,-44,71,-89,-47,-36,-49,-50,-81,-84,71,71,-89,-90,-92,-93,-100,-95,-97,-98,-99,71,71,71,71,71,71,-177,-178,71,-175,-176,71,-35,-80,-69,-78,-79,71,71,-89,-91,-87,-96,71,-114,-116,-118,71,71,-215,-216,-217,-218,-219,-220,-221,-222,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-88,-88,71,71,71,71,71,71,-68,-88,71,-86,-94,71,71,71,71,-107,-106,-113,-115,-117,71,71,71,71,71,71,71,-109,-105,71,71,71,71,71,71,-108,71,71,-104,-102,-103,]),'VOID':([14,16,17,18,19,29,30,32,39,40,44,45,46,47,48,50,51,52,53,54,55,58,59,74,75,76,77,78,79,87,88,91,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,152,155,158,160,162,163,164,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,244,246,248,249,251,252,253,256,258,259,261,262,263,287,288,293,295,303,305,309,311,312,313,315,317,323,330,335,337,342,351,352,357,358,],[-39,-41,-42,-43,-44,-14,-88,-40,-15,72,-88,72,-89,-46,-48,-51,-52,-53,-54,-55,72,-85,-44,72,-89,-47,-36,-49,-50,-81,-84,72,72,-89,-90,-92,-93,-100,-95,-97,-98,-99,72,72,72,72,72,72,-177,-178,72,-175,-176,72,-35,-80,-69,-78,-79,72,72,-89,-91,-87,-96,72,-114,-116,-118,72,72,-215,-216,-217,-218,-219,-220,-221,-222,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-88,-88,72,72,72,72,72,72,-68,-88,72,-86,-94,72,72,72,72,-107,-106,-113,-115,-117,72,72,72,72,72,72,72,-109,-105,72,72,72,72,72,72,-108,72,72,-104,-102,-103,]),'.':([25,26,27,42,61,63,64,65,66,67,68,69,70,71,72,90,111,112,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,180,184,185,214,215,251,264,265,266,267,276,278,291,292,294,297,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[36,-33,38,-34,-33,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-163,193,194,218,220,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,194,193,193,194,-167,-168,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'[':([26,42,62,63,64,65,66,67,68,69,70,71,72,112,137,141,145,146,147,148,149,150,179,185,233,251,264,266,267,276,278,291,294,297,314,316,317,318,325,329,346,],[-33,-34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,195,222,-125,-126,-127,-128,-129,-130,-131,195,195,295,-124,-138,-136,-137,-135,-134,295,-160,-140,-132,-124,-124,-133,-161,-139,-162,]),'OP_DIM':([26,42,60,61,62,63,64,65,66,67,68,69,70,71,72,83,85,86,89,90,111,112,157,161,166,167,176,184,185,233,241,247,254,255,291,292,294,302,324,325,346,],[-33,-34,90,-33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,161,166,-76,167,-163,-3,-4,161,-72,-77,-164,166,90,90,90,-71,166,167,167,90,167,-160,-70,167,-161,-162,]),'OP_INC':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,117,118,119,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,165,167,172,173,174,177,179,185,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,214,215,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,264,265,266,267,276,278,287,291,292,293,294,295,297,303,305,309,311,312,313,314,315,316,317,318,319,322,324,325,327,329,330,335,337,340,341,342,343,344,345,346,351,352,353,355,357,358,],[-33,-34,-88,117,-163,117,-89,-90,-92,-93,-100,-95,-97,-98,-99,117,117,117,-119,117,117,117,-177,-178,214,117,-165,-166,-175,-176,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,117,-164,-89,-91,-87,-96,-119,-119,117,-114,-116,-118,117,117,-215,-216,-217,-218,-219,-220,-221,-222,117,117,117,117,117,-167,-168,117,117,117,117,117,117,117,117,117,117,-88,117,117,117,117,117,117,-88,-86,-94,-124,117,117,117,-107,-106,-113,-115,-117,-138,-148,-136,-137,-135,-134,117,-158,-159,117,-160,117,-140,117,117,117,-109,-105,117,-132,117,-124,-124,-133,-89,-89,-157,-161,-156,-139,117,117,-108,-151,-89,117,-152,-89,-155,-162,117,-104,-153,-154,-102,-103,]),'OP_DEC':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,117,118,119,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,165,167,172,173,174,177,179,185,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,214,215,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,264,265,266,267,276,278,287,291,292,293,294,295,297,303,305,309,311,312,313,314,315,316,317,318,319,322,324,325,327,329,330,335,337,340,341,342,343,344,345,346,351,352,353,355,357,358,],[-33,-34,-88,118,-163,118,-89,-90,-92,-93,-100,-95,-97,-98,-99,118,118,118,-119,118,118,118,-177,-178,215,118,-165,-166,-175,-176,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,118,-164,-89,-91,-87,-96,-119,-119,118,-114,-116,-118,118,118,-215,-216,-217,-218,-219,-220,-221,-222,118,118,118,118,118,-167,-168,118,118,118,118,118,118,118,118,118,118,-88,118,118,118,118,118,118,-88,-86,-94,-124,118,118,118,-107,-106,-113,-115,-117,-138,-148,-136,-137,-135,-134,118,-158,-159,118,-160,118,-140,118,118,118,-109,-105,118,-132,118,-124,-124,-133,-89,-89,-157,-161,-156,-139,118,118,-108,-151,-89,118,-152,-89,-155,-162,118,-104,-153,-154,-102,-103,]),'=':([26,42,85,86,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,166,167,176,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,165,-76,-163,-119,197,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-77,-164,165,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'ASS_MUL':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,198,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'ASS_DIV':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,199,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'ASS_MOD':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,200,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'ASS_ADD':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,201,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'ASS_SUB':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,202,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'ASS_AND':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,203,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'ASS_OR':([26,42,90,112,115,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,291,292,294,297,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,204,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,-158,-159,-160,-140,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'*':([26,38,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,43,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,235,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,235,235,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'/':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,236,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,236,236,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'%':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,237,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,237,237,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'+':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,115,117,118,119,120,121,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,151,154,165,167,172,173,174,177,179,185,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,264,265,266,267,276,278,283,284,285,286,287,289,290,291,292,293,294,295,297,299,300,301,303,305,306,307,308,309,311,312,313,314,315,316,317,318,319,322,324,325,327,329,330,335,337,340,341,342,343,344,345,346,351,352,353,355,357,358,],[-33,-34,-88,123,-163,123,-89,-90,-92,-93,-100,-95,-97,-98,-99,123,123,123,-119,-179,123,123,123,-186,-172,-177,-178,-173,123,-165,-166,-175,-176,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,231,-190,123,-164,-89,-91,-87,-96,-119,-119,123,-114,-116,-118,123,123,-215,-216,-217,-218,-219,-220,-221,-222,123,123,-169,123,-170,-171,-179,123,123,-167,-168,-174,123,123,123,123,123,123,123,123,123,123,-88,123,123,123,123,123,123,-88,-86,-94,-124,123,123,123,-107,-106,-113,-115,-117,-138,-148,-136,-137,-135,-134,231,231,231,231,123,-191,-192,-158,-159,123,-160,123,-140,-187,-188,-189,123,123,-182,-180,-181,123,-109,-105,123,-132,123,-124,-124,-133,-89,-89,-157,-161,-156,-139,123,123,-108,-151,-89,123,-152,-89,-155,-162,123,-104,-153,-154,-102,-103,]),'-':([26,42,44,74,90,92,93,94,95,96,98,99,101,102,103,105,106,110,112,115,117,118,119,120,121,123,124,125,126,128,129,130,131,133,135,136,137,139,140,141,143,144,145,146,147,148,149,150,151,154,165,167,172,173,174,177,179,185,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,264,265,266,267,276,278,283,284,285,286,287,289,290,291,292,293,294,295,297,299,300,301,303,305,306,307,308,309,311,312,313,314,315,316,317,318,319,322,324,325,327,329,330,335,337,340,341,342,343,344,345,346,351,352,353,355,357,358,],[-33,-34,-88,124,-163,124,-89,-90,-92,-93,-100,-95,-97,-98,-99,124,124,124,-119,-179,124,124,124,-186,-172,-177,-178,-173,124,-165,-166,-175,-176,-120,-121,-122,-123,-144,-147,-125,-149,-150,-126,-127,-128,-129,-130,-131,232,-190,124,-164,-89,-91,-87,-96,-119,-119,124,-114,-116,-118,124,124,-215,-216,-217,-218,-219,-220,-221,-222,124,124,-169,124,-170,-171,-179,124,124,-167,-168,-174,124,124,124,124,124,124,124,124,124,124,-88,124,124,124,124,124,124,-88,-86,-94,-124,124,124,124,-107,-106,-113,-115,-117,-138,-148,-136,-137,-135,-134,232,232,232,232,124,-191,-192,-158,-159,124,-160,124,-140,-187,-188,-189,124,124,-182,-180,-181,124,-109,-105,124,-132,124,-124,-124,-133,-89,-89,-157,-161,-156,-139,124,124,-108,-151,-89,124,-152,-89,-155,-162,124,-104,-153,-154,-102,-103,]),'<':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,225,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,225,225,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'>':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,226,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,226,226,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'OP_LE':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,227,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,227,227,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'OP_GE':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,-144,-147,-125,228,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,228,228,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'OP_EQ':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,223,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,223,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'OP_NE':([26,42,90,112,115,120,121,125,128,129,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,-121,-122,-123,224,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,-134,224,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'&':([26,42,90,112,115,120,121,125,128,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,-120,221,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-135,221,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'^':([26,42,90,112,115,120,121,125,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,-165,-166,219,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,219,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'|':([26,42,90,112,115,120,121,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,-173,217,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,217,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'OP_LAND':([26,42,90,112,115,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,271,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,-186,-172,213,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,213,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'?':([26,42,90,112,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,271,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,205,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-210,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'OP_LOR':([26,42,90,112,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,185,207,209,210,211,214,215,216,251,264,265,266,267,271,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,340,341,343,344,345,346,353,355,],[-33,-34,-163,-119,-179,206,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-210,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-151,-89,-152,-89,-155,-162,-153,-154,]),'(':([26,42,44,61,62,63,64,65,66,67,68,69,70,71,72,74,85,86,92,93,94,95,96,98,99,101,102,103,105,106,107,110,112,117,118,119,123,124,126,130,131,135,139,141,145,146,147,148,149,150,153,165,166,172,173,174,177,179,185,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,244,248,249,250,251,252,253,256,258,259,261,262,263,264,266,267,276,278,287,293,295,297,303,305,309,311,312,313,314,315,317,318,329,330,335,337,342,351,352,357,358,],[-33,-34,-88,91,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,106,164,-76,106,-89,-90,-92,-93,-100,-95,-97,-98,-99,106,106,186,106,-143,208,208,212,-177,-178,208,-175,-176,-142,-144,-141,-126,-127,-128,-129,-130,-131,234,106,-77,-89,-91,-87,-96,-143,-143,106,-114,-116,-118,106,106,-215,-216,-217,-218,-219,-220,-221,-222,106,212,106,106,212,212,212,212,106,212,212,212,212,212,212,-88,212,212,293,106,212,212,212,-88,-86,-94,305,208,212,212,106,-107,-106,-113,-115,-117,-138,-136,-137,-135,-134,106,106,106,-140,106,106,106,-109,-105,106,-132,212,208,-133,-139,106,106,-108,106,106,-104,-102,-103,]),')':([26,42,64,65,66,67,68,69,70,71,72,86,90,91,104,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,164,166,167,168,170,179,181,182,183,184,185,207,209,210,211,214,215,216,234,240,247,251,254,255,260,264,265,266,267,269,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,293,294,296,297,298,299,300,301,304,306,307,308,309,311,314,316,317,318,319,322,324,325,326,327,329,333,334,336,337,338,339,340,341,343,344,345,346,347,353,355,],[-33,-34,-5,-6,-7,-8,-9,-10,-11,-12,-13,-76,-163,169,-101,-223,-213,-179,-211,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,241,-77,-164,245,-73,-119,251,252,253,-183,-119,-169,-170,-171,-179,-167,-168,-174,297,302,-75,-124,-184,-185,-111,-138,-148,-136,-137,-214,-210,316,317,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,327,-160,329,-140,-145,-187,-188,-189,-74,-182,-180,-181,335,-109,-132,-124,-124,-133,-89,-89,-157,-161,345,-156,-139,350,351,-110,-108,-112,-212,-151,-89,-152,-89,-155,-162,-146,-153,-154,]),',':([26,42,82,84,85,86,90,104,112,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,156,166,167,168,170,175,176,179,207,209,210,211,214,215,216,239,240,242,243,247,251,257,260,264,265,266,267,269,271,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,296,297,298,299,300,301,304,306,307,308,314,316,317,318,319,320,321,322,324,325,326,327,329,331,332,336,338,339,340,341,342,343,344,345,346,347,348,349,353,354,355,356,],[-33,-34,159,-58,-60,-76,-163,-101,-119,-223,-213,-179,-211,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,159,-77,-164,246,-73,159,-60,-119,-169,-170,-171,-179,-167,-168,-174,-59,246,-61,-62,-75,-124,313,-111,-138,-148,-136,-137,-214,-210,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,330,-140,-145,-187,-188,-189,-74,-182,-180,-181,-132,-124,-124,-133,-89,342,-65,-89,-157,-161,330,-156,-139,-89,342,313,-112,-212,-151,-89,-67,-152,-89,-155,-162,-146,-63,-89,-153,-66,-154,-64,]),']':([26,42,90,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,207,209,210,211,214,215,216,251,264,265,266,267,268,269,271,274,275,276,277,278,279,280,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,328,329,339,340,341,343,344,345,346,353,355,],[-33,-34,-163,-223,-213,-179,-211,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,314,-214,-210,-208,-206,-135,-204,-134,-202,318,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,346,-139,-212,-151,-89,-152,-89,-155,-162,-153,-154,]),':':([26,42,90,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,167,179,207,209,210,211,214,215,216,251,264,265,266,267,269,270,271,274,275,276,277,278,279,281,282,283,284,285,286,289,290,291,292,294,297,299,300,301,306,307,308,314,316,317,318,319,322,324,325,327,329,339,340,341,343,344,345,346,353,355,],[-33,-34,-163,-223,-213,-179,-211,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-164,-119,-169,-170,-171,-179,-167,-168,-174,-124,-138,-148,-136,-137,-214,315,-210,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,-191,-192,-158,-159,-160,-140,-187,-188,-189,-182,-180,-181,-132,-124,-124,-133,-89,-89,-157,-161,-156,-139,-212,-151,-89,-152,-89,-155,-162,-153,-154,]),'}':([26,29,30,39,40,42,44,45,46,47,48,50,51,52,53,54,58,74,75,76,77,78,79,87,88,90,92,93,94,95,96,98,99,101,102,103,113,114,115,116,120,121,122,125,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,155,158,160,162,163,167,172,173,174,177,179,188,190,192,207,209,210,211,214,215,216,229,230,238,243,244,248,249,251,261,262,263,264,265,266,267,269,271,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,294,297,299,300,301,303,306,307,308,314,316,317,318,319,320,321,322,323,324,325,327,329,331,332,339,340,341,342,343,344,345,346,348,349,352,353,354,355,356,357,358,],[-33,-14,-88,-15,46,-34,-88,75,-89,-46,-48,-51,-52,-53,-54,-55,-85,93,-89,-47,-36,-49,-50,-81,-84,-163,172,-89,-90,-92,-93,-100,-95,-97,-98,-99,-223,-213,-179,-211,-186,-172,-209,-173,-207,-165,-166,-205,-120,-203,-121,-122,-123,-201,-144,-147,-125,-198,-149,-150,-126,-127,-128,-129,-130,-131,-193,-190,-35,-80,-69,-78,-79,-164,-89,-91,-87,-96,-119,-114,-116,-118,-169,-170,-171,-179,-167,-168,-174,-88,-88,-68,-62,-88,-86,-94,-124,-113,-115,-117,-138,-148,-136,-137,-214,-210,-208,-206,-135,-204,-134,-202,-199,-200,-194,-195,-196,-197,319,322,-191,-192,-158,-159,-160,-140,-187,-188,-189,331,-182,-180,-181,-132,-124,-124,-133,-89,341,-65,-89,344,-157,-161,-156,-139,-89,349,-212,-151,-89,-67,-152,-89,-155,-162,-63,-89,-104,-153,-66,-154,-64,-102,-103,]),'DO':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,188,190,192,248,249,261,262,263,335,351,352,357,358,],[-88,105,105,-89,-90,-92,-93,-100,-95,-97,-98,-99,105,-89,-91,-87,-96,-114,-116,-118,-86,-94,-113,-115,-117,105,105,-104,-102,-103,]),'FOR':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,188,190,192,248,249,261,262,263,335,351,352,357,358,],[-88,107,107,-89,-90,-92,-93,-100,-95,-97,-98,-99,107,-89,-91,-87,-96,-114,-116,-118,-86,-94,-113,-115,-117,107,107,-104,-102,-103,]),'BREAK':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,188,190,192,248,249,261,262,263,335,351,352,357,358,],[-88,108,108,-89,-90,-92,-93,-100,-95,-97,-98,-99,108,-89,-91,-87,-96,-114,-116,-118,-86,-94,-113,-115,-117,108,108,-104,-102,-103,]),'CONTINUE':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,188,190,192,248,249,261,262,263,335,351,352,357,358,],[-88,109,109,-89,-90,-92,-93,-100,-95,-97,-98,-99,109,-89,-91,-87,-96,-114,-116,-118,-86,-94,-113,-115,-117,109,109,-104,-102,-103,]),'RETURN':([44,74,92,93,94,95,96,98,99,101,102,103,105,172,173,174,177,188,190,192,248,249,261,262,263,335,351,352,357,358,],[-88,110,110,-89,-90,-92,-93,-100,-95,-97,-98,-99,110,-89,-91,-87,-96,-114,-116,-118,-86,-94,-113,-115,-117,110,110,-104,-102,-103,]),'~':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,287,293,295,303,305,309,311,312,313,315,317,330,335,337,342,351,352,357,358,],[-88,130,130,-89,-90,-92,-93,-100,-95,-97,-98,-99,130,130,130,130,130,130,-177,-178,130,-175,-176,130,-89,-91,-87,-96,130,-114,-116,-118,130,130,-215,-216,-217,-218,-219,-220,-221,-222,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-88,130,130,130,130,130,130,-88,-86,-94,130,130,130,130,-107,-106,-113,-115,-117,130,130,130,130,130,130,-109,-105,130,130,130,130,130,-108,130,130,-104,-102,-103,]),'!':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,287,293,295,303,305,309,311,312,313,315,317,330,335,337,342,351,352,357,358,],[-88,131,131,-89,-90,-92,-93,-100,-95,-97,-98,-99,131,131,131,131,131,131,-177,-178,131,-175,-176,131,-89,-91,-87,-96,131,-114,-116,-118,131,131,-215,-216,-217,-218,-219,-220,-221,-222,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-88,131,131,131,131,131,131,-88,-86,-94,131,131,131,131,-107,-106,-113,-115,-117,131,131,131,131,131,131,-109,-105,131,131,131,131,131,-108,131,131,-104,-102,-103,]),'THIS':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,165,172,173,174,177,186,188,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,287,293,295,303,305,309,311,312,313,315,317,330,335,337,342,351,352,357,358,],[-88,139,139,-89,-90,-92,-93,-100,-95,-97,-98,-99,139,139,139,139,139,139,-177,-178,139,-175,-176,139,-89,-91,-87,-96,139,-114,-116,-118,266,139,139,-215,-216,-217,-218,-219,-220,-221,-222,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-88,139,139,139,139,139,139,-88,-86,-94,139,139,139,139,-107,-106,-113,-115,-117,139,139,139,139,139,139,-109,-105,139,139,139,139,139,-108,139,139,-104,-102,-103,]),'LITERAL':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,287,293,295,303,305,309,311,312,313,315,317,330,335,337,342,351,352,357,358,],[-88,145,145,-89,-90,-92,-93,-100,-95,-97,-98,-99,145,145,145,145,145,145,-177,-178,145,-175,-176,145,-89,-91,-87,-96,145,-114,-116,-118,145,145,-215,-216,-217,-218,-219,-220,-221,-222,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,-88,145,145,145,145,145,145,-88,-86,-94,145,145,145,145,-107,-106,-113,-115,-117,145,145,145,145,145,145,-109,-105,145,145,145,145,145,-108,145,145,-104,-102,-103,]),'NUM_LITERAL':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,287,293,295,303,305,309,311,312,313,315,317,330,335,337,342,351,352,357,358,],[-88,146,146,-89,-90,-92,-93,-100,-95,-97,-98,-99,146,146,146,146,146,146,-177,-178,146,-175,-176,146,-89,-91,-87,-96,146,-114,-116,-118,146,146,-215,-216,-217,-218,-219,-220,-221,-222,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,-88,146,146,146,146,146,146,-88,-86,-94,146,146,146,146,-107,-106,-113,-115,-117,146,146,146,146,146,146,-109,-105,146,146,146,146,146,-108,146,146,-104,-102,-103,]),'BOOLLIT':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,165,172,173,174,177,186,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,287,293,295,303,305,309,311,312,313,315,317,330,335,337,342,351,352,357,358,],[-88,147,147,-89,-90,-92,-93,-100,-95,-97,-98,-99,147,147,147,147,147,147,-177,-178,147,-175,-176,147,-89,-91,-87,-96,147,-114,-116,-118,147,147,-215,-216,-217,-218,-219,-220,-221,-222,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,-88,147,147,147,147,147,147,-88,-86,-94,147,147,147,147,-107,-106,-113,-115,-117,147,147,147,147,147,147,-109,-105,147,147,147,147,147,-108,147,147,-104,-102,-103,]),'NEW':([44,74,92,93,94,95,96,98,99,101,102,103,105,106,110,117,118,119,123,124,126,130,131,165,172,173,174,177,186,188,190,192,194,195,196,197,198,199,200,201,202,203,204,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,229,231,232,234,235,236,237,244,248,249,251,252,253,256,258,259,261,262,263,287,293,295,303,305,309,311,312,313,315,317,330,335,337,342,351,352,357,358,],[-88,152,152,-89,-90,-92,-93,-100,-95,-97,-98,-99,152,152,152,152,152,152,-177,-178,152,-175,-176,152,-89,-91,-87,-96,152,-114,-116,-118,152,152,152,-215,-216,-217,-218,-219,-220,-221,-222,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-88,152,152,152,152,152,152,-88,-86,-94,152,152,152,152,-107,-106,-113,-115,-117,152,152,152,152,152,152,-109,-105,152,152,152,152,152,-108,152,152,-104,-102,-103,]),'WHILE':([93,98,99,101,102,103,172,174,177,178,188,190,192,248,261,262,263,352,357,358,],[-89,-100,-95,-97,-98,-99,-89,-87,-96,250,-114,-116,-118,-86,-113,-115,-117,-104,-102,-103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'ProgramFile':([0,],[2,]),'PackageStatement':([0,],[3,]),'ImportStatements':([0,3,],[4,20,]),'TypeDeclarations':([0,3,4,20,],[5,21,22,34,]),'ImportStatement':([0,3,4,20,],[7,7,23,23,]),'TypeDeclarationOptSemi':([0,3,4,5,20,21,22,34,],[8,8,8,24,8,24,24,24,]),'TypeDeclaration':([0,3,4,5,20,21,22,34,40,45,288,323,],[10,10,10,10,10,10,10,10,54,54,54,54,]),'ClassHeader':([0,3,4,5,20,21,22,34,40,45,288,323,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'Modifiers':([0,3,4,5,20,21,22,34,40,45,288,323,],[12,12,12,12,12,12,12,12,55,55,55,55,]),'ClassWord':([0,3,4,5,12,20,21,22,34,40,45,55,288,323,],[13,13,13,13,31,13,13,13,13,13,13,31,13,13,]),'Modifier':([0,3,4,5,12,20,21,22,34,40,45,55,288,323,],[14,14,14,14,32,14,14,14,14,14,14,32,14,14,]),'QualifiedName':([6,9,40,45,55,74,91,92,105,106,110,117,118,119,126,152,164,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,246,251,252,253,256,287,288,293,295,303,305,309,313,315,317,323,330,335,342,351,],[25,27,63,63,63,112,63,112,179,185,179,179,179,179,179,63,63,179,112,179,179,179,179,179,185,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,63,179,179,179,179,179,63,179,179,179,179,179,179,179,179,63,179,179,179,179,]),'SemiColons':([10,25,27,43,48,],[28,35,37,73,78,]),'push':([30,44,229,230,244,],[40,74,287,288,303,]),'FieldDeclarations':([40,288,],[45,323,]),'FieldDeclarationOptSemi':([40,45,288,323,],[47,76,47,76,]),'FieldDeclaration':([40,45,288,323,],[48,48,48,48,]),'FieldVariableDeclaration':([40,45,288,323,],[49,49,49,49,]),'MethodDeclaration':([40,45,288,323,],[50,50,50,50,]),'ConstructorDeclaration':([40,45,288,323,],[51,51,51,51,]),'StaticInitializer':([40,45,288,323,],[52,52,52,52,]),'NonStaticInitializer':([40,45,288,323,],[53,53,53,53,]),'TypeSpecifier':([40,45,55,74,91,92,164,186,246,288,323,],[56,56,80,97,171,97,171,97,171,56,56,]),'ConstructorDeclarator':([40,45,55,288,323,],[57,57,81,57,57,]),'Block':([40,45,57,59,74,81,83,92,105,157,288,323,335,351,],[58,58,87,88,103,158,162,103,103,162,58,58,103,103,]),'TypeName':([40,45,55,74,91,92,152,164,186,246,288,323,],[60,60,60,60,60,60,233,60,60,60,60,60,]),'PrimitiveType':([40,45,55,74,91,92,105,106,110,117,118,119,126,152,164,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,246,251,252,253,256,287,288,293,295,303,305,309,313,315,317,323,330,335,342,351,],[62,62,62,111,62,111,180,184,180,180,180,180,180,62,62,180,111,180,180,180,180,180,184,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,62,180,180,180,180,180,62,180,180,180,180,180,180,180,180,62,180,180,180,180,]),'pop':([46,75,93,172,319,322,331,341,344,349,],[77,155,174,248,340,343,348,353,355,356,]),'VariableDeclarators':([56,80,97,],[82,156,175,]),'MethodDeclarator':([56,80,],[83,157,]),'VariableDeclarator':([56,80,97,159,],[84,84,84,239,]),'DeclaratorName':([56,80,97,159,171,],[85,85,176,176,247,]),'Dims':([60,184,185,233,291,],[89,254,255,292,324,]),'LocalVariableDeclarationsAndStatements':([74,],[92,]),'LocalVariableDeclarationOrStatement':([74,92,],[94,173,]),'LocalVariableDeclarationStatement':([74,92,186,],[95,95,259,]),'Statement':([74,92,105,335,351,],[96,96,178,352,358,]),'EmptyStatement':([74,92,105,335,351,],[99,99,99,99,99,]),'ExpressionStatement':([74,92,105,186,309,313,335,351,],[100,100,100,260,260,338,100,100,]),'IterationStatement':([74,92,105,335,351,],[101,101,101,101,101,]),'JumpStatement':([74,92,105,335,351,],[102,102,102,102,102,]),'Expression':([74,92,105,106,110,165,186,195,205,208,212,222,234,256,287,293,295,303,305,309,313,330,335,342,351,],[104,104,104,181,191,243,104,268,270,272,273,280,298,310,243,298,328,243,333,104,104,347,104,243,104,]),'AssignmentExpression':([74,92,105,106,110,165,186,195,196,205,208,212,222,234,256,287,293,295,303,305,309,313,330,335,342,351,],[113,113,113,113,113,113,113,113,269,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'ConditionalExpression':([74,92,105,106,110,165,186,195,196,205,208,212,222,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,339,114,114,114,114,]),'UnaryExpression':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,252,253,256,287,293,295,303,305,309,313,315,330,335,342,351,],[115,115,115,115,115,207,209,211,216,115,115,115,115,115,211,115,115,211,211,211,211,115,211,211,211,211,211,211,211,211,115,211,211,211,211,211,115,115,115,115,115,115,115,115,211,115,115,115,115,]),'ConditionalOrExpression':([74,92,105,106,110,165,186,195,196,205,208,212,222,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ArithmeticUnaryOperator':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,252,253,256,287,293,295,303,305,309,313,315,330,335,342,351,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'CastExpression':([74,92,105,106,110,119,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,252,253,256,287,293,295,303,305,309,313,315,330,335,342,351,],[120,120,120,120,120,210,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,299,300,301,307,308,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'LogicalUnaryExpression':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,306,121,121,121,121,121,121,121,121,121,121,121,306,121,121,121,121,]),'ConditionalAndExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,222,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[122,122,122,122,122,122,122,122,122,122,271,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'PostfixExpression':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'LogicalUnaryOperator':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'InclusiveOrExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,213,222,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[127,127,127,127,127,127,127,127,127,127,127,127,127,274,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'PrimaryExpression':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'RealPostfixExpression':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'ExclusiveOrExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,213,217,222,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,275,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'NotJustName':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'AndExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,213,217,219,222,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,277,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'SpecialName':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'NewAllocationExpression':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'ComplexPrimary':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'EqualityExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,213,217,219,221,222,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,279,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'PlainNewAllocationExpression':([74,92,105,106,110,117,118,119,126,165,186,194,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[140,140,140,140,140,140,140,140,140,140,140,265,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'ComplexPrimaryNoParenthesis':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'RelationalExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,281,282,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'ArrayAllocationExpression':([74,92,105,106,110,117,118,119,126,165,186,194,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'ClassAllocationExpression':([74,92,105,106,110,117,118,119,126,165,186,194,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'ArrayAccess':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'FieldAccess':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'MethodCall':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'AdditiveExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,283,284,285,286,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'MethodAccess':([74,92,105,106,110,117,118,119,126,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,235,236,237,251,252,253,256,287,293,295,303,305,309,313,315,317,330,335,342,351,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'MultiplicativeExpression':([74,92,105,106,110,165,186,195,196,205,206,208,212,213,217,219,221,222,223,224,225,226,227,228,231,232,234,256,287,293,295,303,305,309,313,315,330,335,342,351,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,289,290,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'MethodBody':([83,157,],[160,238,]),'ParameterList':([91,164,],[168,240,]),'Parameter':([91,164,246,],[170,170,304,]),'PrimitiveTypeExpression':([106,212,],[182,182,]),'ClassTypeExpression':([106,212,],[183,183,]),'AssignmentOperator':([115,],[196,]),'VariableInitializer':([165,287,303,342,],[242,321,321,354,]),'ForInit':([186,],[256,]),'ExpressionStatements':([186,309,],[257,336,]),'DimExprs':([233,],[291,]),'DimExpr':([233,291,],[294,325,]),'ArgumentList':([234,293,],[296,326,]),'ForExpr':([256,],[309,]),'ArrayInitializers':([287,303,],[320,332,]),'ForIncr':([309,],[334,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('TypeSpecifier -> TypeName','TypeSpecifier',1,'p_TypeSpecifier','dowhile_yacc.py',78),
  ('TypeSpecifier -> TypeName Dims','TypeSpecifier',2,'p_TypeSpecifier','dowhile_yacc.py',79),
  ('TypeName -> PrimitiveType','TypeName',1,'p_TypeName','dowhile_yacc.py',87),
  ('TypeName -> QualifiedName','TypeName',1,'p_TypeName','dowhile_yacc.py',88),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',93),
  ('PrimitiveType -> CHAR','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',94),
  ('PrimitiveType -> BYTE','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',95),
  ('PrimitiveType -> SHORT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',96),
  ('PrimitiveType -> INT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',97),
  ('PrimitiveType -> LONG','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',98),
  ('PrimitiveType -> FLOAT','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',99),
  ('PrimitiveType -> DOUBLE','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',100),
  ('PrimitiveType -> VOID','PrimitiveType',1,'p_PrimitiveType','dowhile_yacc.py',101),
  ('SemiColons -> ;','SemiColons',1,'p_SemiColons','dowhile_yacc.py',106),
  ('SemiColons -> SemiColons ;','SemiColons',2,'p_SemiColons','dowhile_yacc.py',107),
  ('CompilationUnit -> ProgramFile','CompilationUnit',1,'p_CompilationUnit','dowhile_yacc.py',115),
  ('ProgramFile -> PackageStatement ImportStatements TypeDeclarations','ProgramFile',3,'p_ProgramFile','dowhile_yacc.py',120),
  ('ProgramFile -> PackageStatement ImportStatements','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',121),
  ('ProgramFile -> PackageStatement TypeDeclarations','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',122),
  ('ProgramFile -> ImportStatements TypeDeclarations','ProgramFile',2,'p_ProgramFile','dowhile_yacc.py',123),
  ('ProgramFile -> PackageStatement','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',124),
  ('ProgramFile -> ImportStatements','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',125),
  ('ProgramFile -> TypeDeclarations','ProgramFile',1,'p_ProgramFile','dowhile_yacc.py',126),
  ('PackageStatement -> PACKAGE QualifiedName SemiColons','PackageStatement',3,'p_PackageStatement','dowhile_yacc.py',134),
  ('TypeDeclarations -> TypeDeclarationOptSemi','TypeDeclarations',1,'p_TypeDeclarations','dowhile_yacc.py',139),
  ('TypeDeclarations -> TypeDeclarations TypeDeclarationOptSemi','TypeDeclarations',2,'p_TypeDeclarations','dowhile_yacc.py',140),
  ('TypeDeclarationOptSemi -> TypeDeclaration','TypeDeclarationOptSemi',1,'p_TypeDeclarationOptSemi','dowhile_yacc.py',148),
  ('TypeDeclarationOptSemi -> TypeDeclaration SemiColons','TypeDeclarationOptSemi',2,'p_TypeDeclarationOptSemi','dowhile_yacc.py',149),
  ('ImportStatements -> ImportStatement','ImportStatements',1,'p_ImportStatements','dowhile_yacc.py',154),
  ('ImportStatements -> ImportStatements ImportStatement','ImportStatements',2,'p_ImportStatements','dowhile_yacc.py',155),
  ('ImportStatement -> IMPORT QualifiedName SemiColons','ImportStatement',3,'p_ImportStatement','dowhile_yacc.py',163),
  ('ImportStatement -> IMPORT QualifiedName . * SemiColons','ImportStatement',5,'p_ImportStatement','dowhile_yacc.py',164),
  ('QualifiedName -> IDENTIFIER','QualifiedName',1,'p_QualifiedName','dowhile_yacc.py',169),
  ('QualifiedName -> QualifiedName . IDENTIFIER','QualifiedName',3,'p_QualifiedName','dowhile_yacc.py',170),
  ('TypeDeclaration -> ClassHeader { push FieldDeclarations } pop','TypeDeclaration',6,'p_TypeDeclaration','dowhile_yacc.py',178),
  ('TypeDeclaration -> ClassHeader { push } pop','TypeDeclaration',5,'p_TypeDeclaration','dowhile_yacc.py',179),
  ('ClassHeader -> Modifiers ClassWord IDENTIFIER','ClassHeader',3,'p_ClassHeader','dowhile_yacc.py',184),
  ('ClassHeader -> ClassWord IDENTIFIER','ClassHeader',2,'p_ClassHeader','dowhile_yacc.py',185),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','dowhile_yacc.py',196),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','dowhile_yacc.py',197),
  ('Modifier -> PUBLIC','Modifier',1,'p_Modifier','dowhile_yacc.py',205),
  ('Modifier -> PROTECTED','Modifier',1,'p_Modifier','dowhile_yacc.py',206),
  ('Modifier -> PRIVATE','Modifier',1,'p_Modifier','dowhile_yacc.py',207),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','dowhile_yacc.py',208),
  ('ClassWord -> CLASS','ClassWord',1,'p_ClassWord','dowhile_yacc.py',213),
  ('FieldDeclarations -> FieldDeclarationOptSemi','FieldDeclarations',1,'p_FieldDeclarations','dowhile_yacc.py',217),
  ('FieldDeclarations -> FieldDeclarations FieldDeclarationOptSemi','FieldDeclarations',2,'p_FieldDeclarations','dowhile_yacc.py',218),
  ('FieldDeclarationOptSemi -> FieldDeclaration','FieldDeclarationOptSemi',1,'p_FieldDeclarationOptSemi','dowhile_yacc.py',226),
  ('FieldDeclarationOptSemi -> FieldDeclaration SemiColons','FieldDeclarationOptSemi',2,'p_FieldDeclarationOptSemi','dowhile_yacc.py',227),
  ('FieldDeclaration -> FieldVariableDeclaration ;','FieldDeclaration',2,'p_FieldDeclaration','dowhile_yacc.py',235),
  ('FieldDeclaration -> MethodDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',236),
  ('FieldDeclaration -> ConstructorDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',237),
  ('FieldDeclaration -> StaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',238),
  ('FieldDeclaration -> NonStaticInitializer','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',239),
  ('FieldDeclaration -> TypeDeclaration','FieldDeclaration',1,'p_FieldDeclaration','dowhile_yacc.py',240),
  ('FieldVariableDeclaration -> Modifiers TypeSpecifier VariableDeclarators','FieldVariableDeclaration',3,'p_FieldVariableDeclaration','dowhile_yacc.py',248),
  ('FieldVariableDeclaration -> TypeSpecifier VariableDeclarators','FieldVariableDeclaration',2,'p_FieldVariableDeclaration','dowhile_yacc.py',249),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','dowhile_yacc.py',271),
  ('VariableDeclarators -> VariableDeclarators , VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','dowhile_yacc.py',272),
  ('VariableDeclarator -> DeclaratorName','VariableDeclarator',1,'p_VariableDeclarator','dowhile_yacc.py',280),
  ('VariableDeclarator -> DeclaratorName = VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','dowhile_yacc.py',281),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','dowhile_yacc.py',292),
  ('VariableInitializer -> { push } pop','VariableInitializer',4,'p_VariableInitializer','dowhile_yacc.py',293),
  ('VariableInitializer -> { push ArrayInitializers } pop','VariableInitializer',5,'p_VariableInitializer','dowhile_yacc.py',294),
  ('ArrayInitializers -> VariableInitializer','ArrayInitializers',1,'p_ArrayInitializers','dowhile_yacc.py',302),
  ('ArrayInitializers -> ArrayInitializers , VariableInitializer','ArrayInitializers',3,'p_ArrayInitializers','dowhile_yacc.py',303),
  ('ArrayInitializers -> ArrayInitializers ,','ArrayInitializers',2,'p_ArrayInitializers','dowhile_yacc.py',304),
  ('MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',4,'p_MethodDeclaration','dowhile_yacc.py',312),
  ('MethodDeclaration -> TypeSpecifier MethodDeclarator MethodBody','MethodDeclaration',3,'p_MethodDeclaration','dowhile_yacc.py',313),
  ('MethodDeclarator -> DeclaratorName ( ParameterList )','MethodDeclarator',4,'p_MethodDeclarator','dowhile_yacc.py',328),
  ('MethodDeclarator -> DeclaratorName ( )','MethodDeclarator',3,'p_MethodDeclarator','dowhile_yacc.py',329),
  ('MethodDeclarator -> MethodDeclarator OP_DIM','MethodDeclarator',2,'p_MethodDeclarator','dowhile_yacc.py',330),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','dowhile_yacc.py',342),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','dowhile_yacc.py',343),
  ('Parameter -> TypeSpecifier DeclaratorName','Parameter',2,'p_Parameter','dowhile_yacc.py',351),
  ('DeclaratorName -> IDENTIFIER','DeclaratorName',1,'p_DeclaratorName','dowhile_yacc.py',360),
  ('DeclaratorName -> DeclaratorName OP_DIM','DeclaratorName',2,'p_DeclaratorName','dowhile_yacc.py',361),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','dowhile_yacc.py',370),
  ('MethodBody -> ;','MethodBody',1,'p_MethodBody','dowhile_yacc.py',371),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Block','ConstructorDeclaration',3,'p_ConstructorDeclaration','dowhile_yacc.py',376),
  ('ConstructorDeclaration -> ConstructorDeclarator Block','ConstructorDeclaration',2,'p_ConstructorDeclaration','dowhile_yacc.py',377),
  ('ConstructorDeclarator -> IDENTIFIER ( ParameterList )','ConstructorDeclarator',4,'p_ConstructorDeclarator','dowhile_yacc.py',390),
  ('ConstructorDeclarator -> IDENTIFIER ( )','ConstructorDeclarator',3,'p_ConstructorDeclarator','dowhile_yacc.py',391),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','dowhile_yacc.py',403),
  ('NonStaticInitializer -> Block','NonStaticInitializer',1,'p_NonStaticInitializer','dowhile_yacc.py',408),
  ('Block -> { push LocalVariableDeclarationsAndStatements } pop','Block',5,'p_Block','dowhile_yacc.py',413),
  ('Block -> { push } pop','Block',4,'p_Block','dowhile_yacc.py',414),
  ('push -> <empty>','push',0,'p_push','dowhile_yacc.py',421),
  ('pop -> <empty>','pop',0,'p_pop','dowhile_yacc.py',427),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',1,'p_LocalVariableDeclarationsAndStatements','dowhile_yacc.py',433),
  ('LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement','LocalVariableDeclarationsAndStatements',2,'p_LocalVariableDeclarationsAndStatements','dowhile_yacc.py',434),
  ('LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','dowhile_yacc.py',442),
  ('LocalVariableDeclarationOrStatement -> Statement','LocalVariableDeclarationOrStatement',1,'p_LocalVariableDeclarationOrStatement','dowhile_yacc.py',443),
  ('LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators ;','LocalVariableDeclarationStatement',3,'p_LocalVariableDeclarationStatement','dowhile_yacc.py',451),
  ('Statement -> EmptyStatement','Statement',1,'p_Statement','dowhile_yacc.py',465),
  ('Statement -> ExpressionStatement ;','Statement',2,'p_Statement','dowhile_yacc.py',466),
  ('Statement -> IterationStatement','Statement',1,'p_Statement','dowhile_yacc.py',467),
  ('Statement -> JumpStatement','Statement',1,'p_Statement','dowhile_yacc.py',468),
  ('Statement -> Block','Statement',1,'p_Statement','dowhile_yacc.py',469),
  ('EmptyStatement -> ;','EmptyStatement',1,'p_EmptyStatement','dowhile_yacc.py',477),
  ('ExpressionStatement -> Expression','ExpressionStatement',1,'p_ExpressionStatement','dowhile_yacc.py',482),
  ('IterationStatement -> DO Statement WHILE ( Expression ) ;','IterationStatement',7,'p_IterationStatement','dowhile_yacc.py',487),
  ('IterationStatement -> FOR ( ForInit ForExpr ForIncr ) Statement','IterationStatement',7,'p_IterationStatement','dowhile_yacc.py',488),
  ('IterationStatement -> FOR ( ForInit ForExpr ) Statement','IterationStatement',6,'p_IterationStatement','dowhile_yacc.py',489),
  ('ForInit -> ExpressionStatements ;','ForInit',2,'p_ForInit','dowhile_yacc.py',494),
  ('ForInit -> LocalVariableDeclarationStatement','ForInit',1,'p_ForInit','dowhile_yacc.py',495),
  ('ForInit -> ;','ForInit',1,'p_ForInit','dowhile_yacc.py',496),
  ('ForExpr -> Expression ;','ForExpr',2,'p_ForExpr','dowhile_yacc.py',504),
  ('ForExpr -> ;','ForExpr',1,'p_ForExpr','dowhile_yacc.py',505),
  ('ForIncr -> ExpressionStatements','ForIncr',1,'p_ForIncr','dowhile_yacc.py',513),
  ('ExpressionStatements -> ExpressionStatement','ExpressionStatements',1,'p_ExpressionStatements','dowhile_yacc.py',517),
  ('ExpressionStatements -> ExpressionStatements , ExpressionStatement','ExpressionStatements',3,'p_ExpressionStatements','dowhile_yacc.py',518),
  ('JumpStatement -> BREAK IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',526),
  ('JumpStatement -> BREAK ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',527),
  ('JumpStatement -> CONTINUE IDENTIFIER ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',528),
  ('JumpStatement -> CONTINUE ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',529),
  ('JumpStatement -> RETURN Expression ;','JumpStatement',3,'p_JumpStatement','dowhile_yacc.py',530),
  ('JumpStatement -> RETURN ;','JumpStatement',2,'p_JumpStatement','dowhile_yacc.py',531),
  ('PrimaryExpression -> QualifiedName','PrimaryExpression',1,'p_PrimaryExpression','dowhile_yacc.py',536),
  ('PrimaryExpression -> NotJustName','PrimaryExpression',1,'p_PrimaryExpression','dowhile_yacc.py',537),
  ('NotJustName -> SpecialName','NotJustName',1,'p_NotJustName','dowhile_yacc.py',542),
  ('NotJustName -> NewAllocationExpression','NotJustName',1,'p_NotJustName','dowhile_yacc.py',543),
  ('NotJustName -> ComplexPrimary','NotJustName',1,'p_NotJustName','dowhile_yacc.py',544),
  ('ComplexPrimary -> ( Expression )','ComplexPrimary',3,'p_ComplexPrimary','dowhile_yacc.py',549),
  ('ComplexPrimary -> ComplexPrimaryNoParenthesis','ComplexPrimary',1,'p_ComplexPrimary','dowhile_yacc.py',550),
  ('ComplexPrimaryNoParenthesis -> LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',558),
  ('ComplexPrimaryNoParenthesis -> NUM_LITERAL','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',559),
  ('ComplexPrimaryNoParenthesis -> BOOLLIT','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',560),
  ('ComplexPrimaryNoParenthesis -> ArrayAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',561),
  ('ComplexPrimaryNoParenthesis -> FieldAccess','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',562),
  ('ComplexPrimaryNoParenthesis -> MethodCall','ComplexPrimaryNoParenthesis',1,'p_ComplexPrimaryNoParenthesis','dowhile_yacc.py',563),
  ('ArrayAccess -> QualifiedName [ Expression ]','ArrayAccess',4,'p_ArrayAccess','dowhile_yacc.py',578),
  ('ArrayAccess -> ComplexPrimary [ Expression ]','ArrayAccess',4,'p_ArrayAccess','dowhile_yacc.py',579),
  ('FieldAccess -> NotJustName . IDENTIFIER','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',584),
  ('FieldAccess -> RealPostfixExpression . IDENTIFIER','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',585),
  ('FieldAccess -> QualifiedName . THIS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',586),
  ('FieldAccess -> QualifiedName . CLASS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',587),
  ('FieldAccess -> PrimitiveType . CLASS','FieldAccess',3,'p_FieldAccess','dowhile_yacc.py',588),
  ('MethodCall -> MethodAccess ( ArgumentList )','MethodCall',4,'p_MethodCall','dowhile_yacc.py',593),
  ('MethodCall -> MethodAccess ( )','MethodCall',3,'p_MethodCall','dowhile_yacc.py',594),
  ('MethodAccess -> ComplexPrimaryNoParenthesis','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',599),
  ('MethodAccess -> SpecialName','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',600),
  ('MethodAccess -> QualifiedName','MethodAccess',1,'p_MethodAccess','dowhile_yacc.py',601),
  ('SpecialName -> THIS','SpecialName',1,'p_SpecialName','dowhile_yacc.py',606),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','dowhile_yacc.py',611),
  ('ArgumentList -> ArgumentList , Expression','ArgumentList',3,'p_ArgumentList','dowhile_yacc.py',612),
  ('NewAllocationExpression -> PlainNewAllocationExpression','NewAllocationExpression',1,'p_NewAllocationExpression','dowhile_yacc.py',620),
  ('NewAllocationExpression -> QualifiedName . PlainNewAllocationExpression','NewAllocationExpression',3,'p_NewAllocationExpression','dowhile_yacc.py',621),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','dowhile_yacc.py',629),
  ('PlainNewAllocationExpression -> ClassAllocationExpression','PlainNewAllocationExpression',1,'p_PlainNewAllocationExpression','dowhile_yacc.py',630),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { push } pop','PlainNewAllocationExpression',5,'p_PlainNewAllocationExpression','dowhile_yacc.py',631),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { push } pop','PlainNewAllocationExpression',5,'p_PlainNewAllocationExpression','dowhile_yacc.py',632),
  ('PlainNewAllocationExpression -> ArrayAllocationExpression { push ArrayInitializers } pop','PlainNewAllocationExpression',6,'p_PlainNewAllocationExpression','dowhile_yacc.py',633),
  ('PlainNewAllocationExpression -> ClassAllocationExpression { push FieldDeclarations } pop','PlainNewAllocationExpression',6,'p_PlainNewAllocationExpression','dowhile_yacc.py',634),
  ('ClassAllocationExpression -> NEW TypeName ( ArgumentList )','ClassAllocationExpression',5,'p_ClassAllocationExpression','dowhile_yacc.py',642),
  ('ClassAllocationExpression -> NEW TypeName ( )','ClassAllocationExpression',4,'p_ClassAllocationExpression','dowhile_yacc.py',643),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs Dims','ArrayAllocationExpression',4,'p_ArrayAllocationExpression','dowhile_yacc.py',648),
  ('ArrayAllocationExpression -> NEW TypeName DimExprs','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','dowhile_yacc.py',649),
  ('ArrayAllocationExpression -> NEW TypeName Dims','ArrayAllocationExpression',3,'p_ArrayAllocationExpression','dowhile_yacc.py',650),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','dowhile_yacc.py',655),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','dowhile_yacc.py',656),
  ('DimExpr -> [ Expression ]','DimExpr',3,'p_DimExpr','dowhile_yacc.py',664),
  ('Dims -> OP_DIM','Dims',1,'p_Dims','dowhile_yacc.py',669),
  ('Dims -> Dims OP_DIM','Dims',2,'p_Dims','dowhile_yacc.py',670),
  ('PostfixExpression -> PrimaryExpression','PostfixExpression',1,'p_PostfixExpression','dowhile_yacc.py',678),
  ('PostfixExpression -> RealPostfixExpression','PostfixExpression',1,'p_PostfixExpression','dowhile_yacc.py',679),
  ('RealPostfixExpression -> PostfixExpression OP_INC','RealPostfixExpression',2,'p_RealPostfixExpression','dowhile_yacc.py',684),
  ('RealPostfixExpression -> PostfixExpression OP_DEC','RealPostfixExpression',2,'p_RealPostfixExpression','dowhile_yacc.py',685),
  ('UnaryExpression -> OP_INC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',696),
  ('UnaryExpression -> OP_DEC UnaryExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',697),
  ('UnaryExpression -> ArithmeticUnaryOperator CastExpression','UnaryExpression',2,'p_UnaryExpression','dowhile_yacc.py',698),
  ('UnaryExpression -> LogicalUnaryExpression','UnaryExpression',1,'p_UnaryExpression','dowhile_yacc.py',699),
  ('LogicalUnaryExpression -> PostfixExpression','LogicalUnaryExpression',1,'p_LogicalUnaryExpression','dowhile_yacc.py',720),
  ('LogicalUnaryExpression -> LogicalUnaryOperator UnaryExpression','LogicalUnaryExpression',2,'p_LogicalUnaryExpression','dowhile_yacc.py',721),
  ('LogicalUnaryOperator -> ~','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','dowhile_yacc.py',733),
  ('LogicalUnaryOperator -> !','LogicalUnaryOperator',1,'p_LogicalUnaryOperator','dowhile_yacc.py',734),
  ('ArithmeticUnaryOperator -> +','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','dowhile_yacc.py',739),
  ('ArithmeticUnaryOperator -> -','ArithmeticUnaryOperator',1,'p_ArithmeticUnaryOperator','dowhile_yacc.py',740),
  ('CastExpression -> UnaryExpression','CastExpression',1,'p_CastExpression','dowhile_yacc.py',745),
  ('CastExpression -> ( PrimitiveTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',746),
  ('CastExpression -> ( ClassTypeExpression ) CastExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',747),
  ('CastExpression -> ( Expression ) LogicalUnaryExpression','CastExpression',4,'p_CastExpression','dowhile_yacc.py',748),
  ('PrimitiveTypeExpression -> PrimitiveType','PrimitiveTypeExpression',1,'p_PrimitiveTypeExpression','dowhile_yacc.py',756),
  ('PrimitiveTypeExpression -> PrimitiveType Dims','PrimitiveTypeExpression',2,'p_PrimitiveTypeExpression','dowhile_yacc.py',757),
  ('ClassTypeExpression -> QualifiedName Dims','ClassTypeExpression',2,'p_ClassTypeExpression','dowhile_yacc.py',765),
  ('MultiplicativeExpression -> CastExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','dowhile_yacc.py',770),
  ('MultiplicativeExpression -> MultiplicativeExpression * CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',771),
  ('MultiplicativeExpression -> MultiplicativeExpression / CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',772),
  ('MultiplicativeExpression -> MultiplicativeExpression % CastExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','dowhile_yacc.py',773),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','dowhile_yacc.py',789),
  ('AdditiveExpression -> AdditiveExpression + MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','dowhile_yacc.py',790),
  ('AdditiveExpression -> AdditiveExpression - MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','dowhile_yacc.py',791),
  ('RelationalExpression -> AdditiveExpression','RelationalExpression',1,'p_RelationalExpression','dowhile_yacc.py',808),
  ('RelationalExpression -> RelationalExpression < AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',809),
  ('RelationalExpression -> RelationalExpression > AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',810),
  ('RelationalExpression -> RelationalExpression OP_LE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',811),
  ('RelationalExpression -> RelationalExpression OP_GE AdditiveExpression','RelationalExpression',3,'p_RelationalExpression','dowhile_yacc.py',812),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','dowhile_yacc.py',830),
  ('EqualityExpression -> EqualityExpression OP_EQ RelationalExpression','EqualityExpression',3,'p_EqualityExpression','dowhile_yacc.py',831),
  ('EqualityExpression -> EqualityExpression OP_NE RelationalExpression','EqualityExpression',3,'p_EqualityExpression','dowhile_yacc.py',832),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','dowhile_yacc.py',848),
  ('AndExpression -> AndExpression & EqualityExpression','AndExpression',3,'p_AndExpression','dowhile_yacc.py',849),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','dowhile_yacc.py',861),
  ('ExclusiveOrExpression -> ExclusiveOrExpression ^ AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','dowhile_yacc.py',862),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','dowhile_yacc.py',872),
  ('InclusiveOrExpression -> InclusiveOrExpression | ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','dowhile_yacc.py',873),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','dowhile_yacc.py',884),
  ('ConditionalAndExpression -> ConditionalAndExpression OP_LAND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','dowhile_yacc.py',885),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','dowhile_yacc.py',896),
  ('ConditionalOrExpression -> ConditionalOrExpression OP_LOR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','dowhile_yacc.py',897),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','dowhile_yacc.py',908),
  ('ConditionalExpression -> ConditionalOrExpression ? Expression : ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','dowhile_yacc.py',909),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','dowhile_yacc.py',917),
  ('AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression','AssignmentExpression',3,'p_AssignmentExpression','dowhile_yacc.py',918),
  ('AssignmentOperator -> =','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',946),
  ('AssignmentOperator -> ASS_MUL','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',947),
  ('AssignmentOperator -> ASS_DIV','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',948),
  ('AssignmentOperator -> ASS_MOD','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',949),
  ('AssignmentOperator -> ASS_ADD','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',950),
  ('AssignmentOperator -> ASS_SUB','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',951),
  ('AssignmentOperator -> ASS_AND','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',952),
  ('AssignmentOperator -> ASS_OR','AssignmentOperator',1,'p_AssignmentOperator','dowhile_yacc.py',953),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','dowhile_yacc.py',958),
]
